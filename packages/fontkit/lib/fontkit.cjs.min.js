"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("restructure"),t=require("fs"),a=require("@babel/runtime/helpers/applyDecoratedDescriptor"),n=require("restructure/src/utils"),r=require("deep-equal"),l=require("unicode-properties"),s=require("unicode-trie"),i=require("dfa"),o=require("clone"),u=require("tiny-inflate"),d=require("brotli/decompress");function f(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=f(e),h=f(t),p=f(a),g=f(r),y=f(l),m=f(s),b=f(i),w=f(o),v=f(u),_=f(d),C={logErrors:!1};let S=[];function x(e,t,a){if(a.get){let e=a.get;a.get=function(){let a=e.call(this);return Object.defineProperty(this,t,{value:a}),a}}else if("function"==typeof a.value){let e=a.value;return{get(){let a=new Map;function n(...t){let n=t.length>0?t[0]:"value";if(a.has(n))return a.get(n);let r=e.apply(this,t);return a.set(n,r),r}return Object.defineProperty(this,t,{value:n}),n}}}}C.registerFormat=function(e){S.push(e)},C.openSync=function(e,t){let a=h.default.readFileSync(e);return C.create(a,t)},C.open=function(e,t,a){"function"==typeof t&&(a=t,t=null),h.default.readFile(e,(function(e,n){if(e)return a(e);try{var r=C.create(n,t)}catch(e){return a(e)}return a(null,r)}))},C.create=function(e,t){for(let a=0;a<S.length;a++){let n=S[a];if(n.probe(e)){let a=new n(new c.default.DecodeStream(e));return t?a.getFont(t):a}}throw new Error("Unknown font format")},C.defaultLanguage="en",C.setDefaultLanguage=function(e="en"){C.defaultLanguage=e};let k=new c.default.Struct({firstCode:c.default.uint16,entryCount:c.default.uint16,idDelta:c.default.int16,idRangeOffset:c.default.uint16}),A=new c.default.Struct({startCharCode:c.default.uint32,endCharCode:c.default.uint32,glyphID:c.default.uint32}),P=new c.default.Struct({startUnicodeValue:c.default.uint24,additionalCount:c.default.uint8}),I=new c.default.Struct({unicodeValue:c.default.uint24,glyphID:c.default.uint16}),O=new c.default.Array(P,c.default.uint32),F=new c.default.Array(I,c.default.uint32),D=new c.default.Struct({varSelector:c.default.uint24,defaultUVS:new c.default.Pointer(c.default.uint32,O,{type:"parent"}),nonDefaultUVS:new c.default.Pointer(c.default.uint32,F,{type:"parent"})}),T=new c.default.VersionedStruct(c.default.uint16,{0:{length:c.default.uint16,language:c.default.uint16,codeMap:new c.default.LazyArray(c.default.uint8,256)},2:{length:c.default.uint16,language:c.default.uint16,subHeaderKeys:new c.default.Array(c.default.uint16,256),subHeaderCount:e=>Math.max.apply(Math,e.subHeaderKeys),subHeaders:new c.default.LazyArray(k,"subHeaderCount"),glyphIndexArray:new c.default.LazyArray(c.default.uint16,"subHeaderCount")},4:{length:c.default.uint16,language:c.default.uint16,segCountX2:c.default.uint16,segCount:e=>e.segCountX2>>1,searchRange:c.default.uint16,entrySelector:c.default.uint16,rangeShift:c.default.uint16,endCode:new c.default.LazyArray(c.default.uint16,"segCount"),reservedPad:new c.default.Reserved(c.default.uint16),startCode:new c.default.LazyArray(c.default.uint16,"segCount"),idDelta:new c.default.LazyArray(c.default.int16,"segCount"),idRangeOffset:new c.default.LazyArray(c.default.uint16,"segCount"),glyphIndexArray:new c.default.LazyArray(c.default.uint16,(e=>(e.length-e._currentOffset)/2))},6:{length:c.default.uint16,language:c.default.uint16,firstCode:c.default.uint16,entryCount:c.default.uint16,glyphIndices:new c.default.LazyArray(c.default.uint16,"entryCount")},8:{reserved:new c.default.Reserved(c.default.uint16),length:c.default.uint32,language:c.default.uint16,is32:new c.default.LazyArray(c.default.uint8,8192),nGroups:c.default.uint32,groups:new c.default.LazyArray(A,"nGroups")},10:{reserved:new c.default.Reserved(c.default.uint16),length:c.default.uint32,language:c.default.uint32,firstCode:c.default.uint32,entryCount:c.default.uint32,glyphIndices:new c.default.LazyArray(c.default.uint16,"numChars")},12:{reserved:new c.default.Reserved(c.default.uint16),length:c.default.uint32,language:c.default.uint32,nGroups:c.default.uint32,groups:new c.default.LazyArray(A,"nGroups")},13:{reserved:new c.default.Reserved(c.default.uint16),length:c.default.uint32,language:c.default.uint32,nGroups:c.default.uint32,groups:new c.default.LazyArray(A,"nGroups")},14:{length:c.default.uint32,numRecords:c.default.uint32,varSelectors:new c.default.LazyArray(D,"numRecords")}}),L=new c.default.Struct({platformID:c.default.uint16,encodingID:c.default.uint16,table:new c.default.Pointer(c.default.uint32,T,{type:"parent",lazy:!0})});var M=new c.default.Struct({version:c.default.uint16,numSubtables:c.default.uint16,tables:new c.default.Array(L,"numSubtables")}),G=new c.default.Struct({version:c.default.int32,revision:c.default.int32,checkSumAdjustment:c.default.uint32,magicNumber:c.default.uint32,flags:c.default.uint16,unitsPerEm:c.default.uint16,created:new c.default.Array(c.default.int32,2),modified:new c.default.Array(c.default.int32,2),xMin:c.default.int16,yMin:c.default.int16,xMax:c.default.int16,yMax:c.default.int16,macStyle:new c.default.Bitfield(c.default.uint16,["bold","italic","underline","outline","shadow","condensed","extended"]),lowestRecPPEM:c.default.uint16,fontDirectionHint:c.default.int16,indexToLocFormat:c.default.int16,glyphDataFormat:c.default.int16}),B=new c.default.Struct({version:c.default.int32,ascent:c.default.int16,descent:c.default.int16,lineGap:c.default.int16,advanceWidthMax:c.default.uint16,minLeftSideBearing:c.default.int16,minRightSideBearing:c.default.int16,xMaxExtent:c.default.int16,caretSlopeRise:c.default.int16,caretSlopeRun:c.default.int16,caretOffset:c.default.int16,reserved:new c.default.Reserved(c.default.int16,4),metricDataFormat:c.default.int16,numberOfMetrics:c.default.uint16});let E=new c.default.Struct({advance:c.default.uint16,bearing:c.default.int16});var R=new c.default.Struct({metrics:new c.default.LazyArray(E,(e=>e.parent.hhea.numberOfMetrics)),bearings:new c.default.LazyArray(c.default.int16,(e=>e.parent.maxp.numGlyphs-e.parent.hhea.numberOfMetrics))}),V=new c.default.Struct({version:c.default.int32,numGlyphs:c.default.uint16,maxPoints:c.default.uint16,maxContours:c.default.uint16,maxComponentPoints:c.default.uint16,maxComponentContours:c.default.uint16,maxZones:c.default.uint16,maxTwilightPoints:c.default.uint16,maxStorage:c.default.uint16,maxFunctionDefs:c.default.uint16,maxInstructionDefs:c.default.uint16,maxStackElements:c.default.uint16,maxSizeOfInstructions:c.default.uint16,maxComponentElements:c.default.uint16,maxComponentDepth:c.default.uint16});function z(e,t,a=0){return 1===e&&N[a]?N[a]:U[e][t]}const U=[["utf16be","utf16be","utf16be","utf16be","utf16be","utf16be"],["macroman","shift-jis","big5","euc-kr","iso-8859-6","iso-8859-8","macgreek","maccyrillic","symbol","Devanagari","Gurmukhi","Gujarati","Oriya","Bengali","Tamil","Telugu","Kannada","Malayalam","Sinhalese","Burmese","Khmer","macthai","Laotian","Georgian","Armenian","gb-2312-80","Tibetan","Mongolian","Geez","maccenteuro","Vietnamese","Sindhi"],["ascii"],["symbol","utf16be","shift-jis","gb18030","big5","wansung","johab",null,null,null,"utf16be"]],N={15:"maciceland",17:"macturkish",18:"maccroatian",24:"maccenteuro",25:"maccenteuro",26:"maccenteuro",27:"maccenteuro",28:"maccenteuro",30:"maciceland",37:"macromania",38:"maccenteuro",39:"maccenteuro",40:"maccenteuro",143:"macinuit",146:"macgaelic"},q=[[],{0:"en",30:"fo",60:"ks",90:"rw",1:"fr",31:"fa",61:"ku",91:"rn",2:"de",32:"ru",62:"sd",92:"ny",3:"it",33:"zh",63:"bo",93:"mg",4:"nl",34:"nl-BE",64:"ne",94:"eo",5:"sv",35:"ga",65:"sa",128:"cy",6:"es",36:"sq",66:"mr",129:"eu",7:"da",37:"ro",67:"bn",130:"ca",8:"pt",38:"cz",68:"as",131:"la",9:"no",39:"sk",69:"gu",132:"qu",10:"he",40:"si",70:"pa",133:"gn",11:"ja",41:"yi",71:"or",134:"ay",12:"ar",42:"sr",72:"ml",135:"tt",13:"fi",43:"mk",73:"kn",136:"ug",14:"el",44:"bg",74:"ta",137:"dz",15:"is",45:"uk",75:"te",138:"jv",16:"mt",46:"be",76:"si",139:"su",17:"tr",47:"uz",77:"my",140:"gl",18:"hr",48:"kk",78:"km",141:"af",19:"zh-Hant",49:"az-Cyrl",79:"lo",142:"br",20:"ur",50:"az-Arab",80:"vi",143:"iu",21:"hi",51:"hy",81:"id",144:"gd",22:"th",52:"ka",82:"tl",145:"gv",23:"ko",53:"mo",83:"ms",146:"ga",24:"lt",54:"ky",84:"ms-Arab",147:"to",25:"pl",55:"tg",85:"am",148:"el-polyton",26:"hu",56:"tk",86:"ti",149:"kl",27:"es",57:"mn-CN",87:"om",150:"az",28:"lv",58:"mn",88:"so",151:"nn",29:"se",59:"ps",89:"sw"},[],{1078:"af",16393:"en-IN",1159:"rw",1074:"tn",1052:"sq",6153:"en-IE",1089:"sw",1115:"si",1156:"gsw",8201:"en-JM",1111:"kok",1051:"sk",1118:"am",17417:"en-MY",1042:"ko",1060:"sl",5121:"ar-DZ",5129:"en-NZ",1088:"ky",11274:"es-AR",15361:"ar-BH",13321:"en-PH",1108:"lo",16394:"es-BO",3073:"ar",18441:"en-SG",1062:"lv",13322:"es-CL",2049:"ar-IQ",7177:"en-ZA",1063:"lt",9226:"es-CO",11265:"ar-JO",11273:"en-TT",2094:"dsb",5130:"es-CR",13313:"ar-KW",2057:"en-GB",1134:"lb",7178:"es-DO",12289:"ar-LB",1033:"en",1071:"mk",12298:"es-EC",4097:"ar-LY",12297:"en-ZW",2110:"ms-BN",17418:"es-SV",6145:"ary",1061:"et",1086:"ms",4106:"es-GT",8193:"ar-OM",1080:"fo",1100:"ml",18442:"es-HN",16385:"ar-QA",1124:"fil",1082:"mt",2058:"es-MX",1025:"ar-SA",1035:"fi",1153:"mi",19466:"es-NI",10241:"ar-SY",2060:"fr-BE",1146:"arn",6154:"es-PA",7169:"aeb",3084:"fr-CA",1102:"mr",15370:"es-PY",14337:"ar-AE",1036:"fr",1148:"moh",10250:"es-PE",9217:"ar-YE",5132:"fr-LU",1104:"mn",20490:"es-PR",1067:"hy",6156:"fr-MC",2128:"mn-CN",3082:"es",1101:"as",4108:"fr-CH",1121:"ne",1034:"es",2092:"az-Cyrl",1122:"fy",1044:"nb",21514:"es-US",1068:"az",1110:"gl",2068:"nn",14346:"es-UY",1133:"ba",1079:"ka",1154:"oc",8202:"es-VE",1069:"eu",3079:"de-AT",1096:"or",2077:"sv-FI",1059:"be",1031:"de",1123:"ps",1053:"sv",2117:"bn",5127:"de-LI",1045:"pl",1114:"syr",1093:"bn-IN",4103:"de-LU",1046:"pt",1064:"tg",8218:"bs-Cyrl",2055:"de-CH",2070:"pt-PT",2143:"tzm",5146:"bs",1032:"el",1094:"pa",1097:"ta",1150:"br",1135:"kl",1131:"qu-BO",1092:"tt",1026:"bg",1095:"gu",2155:"qu-EC",1098:"te",1027:"ca",1128:"ha",3179:"qu",1054:"th",3076:"zh-HK",1037:"he",1048:"ro",1105:"bo",5124:"zh-MO",1081:"hi",1047:"rm",1055:"tr",2052:"zh",1038:"hu",1049:"ru",1090:"tk",4100:"zh-SG",1039:"is",9275:"smn",1152:"ug",1028:"zh-TW",1136:"ig",4155:"smj-NO",1058:"uk",1155:"co",1057:"id",5179:"smj",1070:"hsb",1050:"hr",1117:"iu",3131:"se-FI",1056:"ur",4122:"hr-BA",2141:"iu-Latn",1083:"se",2115:"uz-Cyrl",1029:"cs",2108:"ga",2107:"se-SE",1091:"uz",1030:"da",1076:"xh",8251:"sms",1066:"vi",1164:"prs",1077:"zu",6203:"sma-NO",1106:"cy",1125:"dv",1040:"it",7227:"sms",1160:"wo",2067:"nl-BE",2064:"it-CH",1103:"sa",1157:"sah",1043:"nl",1041:"ja",7194:"sr-Cyrl-BA",1144:"ii",3081:"en-AU",1099:"kn",3098:"sr",1130:"yo",10249:"en-BZ",1087:"kk",6170:"sr-Latn-BA",4105:"en-CA",1107:"km",2074:"sr-Latn",9225:"en-029",1158:"quc",1132:"nso"}];let j=new c.default.Struct({platformID:c.default.uint16,encodingID:c.default.uint16,languageID:c.default.uint16,nameID:c.default.uint16,length:c.default.uint16,string:new c.default.Pointer(c.default.uint16,new c.default.String("length",(e=>z(e.platformID,e.encodingID,e.languageID))),{type:"parent",relativeTo:"parent.stringOffset",allowNull:!1})}),H=new c.default.Struct({length:c.default.uint16,tag:new c.default.Pointer(c.default.uint16,new c.default.String("length","utf16be"),{type:"parent",relativeTo:"stringOffset"})});var Y=new c.default.VersionedStruct(c.default.uint16,{0:{count:c.default.uint16,stringOffset:c.default.uint16,records:new c.default.Array(j,"count")},1:{count:c.default.uint16,stringOffset:c.default.uint16,records:new c.default.Array(j,"count"),langTagCount:c.default.uint16,langTags:new c.default.Array(H,"langTagCount")}});const W=["copyright","fontFamily","fontSubfamily","uniqueSubfamily","fullName","version","postscriptName","trademark","manufacturer","designer","description","vendorURL","designerURL","license","licenseURL",null,"preferredFamily","preferredSubfamily","compatibleFull","sampleText","postscriptCIDFontName","wwsFamilyName","wwsSubfamilyName"];Y.process=function(e){var t={};for(let e of this.records){let a=q[e.platformID][e.languageID];null==a&&null!=this.langTags&&e.languageID>=32768&&(a=this.langTags[e.languageID-32768].tag),null==a&&(a=e.platformID+"-"+e.languageID);let n=e.nameID>=256?"fontFeatures":W[e.nameID]||e.nameID;null==t[n]&&(t[n]={});let r=t[n];e.nameID>=256&&(r=r[e.nameID]||(r[e.nameID]={})),"string"!=typeof e.string&&"string"==typeof r[a]||(r[a]=e.string)}this.records=t},Y.preEncode=function(){if(Array.isArray(this.records))return;this.version=0;let e=[];for(let t in this.records){let a=this.records[t];"fontFeatures"!==t&&(e.push({platformID:3,encodingID:1,languageID:1033,nameID:W.indexOf(t),length:Buffer.byteLength(a.en,"utf16le"),string:a.en}),"postscriptName"===t&&e.push({platformID:1,encodingID:0,languageID:0,nameID:W.indexOf(t),length:a.en.length,string:a.en}))}this.records=e,this.count=e.length,this.stringOffset=Y.size(this,null,!1)};var K=new c.default.VersionedStruct(c.default.uint16,{header:{xAvgCharWidth:c.default.int16,usWeightClass:c.default.uint16,usWidthClass:c.default.uint16,fsType:new c.default.Bitfield(c.default.uint16,[null,"noEmbedding","viewOnly","editable",null,null,null,null,"noSubsetting","bitmapOnly"]),ySubscriptXSize:c.default.int16,ySubscriptYSize:c.default.int16,ySubscriptXOffset:c.default.int16,ySubscriptYOffset:c.default.int16,ySuperscriptXSize:c.default.int16,ySuperscriptYSize:c.default.int16,ySuperscriptXOffset:c.default.int16,ySuperscriptYOffset:c.default.int16,yStrikeoutSize:c.default.int16,yStrikeoutPosition:c.default.int16,sFamilyClass:c.default.int16,panose:new c.default.Array(c.default.uint8,10),ulCharRange:new c.default.Array(c.default.uint32,4),vendorID:new c.default.String(4),fsSelection:new c.default.Bitfield(c.default.uint16,["italic","underscore","negative","outlined","strikeout","bold","regular","useTypoMetrics","wws","oblique"]),usFirstCharIndex:c.default.uint16,usLastCharIndex:c.default.uint16},0:{},1:{typoAscender:c.default.int16,typoDescender:c.default.int16,typoLineGap:c.default.int16,winAscent:c.default.uint16,winDescent:c.default.uint16,codePageRange:new c.default.Array(c.default.uint32,2)},2:{typoAscender:c.default.int16,typoDescender:c.default.int16,typoLineGap:c.default.int16,winAscent:c.default.uint16,winDescent:c.default.uint16,codePageRange:new c.default.Array(c.default.uint32,2),xHeight:c.default.int16,capHeight:c.default.int16,defaultChar:c.default.uint16,breakChar:c.default.uint16,maxContent:c.default.uint16},5:{typoAscender:c.default.int16,typoDescender:c.default.int16,typoLineGap:c.default.int16,winAscent:c.default.uint16,winDescent:c.default.uint16,codePageRange:new c.default.Array(c.default.uint32,2),xHeight:c.default.int16,capHeight:c.default.int16,defaultChar:c.default.uint16,breakChar:c.default.uint16,maxContent:c.default.uint16,usLowerOpticalPointSize:c.default.uint16,usUpperOpticalPointSize:c.default.uint16}});let X=K.versions;X[3]=X[4]=X[2];var J=new c.default.VersionedStruct(c.default.fixed32,{header:{italicAngle:c.default.fixed32,underlinePosition:c.default.int16,underlineThickness:c.default.int16,isFixedPitch:c.default.uint32,minMemType42:c.default.uint32,maxMemType42:c.default.uint32,minMemType1:c.default.uint32,maxMemType1:c.default.uint32},1:{},2:{numberOfGlyphs:c.default.uint16,glyphNameIndex:new c.default.Array(c.default.uint16,"numberOfGlyphs"),names:new c.default.Array(new c.default.String(c.default.uint8))},2.5:{numberOfGlyphs:c.default.uint16,offsets:new c.default.Array(c.default.uint8,"numberOfGlyphs")},3:{},4:{map:new c.default.Array(c.default.uint32,(e=>e.parent.maxp.numGlyphs))}}),Z=new c.default.Struct({controlValues:new c.default.Array(c.default.int16)}),$=new c.default.Struct({instructions:new c.default.Array(c.default.uint8)});let Q=new c.default.VersionedStruct("head.indexToLocFormat",{0:{offsets:new c.default.Array(c.default.uint16)},1:{offsets:new c.default.Array(c.default.uint32)}});Q.process=function(){if(0===this.version)for(let e=0;e<this.offsets.length;e++)this.offsets[e]<<=1},Q.preEncode=function(){if(0===this.version)for(let e=0;e<this.offsets.length;e++)this.offsets[e]>>>=1};var ee=new c.default.Struct({controlValueProgram:new c.default.Array(c.default.uint8)}),te=new c.default.Array(new c.default.Buffer);class ae{constructor(e){this.type=e}getCFFVersion(e){for(;e&&!e.hdrSize;)e=e.parent;return e?e.version:-1}decode(e,t){let a=this.getCFFVersion(t)>=2?e.readUInt32BE():e.readUInt16BE();if(0===a)return[];let n,r=e.readUInt8();if(1===r)n=c.default.uint8;else if(2===r)n=c.default.uint16;else if(3===r)n=c.default.uint24;else{if(4!==r)throw new Error(`Bad offset size in CFFIndex: ${r} ${e.pos}`);n=c.default.uint32}let l=[],s=e.pos+(a+1)*r-1,i=n.decode(e);for(let r=0;r<a;r++){let a=n.decode(e);if(null!=this.type){let n=e.pos;e.pos=s+i,t.length=a-i,l.push(this.type.decode(e,t)),e.pos=n}else l.push({offset:s+i,length:a-i});i=a}return e.pos=s+i,l}size(e,t){let a=2;if(0===e.length)return a;let n,r=this.type||new c.default.Buffer,l=1;for(let a=0;a<e.length;a++){let n=e[a];l+=r.size(n,t)}if(l<=255)n=c.default.uint8;else if(l<=65535)n=c.default.uint16;else if(l<=16777215)n=c.default.uint24;else{if(!(l<=4294967295))throw new Error("Bad offset in CFFIndex");n=c.default.uint32}return a+=1+n.size()*(e.length+1),a+=l-1,a}encode(e,t,a){if(e.writeUInt16BE(t.length),0===t.length)return;let n,r=this.type||new c.default.Buffer,l=[],s=1;for(let e of t){let t=r.size(e,a);l.push(t),s+=t}if(s<=255)n=c.default.uint8;else if(s<=65535)n=c.default.uint16;else if(s<=16777215)n=c.default.uint24;else{if(!(s<=4294967295))throw new Error("Bad offset in CFFIndex");n=c.default.uint32}e.writeUInt8(n.size()),s=1,n.encode(e,s);for(let t of l)s+=t,n.encode(e,s);for(let n of t)r.encode(e,n,a)}}const ne=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"],re={".":10,E:11,"E-":12,"-":14};class le{static decode(e,t){if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return 256*(t-247)+e.readUInt8()+108;if(251<=t&&t<=254)return 256*-(t-251)-e.readUInt8()-108;if(28===t)return e.readInt16BE();if(29===t)return e.readInt32BE();if(30===t){let t="";for(;;){let a=e.readUInt8(),n=a>>4;if(15===n)break;t+=ne[n];let r=15&a;if(15===r)break;t+=ne[r]}return parseFloat(t)}return null}static size(e){if(e.forceLarge&&(e=32768),(0|e)!==e){let t=""+e;return 1+Math.ceil((t.length+1)/2)}return-107<=e&&e<=107?1:108<=e&&e<=1131||-1131<=e&&e<=-108?2:-32768<=e&&e<=32767?3:5}static encode(e,t){let a=Number(t);if(t.forceLarge)return e.writeUInt8(29),e.writeInt32BE(a);if((0|a)===a)return-107<=a&&a<=107?e.writeUInt8(a+139):108<=a&&a<=1131?(a-=108,e.writeUInt8(247+(a>>8)),e.writeUInt8(255&a)):-1131<=a&&a<=-108?(a=-a-108,e.writeUInt8(251+(a>>8)),e.writeUInt8(255&a)):-32768<=a&&a<=32767?(e.writeUInt8(28),e.writeInt16BE(a)):(e.writeUInt8(29),e.writeInt32BE(a));{e.writeUInt8(30);let t=""+a;for(let a=0;a<t.length;a+=2){let r=t[a],l=re[r]||+r;if(a===t.length-1)var n=15;else{let e=t[a+1];n=re[e]||+e}e.writeUInt8(l<<4|15&n)}if(15!==n)return e.writeUInt8(240)}}}class se{constructor(e=[]){this.ops=e,this.fields={};for(let t of e){let e=Array.isArray(t[0])?t[0][0]<<8|t[0][1]:t[0];this.fields[e]=t}}decodeOperands(e,t,a,n){if(Array.isArray(e))return n.map(((n,r)=>this.decodeOperands(e[r],t,a,[n])));if(null!=e.decode)return e.decode(t,a,n);switch(e){case"number":case"offset":case"sid":return n[0];case"boolean":return!!n[0];default:return n}}encodeOperands(e,t,a,n){return Array.isArray(e)?n.map(((n,r)=>this.encodeOperands(e[r],t,a,n)[0])):null!=e.encode?e.encode(t,n,a):"number"==typeof n?[n]:"boolean"==typeof n?[+n]:Array.isArray(n)?n:[n]}decode(e,t){let a=e.pos+t.length,r={},l=[];Object.defineProperties(r,{parent:{value:t},_startOffset:{value:e.pos}});for(let e in this.fields){let t=this.fields[e];r[t[1]]=t[3]}for(;e.pos<a;){let t=e.readUInt8();if(t<28){12===t&&(t=t<<8|e.readUInt8());let a=this.fields[t];if(!a)throw new Error(`Unknown operator ${t}`);let s=this.decodeOperands(a[2],e,r,l);null!=s&&(s instanceof n.PropertyDescriptor?Object.defineProperty(r,a[1],s):r[a[1]]=s),l=[]}else l.push(le.decode(e,t))}return r}size(e,t,a=!0){let n={parent:t,val:e,pointerSize:0,startOffset:t.startOffset||0},r=0;for(let t in this.fields){let a=this.fields[t],l=e[a[1]];if(null==l||g.default(l,a[3]))continue;let s=this.encodeOperands(a[2],null,n,l);for(let e of s)r+=le.size(e);r+=(Array.isArray(a[0])?a[0]:[a[0]]).length}return a&&(r+=n.pointerSize),r}encode(e,t,a){let n={pointers:[],startOffset:e.pos,parent:a,val:t,pointerSize:0};n.pointerOffset=e.pos+this.size(t,n,!1);for(let a of this.ops){let r=t[a[1]];if(null==r||g.default(r,a[3]))continue;let l=this.encodeOperands(a[2],e,n,r);for(let t of l)le.encode(e,t);let s=Array.isArray(a[0])?a[0]:[a[0]];for(let t of s)e.writeUInt8(t)}let r=0;for(;r<n.pointers.length;){let t=n.pointers[r++];t.type.encode(e,t.val,t.parent)}}}class ie extends c.default.Pointer{constructor(e,t={}){null==t.type&&(t.type="global"),super(null,e,t)}decode(e,t,a){return this.offsetType={decode:()=>a[0]},super.decode(e,t,a)}encode(e,t,a){if(!e)return this.offsetType={size:()=>0},this.size(t,a),[new oe(0)];let n=null;return this.offsetType={encode:(e,t)=>n=t},super.encode(e,t,a),[new oe(n)]}}class oe{constructor(e){this.val=e,this.forceLarge=!0}valueOf(){return this.val}}var ue=new se([[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","number",.039625],[[12,10],"BlueShift","number",7],[[12,11],"BlueFuzz","number",1],[10,"StdHW","number",null],[11,"StdVW","number",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","boolean",!1],[[12,17],"LanguageGroup","number",0],[[12,18],"ExpansionFactor","number",.06],[[12,19],"initialRandomSeed","number",0],[20,"defaultWidthX","number",0],[21,"nominalWidthX","number",0],[22,"vsindex","number",0],[23,"blend",class{static decode(e,t,a){let n=a.pop();for(;a.length>n;)a.pop()}},null],[19,"Subrs",new ie(new ae,{type:"local"}),null]]),de=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"];let fe=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],ce=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"],he=new c.default.Struct({reserved:new c.default.Reserved(c.default.uint16),reqFeatureIndex:c.default.uint16,featureCount:c.default.uint16,featureIndexes:new c.default.Array(c.default.uint16,"featureCount")}),pe=new c.default.Struct({tag:new c.default.String(4),langSys:new c.default.Pointer(c.default.uint16,he,{type:"parent"})}),ge=new c.default.Struct({defaultLangSys:new c.default.Pointer(c.default.uint16,he),count:c.default.uint16,langSysRecords:new c.default.Array(pe,"count")}),ye=new c.default.Struct({tag:new c.default.String(4),script:new c.default.Pointer(c.default.uint16,ge,{type:"parent"})}),me=new c.default.Array(ye,c.default.uint16),be=new c.default.Struct({featureParams:c.default.uint16,lookupCount:c.default.uint16,lookupListIndexes:new c.default.Array(c.default.uint16,"lookupCount")}),we=new c.default.Struct({tag:new c.default.String(4),feature:new c.default.Pointer(c.default.uint16,be,{type:"parent"})}),ve=new c.default.Array(we,c.default.uint16),_e=new c.default.Struct({markAttachmentType:c.default.uint8,flags:new c.default.Bitfield(c.default.uint8,["rightToLeft","ignoreBaseGlyphs","ignoreLigatures","ignoreMarks","useMarkFilteringSet"])});function Ce(e){let t=new c.default.Struct({lookupType:c.default.uint16,flags:_e,subTableCount:c.default.uint16,subTables:new c.default.Array(new c.default.Pointer(c.default.uint16,e),"subTableCount"),markFilteringSet:new c.default.Optional(c.default.uint16,(e=>e.flags.flags.useMarkFilteringSet))});return new c.default.LazyArray(new c.default.Pointer(c.default.uint16,t),c.default.uint16)}let Se=new c.default.Struct({start:c.default.uint16,end:c.default.uint16,startCoverageIndex:c.default.uint16}),xe=new c.default.VersionedStruct(c.default.uint16,{1:{glyphCount:c.default.uint16,glyphs:new c.default.Array(c.default.uint16,"glyphCount")},2:{rangeCount:c.default.uint16,rangeRecords:new c.default.Array(Se,"rangeCount")}}),ke=new c.default.Struct({start:c.default.uint16,end:c.default.uint16,class:c.default.uint16}),Ae=new c.default.VersionedStruct(c.default.uint16,{1:{startGlyph:c.default.uint16,glyphCount:c.default.uint16,classValueArray:new c.default.Array(c.default.uint16,"glyphCount")},2:{classRangeCount:c.default.uint16,classRangeRecord:new c.default.Array(ke,"classRangeCount")}}),Pe=new c.default.Struct({a:c.default.uint16,b:c.default.uint16,deltaFormat:c.default.uint16}),Ie=new c.default.Struct({sequenceIndex:c.default.uint16,lookupListIndex:c.default.uint16}),Oe=new c.default.Struct({glyphCount:c.default.uint16,lookupCount:c.default.uint16,input:new c.default.Array(c.default.uint16,(e=>e.glyphCount-1)),lookupRecords:new c.default.Array(Ie,"lookupCount")}),Fe=new c.default.Array(new c.default.Pointer(c.default.uint16,Oe),c.default.uint16),De=new c.default.Struct({glyphCount:c.default.uint16,lookupCount:c.default.uint16,classes:new c.default.Array(c.default.uint16,(e=>e.glyphCount-1)),lookupRecords:new c.default.Array(Ie,"lookupCount")}),Te=new c.default.Array(new c.default.Pointer(c.default.uint16,De),c.default.uint16),Le=new c.default.VersionedStruct(c.default.uint16,{1:{coverage:new c.default.Pointer(c.default.uint16,xe),ruleSetCount:c.default.uint16,ruleSets:new c.default.Array(new c.default.Pointer(c.default.uint16,Fe),"ruleSetCount")},2:{coverage:new c.default.Pointer(c.default.uint16,xe),classDef:new c.default.Pointer(c.default.uint16,Ae),classSetCnt:c.default.uint16,classSet:new c.default.Array(new c.default.Pointer(c.default.uint16,Te),"classSetCnt")},3:{glyphCount:c.default.uint16,lookupCount:c.default.uint16,coverages:new c.default.Array(new c.default.Pointer(c.default.uint16,xe),"glyphCount"),lookupRecords:new c.default.Array(Ie,"lookupCount")}}),Me=new c.default.Struct({backtrackGlyphCount:c.default.uint16,backtrack:new c.default.Array(c.default.uint16,"backtrackGlyphCount"),inputGlyphCount:c.default.uint16,input:new c.default.Array(c.default.uint16,(e=>e.inputGlyphCount-1)),lookaheadGlyphCount:c.default.uint16,lookahead:new c.default.Array(c.default.uint16,"lookaheadGlyphCount"),lookupCount:c.default.uint16,lookupRecords:new c.default.Array(Ie,"lookupCount")}),Ge=new c.default.Array(new c.default.Pointer(c.default.uint16,Me),c.default.uint16),Be=new c.default.VersionedStruct(c.default.uint16,{1:{coverage:new c.default.Pointer(c.default.uint16,xe),chainCount:c.default.uint16,chainRuleSets:new c.default.Array(new c.default.Pointer(c.default.uint16,Ge),"chainCount")},2:{coverage:new c.default.Pointer(c.default.uint16,xe),backtrackClassDef:new c.default.Pointer(c.default.uint16,Ae),inputClassDef:new c.default.Pointer(c.default.uint16,Ae),lookaheadClassDef:new c.default.Pointer(c.default.uint16,Ae),chainCount:c.default.uint16,chainClassSet:new c.default.Array(new c.default.Pointer(c.default.uint16,Ge),"chainCount")},3:{backtrackGlyphCount:c.default.uint16,backtrackCoverage:new c.default.Array(new c.default.Pointer(c.default.uint16,xe),"backtrackGlyphCount"),inputGlyphCount:c.default.uint16,inputCoverage:new c.default.Array(new c.default.Pointer(c.default.uint16,xe),"inputGlyphCount"),lookaheadGlyphCount:c.default.uint16,lookaheadCoverage:new c.default.Array(new c.default.Pointer(c.default.uint16,xe),"lookaheadGlyphCount"),lookupCount:c.default.uint16,lookupRecords:new c.default.Array(Ie,"lookupCount")}}),Ee=new c.default.Fixed(16,"BE",14),Re=new c.default.Struct({startCoord:Ee,peakCoord:Ee,endCoord:Ee}),Ve=new c.default.Struct({axisCount:c.default.uint16,regionCount:c.default.uint16,variationRegions:new c.default.Array(new c.default.Array(Re,"axisCount"),"regionCount")}),ze=new c.default.Struct({shortDeltas:new c.default.Array(c.default.int16,(e=>e.parent.shortDeltaCount)),regionDeltas:new c.default.Array(c.default.int8,(e=>e.parent.regionIndexCount-e.parent.shortDeltaCount)),deltas:e=>e.shortDeltas.concat(e.regionDeltas)}),Ue=new c.default.Struct({itemCount:c.default.uint16,shortDeltaCount:c.default.uint16,regionIndexCount:c.default.uint16,regionIndexes:new c.default.Array(c.default.uint16,"regionIndexCount"),deltaSets:new c.default.Array(ze,"itemCount")}),Ne=new c.default.Struct({format:c.default.uint16,variationRegionList:new c.default.Pointer(c.default.uint32,Ve),variationDataCount:c.default.uint16,itemVariationData:new c.default.Array(new c.default.Pointer(c.default.uint32,Ue),"variationDataCount")}),qe=new c.default.VersionedStruct(c.default.uint16,{1:{axisIndex:c.default.uint16,axisIndex:c.default.uint16,filterRangeMinValue:Ee,filterRangeMaxValue:Ee}}),je=new c.default.Struct({conditionCount:c.default.uint16,conditionTable:new c.default.Array(new c.default.Pointer(c.default.uint32,qe),"conditionCount")}),He=new c.default.Struct({featureIndex:c.default.uint16,alternateFeatureTable:new c.default.Pointer(c.default.uint32,be,{type:"parent"})}),Ye=new c.default.Struct({version:c.default.fixed32,substitutionCount:c.default.uint16,substitutions:new c.default.Array(He,"substitutionCount")}),We=new c.default.Struct({conditionSet:new c.default.Pointer(c.default.uint32,je,{type:"parent"}),featureTableSubstitution:new c.default.Pointer(c.default.uint32,Ye,{type:"parent"})}),Ke=new c.default.Struct({majorVersion:c.default.uint16,minorVersion:c.default.uint16,featureVariationRecordCount:c.default.uint32,featureVariationRecords:new c.default.Array(We,"featureVariationRecordCount")});class Xe{constructor(e,t){this.predefinedOps=e,this.type=t}decode(e,t,a){return this.predefinedOps[a[0]]?this.predefinedOps[a[0]]:this.type.decode(e,t,a)}size(e,t){return this.type.size(e,t)}encode(e,t,a){let n=this.predefinedOps.indexOf(t);return-1!==n?n:this.type.encode(e,t,a)}}class Je extends c.default.Number{constructor(){super("UInt8")}decode(e){return 127&c.default.uint8.decode(e)}}let Ze=new c.default.Struct({first:c.default.uint16,nLeft:c.default.uint8}),$e=new c.default.Struct({first:c.default.uint16,nLeft:c.default.uint16}),Qe=new Xe([fe,["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"]],new ie(new c.default.VersionedStruct(new Je,{0:{nCodes:c.default.uint8,codes:new c.default.Array(c.default.uint8,"nCodes")},1:{nRanges:c.default.uint8,ranges:new c.default.Array(Ze,"nRanges")}}),{lazy:!0}));class et extends c.default.Array{decode(e,t){let a=n.resolveLength(this.length,e,t),r=0,l=[];for(;r<a;){let a=this.type.decode(e,t);a.offset=r,r+=a.nLeft+1,l.push(a)}return l}}let tt=new Xe([ce,[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"]],new ie(new c.default.VersionedStruct(c.default.uint8,{0:{glyphs:new c.default.Array(c.default.uint16,(e=>e.parent.CharStrings.length-1))},1:{ranges:new et(Ze,(e=>e.parent.CharStrings.length-1))},2:{ranges:new et($e,(e=>e.parent.CharStrings.length-1))}}),{lazy:!0})),at=new c.default.Struct({first:c.default.uint16,fd:c.default.uint8}),nt=new c.default.Struct({first:c.default.uint32,fd:c.default.uint16}),rt=new c.default.VersionedStruct(c.default.uint8,{0:{fds:new c.default.Array(c.default.uint8,(e=>e.parent.CharStrings.length))},3:{nRanges:c.default.uint16,ranges:new c.default.Array(at,"nRanges"),sentinel:c.default.uint16},4:{nRanges:c.default.uint32,ranges:new c.default.Array(nt,"nRanges"),sentinel:c.default.uint32}}),lt=new ie(ue);class st{decode(e,t,a){return t.length=a[0],lt.decode(e,t,[a[1]])}size(e,t){return[ue.size(e,t,!1),lt.size(e,t)[0]]}encode(e,t,a){return[ue.size(t,a,!1),lt.encode(e,t,a)[0]]}}let it=new se([[18,"Private",new st,null],[[12,38],"FontName","sid",null],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[[12,5],"PaintType","number",0]]),ot=new se([[[12,30],"ROS",["sid","sid","number"],null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","boolean",!1],[[12,2],"ItalicAngle","number",0],[[12,3],"UnderlinePosition","number",-100],[[12,4],"UnderlineThickness","number",50],[[12,5],"PaintType","number",0],[[12,6],"CharstringType","number",2],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[13,"UniqueID","number",null],[5,"FontBBox","array",[0,0,0,0]],[[12,8],"StrokeWidth","number",0],[14,"XUID","array",null],[15,"charset",tt,ce],[16,"Encoding",Qe,fe],[17,"CharStrings",new ie(new ae),null],[18,"Private",new st,null],[[12,20],"SyntheticBase","number",null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","number",0],[[12,32],"CIDFontRevision","number",0],[[12,33],"CIDFontType","number",0],[[12,34],"CIDCount","number",8720],[[12,35],"UIDBase","number",null],[[12,37],"FDSelect",new ie(rt),null],[[12,36],"FDArray",new ie(new ae(it)),null],[[12,38],"FontName","sid",null]]),ut=new c.default.Struct({length:c.default.uint16,itemVariationStore:Ne}),dt=new se([[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[17,"CharStrings",new ie(new ae),null],[[12,37],"FDSelect",new ie(rt),null],[[12,36],"FDArray",new ie(new ae(it)),null],[24,"vstore",new ie(ut),null],[25,"maxstack","number",193]]),ft=new c.default.VersionedStruct(c.default.fixed16,{1:{hdrSize:c.default.uint8,offSize:c.default.uint8,nameIndex:new ae(new c.default.String("length")),topDictIndex:new ae(ot),stringIndex:new ae(new c.default.String("length")),globalSubrIndex:new ae},2:{hdrSize:c.default.uint8,length:c.default.uint16,topDict:dt,globalSubrIndex:new ae}});class ct{constructor(e){this.stream=e,this.decode()}static decode(e){return new ct(e)}decode(){this.stream.pos;let e=ft.decode(this.stream);for(let t in e){let a=e[t];this[t]=a}if(this.version<2){if(1!==this.topDictIndex.length)throw new Error("Only a single font is allowed in CFF");this.topDict=this.topDictIndex[0]}return this.isCIDFont=null!=this.topDict.ROS,this}string(e){return this.version>=2?null:e<de.length?de[e]:this.stringIndex[e-de.length]}get postscriptName(){return this.version<2?this.nameIndex[0]:null}get fullName(){return this.string(this.topDict.FullName)}get familyName(){return this.string(this.topDict.FamilyName)}getCharString(e){return this.stream.pos=this.topDict.CharStrings[e].offset,this.stream.readBuffer(this.topDict.CharStrings[e].length)}getGlyphName(e){if(this.version>=2)return null;if(this.isCIDFont)return null;let{charset:t}=this.topDict;if(Array.isArray(t))return t[e];if(0===e)return".notdef";switch(e-=1,t.version){case 0:return this.string(t.glyphs[e]);case 1:case 2:for(let a=0;a<t.ranges.length;a++){let n=t.ranges[a];if(n.offset<=e&&e<=n.offset+n.nLeft)return this.string(n.first+(e-n.offset))}}return null}fdForGlyph(e){if(!this.topDict.FDSelect)return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[e];case 3:case 4:let{ranges:t}=this.topDict.FDSelect,a=0,n=t.length-1;for(;a<=n;){let r=a+n>>1;if(e<t[r].first)n=r-1;else{if(!(r<n&&e>=t[r+1].first))return t[r].fd;a=r+1}}default:throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`)}}privateDictForGlyph(e){if(this.topDict.FDSelect){let t=this.fdForGlyph(e);return this.topDict.FDArray[t]?this.topDict.FDArray[t].Private:null}return this.version<2?this.topDict.Private:this.topDict.FDArray[0].Private}}let ht=new c.default.Struct({glyphIndex:c.default.uint16,vertOriginY:c.default.int16});var pt=new c.default.Struct({majorVersion:c.default.uint16,minorVersion:c.default.uint16,defaultVertOriginY:c.default.int16,numVertOriginYMetrics:c.default.uint16,metrics:new c.default.Array(ht,"numVertOriginYMetrics")});let gt=new c.default.Struct({height:c.default.uint8,width:c.default.uint8,horiBearingX:c.default.int8,horiBearingY:c.default.int8,horiAdvance:c.default.uint8,vertBearingX:c.default.int8,vertBearingY:c.default.int8,vertAdvance:c.default.uint8}),yt=new c.default.Struct({height:c.default.uint8,width:c.default.uint8,bearingX:c.default.int8,bearingY:c.default.int8,advance:c.default.uint8}),mt=new c.default.Struct({glyph:c.default.uint16,xOffset:c.default.int8,yOffset:c.default.int8});class bt{}class wt{}new c.default.VersionedStruct("version",{1:{metrics:yt,data:bt},2:{metrics:yt,data:wt},5:{data:wt},6:{metrics:gt,data:bt},7:{metrics:gt,data:wt},8:{metrics:yt,pad:new c.default.Reserved(c.default.uint8),numComponents:c.default.uint16,components:new c.default.Array(mt,"numComponents")},9:{metrics:gt,pad:new c.default.Reserved(c.default.uint8),numComponents:c.default.uint16,components:new c.default.Array(mt,"numComponents")},17:{metrics:yt,dataLen:c.default.uint32,data:new c.default.Buffer("dataLen")},18:{metrics:gt,dataLen:c.default.uint32,data:new c.default.Buffer("dataLen")},19:{dataLen:c.default.uint32,data:new c.default.Buffer("dataLen")}});let vt=new c.default.Struct({ascender:c.default.int8,descender:c.default.int8,widthMax:c.default.uint8,caretSlopeNumerator:c.default.int8,caretSlopeDenominator:c.default.int8,caretOffset:c.default.int8,minOriginSB:c.default.int8,minAdvanceSB:c.default.int8,maxBeforeBL:c.default.int8,minAfterBL:c.default.int8,pad:new c.default.Reserved(c.default.int8,2)}),_t=new c.default.Struct({glyphCode:c.default.uint16,offset:c.default.uint16}),Ct=new c.default.VersionedStruct(c.default.uint16,{header:{imageFormat:c.default.uint16,imageDataOffset:c.default.uint32},1:{offsetArray:new c.default.Array(c.default.uint32,(e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1))},2:{imageSize:c.default.uint32,bigMetrics:gt},3:{offsetArray:new c.default.Array(c.default.uint16,(e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1))},4:{numGlyphs:c.default.uint32,glyphArray:new c.default.Array(_t,(e=>e.numGlyphs+1))},5:{imageSize:c.default.uint32,bigMetrics:gt,numGlyphs:c.default.uint32,glyphCodeArray:new c.default.Array(c.default.uint16,"numGlyphs")}}),St=new c.default.Struct({firstGlyphIndex:c.default.uint16,lastGlyphIndex:c.default.uint16,subtable:new c.default.Pointer(c.default.uint32,Ct)}),xt=new c.default.Struct({indexSubTableArray:new c.default.Pointer(c.default.uint32,new c.default.Array(St,1),{type:"parent"}),indexTablesSize:c.default.uint32,numberOfIndexSubTables:c.default.uint32,colorRef:c.default.uint32,hori:vt,vert:vt,startGlyphIndex:c.default.uint16,endGlyphIndex:c.default.uint16,ppemX:c.default.uint8,ppemY:c.default.uint8,bitDepth:c.default.uint8,flags:new c.default.Bitfield(c.default.uint8,["horizontal","vertical"])});var kt=new c.default.Struct({version:c.default.uint32,numSizes:c.default.uint32,sizes:new c.default.Array(xt,"numSizes")});let At=new c.default.Struct({ppem:c.default.uint16,resolution:c.default.uint16,imageOffsets:new c.default.Array(new c.default.Pointer(c.default.uint32,"void"),(e=>e.parent.parent.maxp.numGlyphs+1))});var Pt=new c.default.Struct({version:c.default.uint16,flags:new c.default.Bitfield(c.default.uint16,["renderOutlines"]),numImgTables:c.default.uint32,imageTables:new c.default.Array(new c.default.Pointer(c.default.uint32,At),"numImgTables")});let It=new c.default.Struct({gid:c.default.uint16,paletteIndex:c.default.uint16}),Ot=new c.default.Struct({gid:c.default.uint16,firstLayerIndex:c.default.uint16,numLayers:c.default.uint16});var Ft=new c.default.Struct({version:c.default.uint16,numBaseGlyphRecords:c.default.uint16,baseGlyphRecord:new c.default.Pointer(c.default.uint32,new c.default.Array(Ot,"numBaseGlyphRecords")),layerRecords:new c.default.Pointer(c.default.uint32,new c.default.Array(It,"numLayerRecords"),{lazy:!0}),numLayerRecords:c.default.uint16});let Dt=new c.default.Struct({blue:c.default.uint8,green:c.default.uint8,red:c.default.uint8,alpha:c.default.uint8});var Tt=new c.default.VersionedStruct(c.default.uint16,{header:{numPaletteEntries:c.default.uint16,numPalettes:c.default.uint16,numColorRecords:c.default.uint16,colorRecords:new c.default.Pointer(c.default.uint32,new c.default.Array(Dt,"numColorRecords")),colorRecordIndices:new c.default.Array(c.default.uint16,"numPalettes")},0:{},1:{offsetPaletteTypeArray:new c.default.Pointer(c.default.uint32,new c.default.Array(c.default.uint32,"numPalettes")),offsetPaletteLabelArray:new c.default.Pointer(c.default.uint32,new c.default.Array(c.default.uint16,"numPalettes")),offsetPaletteEntryLabelArray:new c.default.Pointer(c.default.uint32,new c.default.Array(c.default.uint16,"numPaletteEntries"))}});let Lt=new c.default.VersionedStruct(c.default.uint16,{1:{coordinate:c.default.int16},2:{coordinate:c.default.int16,referenceGlyph:c.default.uint16,baseCoordPoint:c.default.uint16},3:{coordinate:c.default.int16,deviceTable:new c.default.Pointer(c.default.uint16,Pe)}}),Mt=new c.default.Struct({defaultIndex:c.default.uint16,baseCoordCount:c.default.uint16,baseCoords:new c.default.Array(new c.default.Pointer(c.default.uint16,Lt),"baseCoordCount")}),Gt=new c.default.Struct({tag:new c.default.String(4),minCoord:new c.default.Pointer(c.default.uint16,Lt,{type:"parent"}),maxCoord:new c.default.Pointer(c.default.uint16,Lt,{type:"parent"})}),Bt=new c.default.Struct({minCoord:new c.default.Pointer(c.default.uint16,Lt),maxCoord:new c.default.Pointer(c.default.uint16,Lt),featMinMaxCount:c.default.uint16,featMinMaxRecords:new c.default.Array(Gt,"featMinMaxCount")}),Et=new c.default.Struct({tag:new c.default.String(4),minMax:new c.default.Pointer(c.default.uint16,Bt,{type:"parent"})}),Rt=new c.default.Struct({baseValues:new c.default.Pointer(c.default.uint16,Mt),defaultMinMax:new c.default.Pointer(c.default.uint16,Bt),baseLangSysCount:c.default.uint16,baseLangSysRecords:new c.default.Array(Et,"baseLangSysCount")}),Vt=new c.default.Struct({tag:new c.default.String(4),script:new c.default.Pointer(c.default.uint16,Rt,{type:"parent"})}),zt=new c.default.Array(Vt,c.default.uint16),Ut=new c.default.Array(new c.default.String(4),c.default.uint16),Nt=new c.default.Struct({baseTagList:new c.default.Pointer(c.default.uint16,Ut),baseScriptList:new c.default.Pointer(c.default.uint16,zt)});var qt=new c.default.VersionedStruct(c.default.uint32,{header:{horizAxis:new c.default.Pointer(c.default.uint16,Nt),vertAxis:new c.default.Pointer(c.default.uint16,Nt)},65536:{},65537:{itemVariationStore:new c.default.Pointer(c.default.uint32,Ne)}});let jt=new c.default.Array(c.default.uint16,c.default.uint16),Ht=new c.default.Struct({coverage:new c.default.Pointer(c.default.uint16,xe),glyphCount:c.default.uint16,attachPoints:new c.default.Array(new c.default.Pointer(c.default.uint16,jt),"glyphCount")}),Yt=new c.default.VersionedStruct(c.default.uint16,{1:{coordinate:c.default.int16},2:{caretValuePoint:c.default.uint16},3:{coordinate:c.default.int16,deviceTable:new c.default.Pointer(c.default.uint16,Pe)}}),Wt=new c.default.Array(new c.default.Pointer(c.default.uint16,Yt),c.default.uint16),Kt=new c.default.Struct({coverage:new c.default.Pointer(c.default.uint16,xe),ligGlyphCount:c.default.uint16,ligGlyphs:new c.default.Array(new c.default.Pointer(c.default.uint16,Wt),"ligGlyphCount")}),Xt=new c.default.Struct({markSetTableFormat:c.default.uint16,markSetCount:c.default.uint16,coverage:new c.default.Array(new c.default.Pointer(c.default.uint32,xe),"markSetCount")});var Jt=new c.default.VersionedStruct(c.default.uint32,{header:{glyphClassDef:new c.default.Pointer(c.default.uint16,Ae),attachList:new c.default.Pointer(c.default.uint16,Ht),ligCaretList:new c.default.Pointer(c.default.uint16,Kt),markAttachClassDef:new c.default.Pointer(c.default.uint16,Ae)},65536:{},65538:{markGlyphSetsDef:new c.default.Pointer(c.default.uint16,Xt)},65539:{markGlyphSetsDef:new c.default.Pointer(c.default.uint16,Xt),itemVariationStore:new c.default.Pointer(c.default.uint32,Ne)}});let Zt=new c.default.Bitfield(c.default.uint16,["xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice"]),$t={xPlacement:c.default.int16,yPlacement:c.default.int16,xAdvance:c.default.int16,yAdvance:c.default.int16,xPlaDevice:new c.default.Pointer(c.default.uint16,Pe,{type:"global",relativeTo:"rel"}),yPlaDevice:new c.default.Pointer(c.default.uint16,Pe,{type:"global",relativeTo:"rel"}),xAdvDevice:new c.default.Pointer(c.default.uint16,Pe,{type:"global",relativeTo:"rel"}),yAdvDevice:new c.default.Pointer(c.default.uint16,Pe,{type:"global",relativeTo:"rel"})};class Qt{constructor(e="valueFormat"){this.key=e}buildStruct(e){let t=e;for(;!t[this.key]&&t.parent;)t=t.parent;if(!t[this.key])return;let a={rel:()=>t._startOffset},n=t[this.key];for(let e in n)n[e]&&(a[e]=$t[e]);return new c.default.Struct(a)}size(e,t){return this.buildStruct(t).size(e,t)}decode(e,t){let a=this.buildStruct(t).decode(e,t);return delete a.rel,a}}let ea=new c.default.Struct({secondGlyph:c.default.uint16,value1:new Qt("valueFormat1"),value2:new Qt("valueFormat2")}),ta=new c.default.Array(ea,c.default.uint16),aa=new c.default.Struct({value1:new Qt("valueFormat1"),value2:new Qt("valueFormat2")}),na=new c.default.VersionedStruct(c.default.uint16,{1:{xCoordinate:c.default.int16,yCoordinate:c.default.int16},2:{xCoordinate:c.default.int16,yCoordinate:c.default.int16,anchorPoint:c.default.uint16},3:{xCoordinate:c.default.int16,yCoordinate:c.default.int16,xDeviceTable:new c.default.Pointer(c.default.uint16,Pe),yDeviceTable:new c.default.Pointer(c.default.uint16,Pe)}}),ra=new c.default.Struct({entryAnchor:new c.default.Pointer(c.default.uint16,na,{type:"parent"}),exitAnchor:new c.default.Pointer(c.default.uint16,na,{type:"parent"})}),la=new c.default.Struct({class:c.default.uint16,markAnchor:new c.default.Pointer(c.default.uint16,na,{type:"parent"})}),sa=new c.default.Array(la,c.default.uint16),ia=new c.default.Array(new c.default.Pointer(c.default.uint16,na),(e=>e.parent.classCount)),oa=new c.default.Array(ia,c.default.uint16),ua=new c.default.Array(new c.default.Pointer(c.default.uint16,na),(e=>e.parent.parent.classCount)),da=new c.default.Array(ua,c.default.uint16),fa=new c.default.Array(new c.default.Pointer(c.default.uint16,da),c.default.uint16),ca=new c.default.VersionedStruct("lookupType",{1:new c.default.VersionedStruct(c.default.uint16,{1:{coverage:new c.default.Pointer(c.default.uint16,xe),valueFormat:Zt,value:new Qt},2:{coverage:new c.default.Pointer(c.default.uint16,xe),valueFormat:Zt,valueCount:c.default.uint16,values:new c.default.LazyArray(new Qt,"valueCount")}}),2:new c.default.VersionedStruct(c.default.uint16,{1:{coverage:new c.default.Pointer(c.default.uint16,xe),valueFormat1:Zt,valueFormat2:Zt,pairSetCount:c.default.uint16,pairSets:new c.default.LazyArray(new c.default.Pointer(c.default.uint16,ta),"pairSetCount")},2:{coverage:new c.default.Pointer(c.default.uint16,xe),valueFormat1:Zt,valueFormat2:Zt,classDef1:new c.default.Pointer(c.default.uint16,Ae),classDef2:new c.default.Pointer(c.default.uint16,Ae),class1Count:c.default.uint16,class2Count:c.default.uint16,classRecords:new c.default.LazyArray(new c.default.LazyArray(aa,"class2Count"),"class1Count")}}),3:{format:c.default.uint16,coverage:new c.default.Pointer(c.default.uint16,xe),entryExitCount:c.default.uint16,entryExitRecords:new c.default.Array(ra,"entryExitCount")},4:{format:c.default.uint16,markCoverage:new c.default.Pointer(c.default.uint16,xe),baseCoverage:new c.default.Pointer(c.default.uint16,xe),classCount:c.default.uint16,markArray:new c.default.Pointer(c.default.uint16,sa),baseArray:new c.default.Pointer(c.default.uint16,oa)},5:{format:c.default.uint16,markCoverage:new c.default.Pointer(c.default.uint16,xe),ligatureCoverage:new c.default.Pointer(c.default.uint16,xe),classCount:c.default.uint16,markArray:new c.default.Pointer(c.default.uint16,sa),ligatureArray:new c.default.Pointer(c.default.uint16,fa)},6:{format:c.default.uint16,mark1Coverage:new c.default.Pointer(c.default.uint16,xe),mark2Coverage:new c.default.Pointer(c.default.uint16,xe),classCount:c.default.uint16,mark1Array:new c.default.Pointer(c.default.uint16,sa),mark2Array:new c.default.Pointer(c.default.uint16,oa)},7:Le,8:Be,9:{posFormat:c.default.uint16,lookupType:c.default.uint16,extension:new c.default.Pointer(c.default.uint32,void 0)}});ca.versions[9].extension.type=ca;var ha=new c.default.VersionedStruct(c.default.uint32,{header:{scriptList:new c.default.Pointer(c.default.uint16,me),featureList:new c.default.Pointer(c.default.uint16,ve),lookupList:new c.default.Pointer(c.default.uint16,new Ce(ca))},65536:{},65537:{featureVariations:new c.default.Pointer(c.default.uint32,Ke)}});let pa=new c.default.Array(c.default.uint16,c.default.uint16),ga=pa,ya=new c.default.Struct({glyph:c.default.uint16,compCount:c.default.uint16,components:new c.default.Array(c.default.uint16,(e=>e.compCount-1))}),ma=new c.default.Array(new c.default.Pointer(c.default.uint16,ya),c.default.uint16),ba=new c.default.VersionedStruct("lookupType",{1:new c.default.VersionedStruct(c.default.uint16,{1:{coverage:new c.default.Pointer(c.default.uint16,xe),deltaGlyphID:c.default.int16},2:{coverage:new c.default.Pointer(c.default.uint16,xe),glyphCount:c.default.uint16,substitute:new c.default.LazyArray(c.default.uint16,"glyphCount")}}),2:{substFormat:c.default.uint16,coverage:new c.default.Pointer(c.default.uint16,xe),count:c.default.uint16,sequences:new c.default.LazyArray(new c.default.Pointer(c.default.uint16,pa),"count")},3:{substFormat:c.default.uint16,coverage:new c.default.Pointer(c.default.uint16,xe),count:c.default.uint16,alternateSet:new c.default.LazyArray(new c.default.Pointer(c.default.uint16,ga),"count")},4:{substFormat:c.default.uint16,coverage:new c.default.Pointer(c.default.uint16,xe),count:c.default.uint16,ligatureSets:new c.default.LazyArray(new c.default.Pointer(c.default.uint16,ma),"count")},5:Le,6:Be,7:{substFormat:c.default.uint16,lookupType:c.default.uint16,extension:new c.default.Pointer(c.default.uint32,void 0)},8:{substFormat:c.default.uint16,coverage:new c.default.Pointer(c.default.uint16,xe),backtrackCoverage:new c.default.Array(new c.default.Pointer(c.default.uint16,xe),"backtrackGlyphCount"),lookaheadGlyphCount:c.default.uint16,lookaheadCoverage:new c.default.Array(new c.default.Pointer(c.default.uint16,xe),"lookaheadGlyphCount"),glyphCount:c.default.uint16,substitutes:new c.default.Array(c.default.uint16,"glyphCount")}});ba.versions[7].extension.type=ba;var wa=new c.default.VersionedStruct(c.default.uint32,{header:{scriptList:new c.default.Pointer(c.default.uint16,me),featureList:new c.default.Pointer(c.default.uint16,ve),lookupList:new c.default.Pointer(c.default.uint16,new Ce(ba))},65536:{},65537:{featureVariations:new c.default.Pointer(c.default.uint32,Ke)}});let va=new c.default.Array(c.default.uint16,c.default.uint16),_a=new c.default.Struct({shrinkageEnableGSUB:new c.default.Pointer(c.default.uint16,va),shrinkageDisableGSUB:new c.default.Pointer(c.default.uint16,va),shrinkageEnableGPOS:new c.default.Pointer(c.default.uint16,va),shrinkageDisableGPOS:new c.default.Pointer(c.default.uint16,va),shrinkageJstfMax:new c.default.Pointer(c.default.uint16,new Ce(ca)),extensionEnableGSUB:new c.default.Pointer(c.default.uint16,va),extensionDisableGSUB:new c.default.Pointer(c.default.uint16,va),extensionEnableGPOS:new c.default.Pointer(c.default.uint16,va),extensionDisableGPOS:new c.default.Pointer(c.default.uint16,va),extensionJstfMax:new c.default.Pointer(c.default.uint16,new Ce(ca))}),Ca=new c.default.Array(new c.default.Pointer(c.default.uint16,_a),c.default.uint16),Sa=new c.default.Struct({tag:new c.default.String(4),jstfLangSys:new c.default.Pointer(c.default.uint16,Ca)}),xa=new c.default.Struct({extenderGlyphs:new c.default.Pointer(c.default.uint16,new c.default.Array(c.default.uint16,c.default.uint16)),defaultLangSys:new c.default.Pointer(c.default.uint16,Ca),langSysCount:c.default.uint16,langSysRecords:new c.default.Array(Sa,"langSysCount")}),ka=new c.default.Struct({tag:new c.default.String(4),script:new c.default.Pointer(c.default.uint16,xa,{type:"parent"})});var Aa=new c.default.Struct({version:c.default.uint32,scriptCount:c.default.uint16,scriptList:new c.default.Array(ka,"scriptCount")});let Pa=new c.default.Struct({entry:new class{constructor(e){this._size=e}decode(e,t){switch(this.size(0,t)){case 1:return e.readUInt8();case 2:return e.readUInt16BE();case 3:return e.readUInt24BE();case 4:return e.readUInt32BE()}}size(e,t){return n.resolveLength(this._size,null,t)}}((e=>1+((48&e.parent.entryFormat)>>4))),outerIndex:e=>e.entry>>1+(15&e.parent.entryFormat),innerIndex:e=>e.entry&(1<<1+(15&e.parent.entryFormat))-1}),Ia=new c.default.Struct({entryFormat:c.default.uint16,mapCount:c.default.uint16,mapData:new c.default.Array(Pa,"mapCount")});var Oa=new c.default.Struct({majorVersion:c.default.uint16,minorVersion:c.default.uint16,itemVariationStore:new c.default.Pointer(c.default.uint32,Ne),advanceWidthMapping:new c.default.Pointer(c.default.uint32,Ia),LSBMapping:new c.default.Pointer(c.default.uint32,Ia),RSBMapping:new c.default.Pointer(c.default.uint32,Ia)});let Fa=new c.default.Struct({format:c.default.uint32,length:c.default.uint32,offset:c.default.uint32}),Da=new c.default.Struct({reserved:new c.default.Reserved(c.default.uint16,2),cbSignature:c.default.uint32,signature:new c.default.Buffer("cbSignature")});var Ta=new c.default.Struct({ulVersion:c.default.uint32,usNumSigs:c.default.uint16,usFlag:c.default.uint16,signatures:new c.default.Array(Fa,"usNumSigs"),signatureBlocks:new c.default.Array(Da,"usNumSigs")});let La=new c.default.Struct({rangeMaxPPEM:c.default.uint16,rangeGaspBehavior:new c.default.Bitfield(c.default.uint16,["grayscale","gridfit","symmetricSmoothing","symmetricGridfit"])});var Ma=new c.default.Struct({version:c.default.uint16,numRanges:c.default.uint16,gaspRanges:new c.default.Array(La,"numRanges")});let Ga=new c.default.Struct({pixelSize:c.default.uint8,maximumWidth:c.default.uint8,widths:new c.default.Array(c.default.uint8,(e=>e.parent.parent.maxp.numGlyphs))});var Ba=new c.default.Struct({version:c.default.uint16,numRecords:c.default.int16,sizeDeviceRecord:c.default.int32,records:new c.default.Array(Ga,"numRecords")});let Ea=new c.default.Struct({left:c.default.uint16,right:c.default.uint16,value:c.default.int16}),Ra=new c.default.Struct({firstGlyph:c.default.uint16,nGlyphs:c.default.uint16,offsets:new c.default.Array(c.default.uint16,"nGlyphs"),max:e=>e.offsets.length&&Math.max.apply(Math,e.offsets)}),Va=new c.default.Struct({off:e=>e._startOffset-e.parent.parent._startOffset,len:e=>((e.parent.leftTable.max-e.off)/e.parent.rowWidth+1)*(e.parent.rowWidth/2),values:new c.default.LazyArray(c.default.int16,"len")}),za=new c.default.VersionedStruct("format",{0:{nPairs:c.default.uint16,searchRange:c.default.uint16,entrySelector:c.default.uint16,rangeShift:c.default.uint16,pairs:new c.default.Array(Ea,"nPairs")},2:{rowWidth:c.default.uint16,leftTable:new c.default.Pointer(c.default.uint16,Ra,{type:"parent"}),rightTable:new c.default.Pointer(c.default.uint16,Ra,{type:"parent"}),array:new c.default.Pointer(c.default.uint16,Va,{type:"parent"})},3:{glyphCount:c.default.uint16,kernValueCount:c.default.uint8,leftClassCount:c.default.uint8,rightClassCount:c.default.uint8,flags:c.default.uint8,kernValue:new c.default.Array(c.default.int16,"kernValueCount"),leftClass:new c.default.Array(c.default.uint8,"glyphCount"),rightClass:new c.default.Array(c.default.uint8,"glyphCount"),kernIndex:new c.default.Array(c.default.uint8,(e=>e.leftClassCount*e.rightClassCount))}}),Ua=new c.default.VersionedStruct("version",{0:{subVersion:c.default.uint16,length:c.default.uint16,format:c.default.uint8,coverage:new c.default.Bitfield(c.default.uint8,["horizontal","minimum","crossStream","override"]),subtable:za,padding:new c.default.Reserved(c.default.uint8,(e=>e.length-e._currentOffset))},1:{length:c.default.uint32,coverage:new c.default.Bitfield(c.default.uint8,[null,null,null,null,null,"variation","crossStream","vertical"]),format:c.default.uint8,tupleIndex:c.default.uint16,subtable:za,padding:new c.default.Reserved(c.default.uint8,(e=>e.length-e._currentOffset))}});var Na=new c.default.VersionedStruct(c.default.uint16,{0:{nTables:c.default.uint16,tables:new c.default.Array(Ua,"nTables")},1:{reserved:new c.default.Reserved(c.default.uint16),nTables:c.default.uint32,tables:new c.default.Array(Ua,"nTables")}}),qa=new c.default.Struct({version:c.default.uint16,numGlyphs:c.default.uint16,yPels:new c.default.Array(c.default.uint8,"numGlyphs")}),ja=new c.default.Struct({version:c.default.uint16,fontNumber:c.default.uint32,pitch:c.default.uint16,xHeight:c.default.uint16,style:c.default.uint16,typeFamily:c.default.uint16,capHeight:c.default.uint16,symbolSet:c.default.uint16,typeface:new c.default.String(16),characterComplement:new c.default.String(8),fileName:new c.default.String(6),strokeWeight:new c.default.String(1),widthType:new c.default.String(1),serifStyle:c.default.uint8,reserved:new c.default.Reserved(c.default.uint8)});let Ha=new c.default.Struct({bCharSet:c.default.uint8,xRatio:c.default.uint8,yStartRatio:c.default.uint8,yEndRatio:c.default.uint8}),Ya=new c.default.Struct({yPelHeight:c.default.uint16,yMax:c.default.int16,yMin:c.default.int16}),Wa=new c.default.Struct({recs:c.default.uint16,startsz:c.default.uint8,endsz:c.default.uint8,entries:new c.default.Array(Ya,"recs")});var Ka=new c.default.Struct({version:c.default.uint16,numRecs:c.default.uint16,numRatios:c.default.uint16,ratioRanges:new c.default.Array(Ha,"numRatios"),offsets:new c.default.Array(c.default.uint16,"numRatios"),groups:new c.default.Array(Wa,"numRecs")}),Xa=new c.default.Struct({version:c.default.uint16,ascent:c.default.int16,descent:c.default.int16,lineGap:c.default.int16,advanceHeightMax:c.default.int16,minTopSideBearing:c.default.int16,minBottomSideBearing:c.default.int16,yMaxExtent:c.default.int16,caretSlopeRise:c.default.int16,caretSlopeRun:c.default.int16,caretOffset:c.default.int16,reserved:new c.default.Reserved(c.default.int16,4),metricDataFormat:c.default.int16,numberOfMetrics:c.default.uint16});let Ja=new c.default.Struct({advance:c.default.uint16,bearing:c.default.int16});var Za=new c.default.Struct({metrics:new c.default.LazyArray(Ja,(e=>e.parent.vhea.numberOfMetrics)),bearings:new c.default.LazyArray(c.default.int16,(e=>e.parent.maxp.numGlyphs-e.parent.vhea.numberOfMetrics))});let $a=new c.default.Fixed(16,"BE",14),Qa=new c.default.Struct({fromCoord:$a,toCoord:$a}),en=new c.default.Struct({pairCount:c.default.uint16,correspondence:new c.default.Array(Qa,"pairCount")});var tn=new c.default.Struct({version:c.default.fixed32,axisCount:c.default.uint32,segment:new c.default.Array(en,"axisCount")});class an{constructor(e,t,a){this.type=e,this.stream=t,this.parent=a,this.base=this.stream.pos,this._items=[]}getItem(e){if(null==this._items[e]){let t=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*e,this._items[e]=this.type.decode(this.stream,this.parent),this.stream.pos=t}return this._items[e]}inspect(){return`[UnboundedArray ${this.type.constructor.name}]`}}class nn extends c.default.Array{constructor(e){super(e,0)}decode(e,t){return new an(this.type,e,t)}}let rn=function(e=c.default.uint16){e=new class{constructor(e){this.type=e}decode(e,t){return t=t.parent.parent,this.type.decode(e,t)}size(e,t){return t=t.parent.parent,this.type.size(e,t)}encode(e,t,a){return a=a.parent.parent,this.type.encode(e,t,a)}}(e);let t=new c.default.Struct({unitSize:c.default.uint16,nUnits:c.default.uint16,searchRange:c.default.uint16,entrySelector:c.default.uint16,rangeShift:c.default.uint16}),a=new c.default.Struct({lastGlyph:c.default.uint16,firstGlyph:c.default.uint16,value:e}),n=new c.default.Struct({lastGlyph:c.default.uint16,firstGlyph:c.default.uint16,values:new c.default.Pointer(c.default.uint16,new c.default.Array(e,(e=>e.lastGlyph-e.firstGlyph+1)),{type:"parent"})}),r=new c.default.Struct({glyph:c.default.uint16,value:e});return new c.default.VersionedStruct(c.default.uint16,{0:{values:new nn(e)},2:{binarySearchHeader:t,segments:new c.default.Array(a,(e=>e.binarySearchHeader.nUnits))},4:{binarySearchHeader:t,segments:new c.default.Array(n,(e=>e.binarySearchHeader.nUnits))},6:{binarySearchHeader:t,segments:new c.default.Array(r,(e=>e.binarySearchHeader.nUnits))},8:{firstGlyph:c.default.uint16,count:c.default.uint16,values:new c.default.Array(e,"count")}})};function ln(e={},t=c.default.uint16){let a=Object.assign({newState:c.default.uint16,flags:c.default.uint16},e),n=new c.default.Struct(a),r=new nn(new c.default.Array(c.default.uint16,(e=>e.nClasses)));return new c.default.Struct({nClasses:c.default.uint32,classTable:new c.default.Pointer(c.default.uint32,new rn(t)),stateArray:new c.default.Pointer(c.default.uint32,r),entryTable:new c.default.Pointer(c.default.uint32,new nn(n))})}let sn=new c.default.VersionedStruct("format",{0:{deltas:new c.default.Array(c.default.int16,32)},1:{deltas:new c.default.Array(c.default.int16,32),mappingData:new rn(c.default.uint16)},2:{standardGlyph:c.default.uint16,controlPoints:new c.default.Array(c.default.uint16,32)},3:{standardGlyph:c.default.uint16,controlPoints:new c.default.Array(c.default.uint16,32),mappingData:new rn(c.default.uint16)}});var on=new c.default.Struct({version:c.default.fixed32,format:c.default.uint16,defaultBaseline:c.default.uint16,subtable:sn});let un=new c.default.Struct({setting:c.default.uint16,nameIndex:c.default.int16,name:e=>e.parent.parent.parent.name.records.fontFeatures[e.nameIndex]}),dn=new c.default.Struct({feature:c.default.uint16,nSettings:c.default.uint16,settingTable:new c.default.Pointer(c.default.uint32,new c.default.Array(un,"nSettings"),{type:"parent"}),featureFlags:new c.default.Bitfield(c.default.uint8,[null,null,null,null,null,null,"hasDefault","exclusive"]),defaultSetting:c.default.uint8,nameIndex:c.default.int16,name:e=>e.parent.parent.name.records.fontFeatures[e.nameIndex]});var fn=new c.default.Struct({version:c.default.fixed32,featureNameCount:c.default.uint16,reserved1:new c.default.Reserved(c.default.uint16),reserved2:new c.default.Reserved(c.default.uint32),featureNames:new c.default.Array(dn,"featureNameCount")});let cn=new c.default.Struct({axisTag:new c.default.String(4),minValue:c.default.fixed32,defaultValue:c.default.fixed32,maxValue:c.default.fixed32,flags:c.default.uint16,nameID:c.default.uint16,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID]}),hn=new c.default.Struct({nameID:c.default.uint16,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID],flags:c.default.uint16,coord:new c.default.Array(c.default.fixed32,(e=>e.parent.axisCount)),postscriptNameID:new c.default.Optional(c.default.uint16,(e=>e.parent.instanceSize-e._currentOffset>0))});var pn=new c.default.Struct({version:c.default.fixed32,offsetToData:c.default.uint16,countSizePairs:c.default.uint16,axisCount:c.default.uint16,axisSize:c.default.uint16,instanceCount:c.default.uint16,instanceSize:c.default.uint16,axis:new c.default.Array(cn,"axisCount"),instance:new c.default.Array(hn,"instanceCount")});let gn=new c.default.Fixed(16,"BE",14);let yn=new c.default.Struct({version:c.default.uint16,reserved:new c.default.Reserved(c.default.uint16),axisCount:c.default.uint16,globalCoordCount:c.default.uint16,globalCoords:new c.default.Pointer(c.default.uint32,new c.default.Array(new c.default.Array(gn,"axisCount"),"globalCoordCount")),glyphCount:c.default.uint16,flags:c.default.uint16,offsetToData:c.default.uint32,offsets:new c.default.Array(new c.default.Pointer(class{static decode(e,t){return t.flags?e.readUInt32BE():2*e.readUInt16BE()}},"void",{relativeTo:"offsetToData",allowNull:!1}),(e=>e.glyphCount+1))}),mn=new c.default.Struct({length:c.default.uint16,coverage:c.default.uint16,subFeatureFlags:c.default.uint32,stateTable:new function(e={},t=c.default.uint16){let a=new c.default.Struct({version:()=>8,firstGlyph:c.default.uint16,values:new c.default.Array(c.default.uint8,c.default.uint16)}),n=Object.assign({newStateOffset:c.default.uint16,newState:e=>(e.newStateOffset-(e.parent.stateArray.base-e.parent._startOffset))/e.parent.nClasses,flags:c.default.uint16},e),r=new c.default.Struct(n),l=new nn(new c.default.Array(c.default.uint8,(e=>e.nClasses)));return new c.default.Struct({nClasses:c.default.uint16,classTable:new c.default.Pointer(c.default.uint16,a),stateArray:new c.default.Pointer(c.default.uint16,l),entryTable:new c.default.Pointer(c.default.uint16,new nn(r))})}}),bn=new c.default.Struct({justClass:c.default.uint32,beforeGrowLimit:c.default.fixed32,beforeShrinkLimit:c.default.fixed32,afterGrowLimit:c.default.fixed32,afterShrinkLimit:c.default.fixed32,growFlags:c.default.uint16,shrinkFlags:c.default.uint16}),wn=new c.default.Array(bn,c.default.uint32),vn=new c.default.VersionedStruct("actionType",{0:{lowerLimit:c.default.fixed32,upperLimit:c.default.fixed32,order:c.default.uint16,glyphs:new c.default.Array(c.default.uint16,c.default.uint16)},1:{addGlyph:c.default.uint16},2:{substThreshold:c.default.fixed32,addGlyph:c.default.uint16,substGlyph:c.default.uint16},3:{},4:{variationAxis:c.default.uint32,minimumLimit:c.default.fixed32,noStretchValue:c.default.fixed32,maximumLimit:c.default.fixed32},5:{flags:c.default.uint16,glyph:c.default.uint16}}),_n=new c.default.Struct({actionClass:c.default.uint16,actionType:c.default.uint16,actionLength:c.default.uint32,actionData:vn,padding:new c.default.Reserved(c.default.uint8,(e=>e.actionLength-e._currentOffset))}),Cn=new c.default.Array(_n,c.default.uint32),Sn=new c.default.Struct({lookupTable:new rn(new c.default.Pointer(c.default.uint16,Cn))}),xn=new c.default.Struct({classTable:new c.default.Pointer(c.default.uint16,mn,{type:"parent"}),wdcOffset:c.default.uint16,postCompensationTable:new c.default.Pointer(c.default.uint16,Sn,{type:"parent"}),widthDeltaClusters:new rn(new c.default.Pointer(c.default.uint16,wn,{type:"parent",relativeTo:"wdcOffset"}))});var kn=new c.default.Struct({version:c.default.uint32,format:c.default.uint16,horizontal:new c.default.Pointer(c.default.uint16,xn),vertical:new c.default.Pointer(c.default.uint16,xn)});let An={action:c.default.uint16},Pn={markIndex:c.default.uint16,currentIndex:c.default.uint16},In={currentInsertIndex:c.default.uint16,markedInsertIndex:c.default.uint16},On=new c.default.Struct({items:new nn(new c.default.Pointer(c.default.uint32,new rn))}),Fn=new c.default.VersionedStruct("type",{0:{stateTable:new ln},1:{stateTable:new ln(Pn),substitutionTable:new c.default.Pointer(c.default.uint32,On)},2:{stateTable:new ln(An),ligatureActions:new c.default.Pointer(c.default.uint32,new nn(c.default.uint32)),components:new c.default.Pointer(c.default.uint32,new nn(c.default.uint16)),ligatureList:new c.default.Pointer(c.default.uint32,new nn(c.default.uint16))},4:{lookupTable:new rn},5:{stateTable:new ln(In),insertionActions:new c.default.Pointer(c.default.uint32,new nn(c.default.uint16))}}),Dn=new c.default.Struct({length:c.default.uint32,coverage:c.default.uint24,type:c.default.uint8,subFeatureFlags:c.default.uint32,table:Fn,padding:new c.default.Reserved(c.default.uint8,(e=>e.length-e._currentOffset))}),Tn=new c.default.Struct({featureType:c.default.uint16,featureSetting:c.default.uint16,enableFlags:c.default.uint32,disableFlags:c.default.uint32}),Ln=new c.default.Struct({defaultFlags:c.default.uint32,chainLength:c.default.uint32,nFeatureEntries:c.default.uint32,nSubtables:c.default.uint32,features:new c.default.Array(Tn,"nFeatureEntries"),subtables:new c.default.Array(Dn,"nSubtables")});var Mn=new c.default.Struct({version:c.default.uint16,unused:new c.default.Reserved(c.default.uint16),nChains:c.default.uint32,chains:new c.default.Array(Ln,"nChains")});let Gn=new c.default.Struct({left:c.default.int16,top:c.default.int16,right:c.default.int16,bottom:c.default.int16});var Bn=new c.default.Struct({version:c.default.fixed32,format:c.default.uint16,lookupTable:new rn(Gn)});let En={};En.cmap=M,En.head=G,En.hhea=B,En.hmtx=R,En.maxp=V,En.name=Y,En["OS/2"]=K,En.post=J,En.fpgm=$,En.loca=Q,En.prep=ee,En["cvt "]=Z,En.glyf=te,En["CFF "]=ct,En.CFF2=ct,En.VORG=pt,En.EBLC=kt,En.CBLC=En.EBLC,En.sbix=Pt,En.COLR=Ft,En.CPAL=Tt,En.BASE=qt,En.GDEF=Jt,En.GPOS=ha,En.GSUB=wa,En.JSTF=Aa,En.HVAR=Oa,En.DSIG=Ta,En.gasp=Ma,En.hdmx=Ba,En.kern=Na,En.LTSH=qa,En.PCLT=ja,En.VDMX=Ka,En.vhea=Xa,En.vmtx=Za,En.avar=tn,En.bsln=on,En.feat=fn,En.fvar=pn,En.gvar=yn,En.just=kn,En.morx=Mn,En.opbd=Bn;let Rn=new c.default.Struct({tag:new c.default.String(4),checkSum:c.default.uint32,offset:new c.default.Pointer(c.default.uint32,"void",{type:"global"}),length:c.default.uint32}),Vn=new c.default.Struct({tag:new c.default.String(4),numTables:c.default.uint16,searchRange:c.default.uint16,entrySelector:c.default.uint16,rangeShift:c.default.uint16,tables:new c.default.Array(Rn,"numTables")});function zn(e,t){let a=0,n=e.length-1;for(;a<=n;){let r=a+n>>1,l=t(e[r]);if(l<0)n=r-1;else{if(!(l>0))return r;a=r+1}}return-1}function Un(e,t){let a=[];for(;e<t;)a.push(e++);return a}var Nn;Vn.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e},Vn.preEncode=function(e){let t=[];for(let e in this.tables){let a=this.tables[e];a&&t.push({tag:e,checkSum:0,offset:new c.default.VoidPointer(En[e],a),length:En[e].size(a)})}this.tag="true",this.numTables=t.length,this.tables=t;let a=Math.floor(Math.log(this.numTables)/Math.LN2),n=Math.pow(2,a);this.searchRange=16*n,this.entrySelector=Math.log(n)/Math.LN2,this.rangeShift=16*this.numTables-this.searchRange};try{var qn=require("iconv-lite")}catch(e){}let jn=(Nn=class{constructor(e){if(this.encoding=null,this.cmap=this.findSubtable(e,[[3,10],[0,6],[0,4],[3,1],[0,3],[0,2],[0,1],[0,0]]),!this.cmap&&qn)for(let t of e.tables){let e=z(t.platformID,t.encodingID,t.table.language-1);qn.encodingExists(e)&&(this.cmap=t.table,this.encoding=e)}if(!this.cmap)throw new Error("Could not find a supported cmap table");this.uvs=this.findSubtable(e,[[0,5]]),this.uvs&&14!==this.uvs.version&&(this.uvs=null)}findSubtable(e,t){for(let[a,n]of t)for(let t of e.tables)if(t.platformID===a&&t.encodingID===n)return t.table;return null}lookup(e,t){if(this.encoding){let t=qn.encode(String.fromCodePoint(e),this.encoding);e=0;for(let a=0;a<t.length;a++)e=e<<8|t[a]}else if(t){let a=this.getVariationSelector(e,t);if(a)return a}let a=this.cmap;switch(a.version){case 0:return a.codeMap.get(e)||0;case 4:{let t=0,n=a.segCount-1;for(;t<=n;){let r=t+n>>1;if(e<a.startCode.get(r))n=r-1;else{if(!(e>a.endCode.get(r))){let t,n=a.idRangeOffset.get(r);if(0===n)t=e+a.idDelta.get(r);else{let l=n/2+(e-a.startCode.get(r))-(a.segCount-r);t=a.glyphIndexArray.get(l)||0,0!==t&&(t+=a.idDelta.get(r))}return 65535&t}t=r+1}}return 0}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return a.glyphIndices.get(e-a.firstCode)||0;case 12:case 13:{let t=0,n=a.nGroups-1;for(;t<=n;){let r=t+n>>1,l=a.groups.get(r);if(e<l.startCharCode)n=r-1;else{if(!(e>l.endCharCode))return 12===a.version?l.glyphID+(e-l.startCharCode):l.glyphID;t=r+1}}return 0}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${a.version}`)}}getVariationSelector(e,t){if(!this.uvs)return 0;let a=this.uvs.varSelectors.toArray(),n=zn(a,(e=>t-e.varSelector)),r=a[n];return-1!==n&&r.defaultUVS&&(n=zn(r.defaultUVS,(t=>e<t.startUnicodeValue?-1:e>t.startUnicodeValue+t.additionalCount?1:0))),-1!==n&&r.nonDefaultUVS&&(n=zn(r.nonDefaultUVS,(t=>e-t.unicodeValue)),-1!==n)?r.nonDefaultUVS[n].glyphID:0}getCharacterSet(){let e=this.cmap;switch(e.version){case 0:return Un(0,e.codeMap.length);case 4:{let t=[],a=e.endCode.toArray();for(let n=0;n<a.length;n++){let r=a[n]+1,l=e.startCode.get(n);t.push(...Un(l,r))}return t}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return Un(e.firstCode,e.firstCode+e.glyphIndices.length);case 12:case 13:{let t=[];for(let a of e.groups.toArray())t.push(...Un(a.startCharCode,a.endCharCode+1));return t}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${e.version}`)}}codePointsForGlyph(e){let t=this.cmap;switch(t.version){case 0:{let a=[];for(let n=0;n<256;n++)t.codeMap.get(n)===e&&a.push(n);return a}case 4:{let n=[];for(let r=0;r<t.segCount;r++){let l=t.endCode.get(r),s=t.startCode.get(r),i=t.idRangeOffset.get(r),o=t.idDelta.get(r);for(var a=s;a<=l;a++){let l=0;if(0===i)l=a+o;else{let e=i/2+(a-s)-(t.segCount-r);l=t.glyphIndexArray.get(e)||0,0!==l&&(l+=o)}l===e&&n.push(a)}}return n}case 12:{let a=[];for(let n of t.groups.toArray())e>=n.glyphID&&e<=n.glyphID+(n.endCharCode-n.startCharCode)&&a.push(n.startCharCode+(e-n.glyphID));return a}case 13:{let a=[];for(let n of t.groups.toArray())e===n.glyphID&&a.push(...Un(n.startCharCode,n.endCharCode+1));return a}default:throw new Error(`Unknown cmap format ${t.version}`)}}},p.default(Nn.prototype,"getCharacterSet",[x],Object.getOwnPropertyDescriptor(Nn.prototype,"getCharacterSet"),Nn.prototype),p.default(Nn.prototype,"codePointsForGlyph",[x],Object.getOwnPropertyDescriptor(Nn.prototype,"codePointsForGlyph"),Nn.prototype),Nn);class Hn{constructor(e){this.kern=e.kern}process(e,t){for(let a=0;a<e.length-1;a++){let n=e[a].id,r=e[a+1].id;t[a].xAdvance+=this.getKerning(n,r)}}getKerning(e,t){let a=0;for(let n of this.kern.tables){if(n.coverage.crossStream)continue;switch(n.version){case 0:if(!n.coverage.horizontal)continue;break;case 1:if(n.coverage.vertical||n.coverage.variation)continue;break;default:throw new Error(`Unsupported kerning table version ${n.version}`)}let r=0,l=n.subtable;switch(n.format){case 0:let a=zn(l.pairs,(function(a){return e-a.left||t-a.right}));a>=0&&(r=l.pairs[a].value);break;case 2:let s=0,i=0;s=e>=l.leftTable.firstGlyph&&e<l.leftTable.firstGlyph+l.leftTable.nGlyphs?l.leftTable.offsets[e-l.leftTable.firstGlyph]:l.array.off,t>=l.rightTable.firstGlyph&&t<l.rightTable.firstGlyph+l.rightTable.nGlyphs&&(i=l.rightTable.offsets[t-l.rightTable.firstGlyph]);let o=(s+i-l.array.off)/2;r=l.array.values.get(o);break;case 3:if(e>=l.glyphCount||t>=l.glyphCount)return 0;r=l.kernValue[l.kernIndex[l.leftClass[e]*l.rightClassCount+l.rightClass[t]]];break;default:throw new Error(`Unsupported kerning sub-table format ${n.format}`)}n.coverage.override?a=r:a+=r}return a}}class Yn{constructor(e){this.font=e}positionGlyphs(e,t){let a=0,n=0;for(let r=0;r<e.length;r++){e[r].isMark?n=r:(a!==n&&this.positionCluster(e,t,a,n),a=n=r)}return a!==n&&this.positionCluster(e,t,a,n),t}positionCluster(e,t,a,n){let r=e[a],l=r.cbox.copy();r.codePoints.length>1&&(l.minX+=(r.codePoints.length-1)*l.width/r.codePoints.length);let s=-t[a].xAdvance,i=0,o=this.font.unitsPerEm/16;for(let r=a+1;r<=n;r++){let a=e[r],n=a.cbox,u=t[r],d=this.getCombiningClass(a.codePoints[0]);if("Not_Reordered"!==d){switch(u.xOffset=u.yOffset=0,d){case"Double_Above":case"Double_Below":u.xOffset+=l.minX-n.width/2-n.minX;break;case"Attached_Below_Left":case"Below_Left":case"Above_Left":u.xOffset+=l.minX-n.minX;break;case"Attached_Above_Right":case"Below_Right":case"Above_Right":u.xOffset+=l.maxX-n.width-n.minX;break;default:u.xOffset+=l.minX+(l.width-n.width)/2-n.minX}switch(d){case"Double_Below":case"Below_Left":case"Below":case"Below_Right":case"Attached_Below_Left":case"Attached_Below":"Attached_Below_Left"!==d&&"Attached_Below"!==d||(l.minY+=o),u.yOffset=-l.minY-n.maxY,l.minY+=n.height;break;case"Double_Above":case"Above_Left":case"Above":case"Above_Right":case"Attached_Above":case"Attached_Above_Right":"Attached_Above"!==d&&"Attached_Above_Right"!==d||(l.maxY+=o),u.yOffset=l.maxY-n.minY,l.maxY+=n.height}u.xAdvance=u.yAdvance=0,u.xOffset+=s,u.yOffset+=i}else s-=u.xAdvance,i-=u.yAdvance}}getCombiningClass(e){let t=y.default.getCombiningClass(e);if(3584==(-256&e))if("Not_Reordered"===t)switch(e){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return"Above_Right";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return"Above";case 3772:return"Below"}else if(3642===e)return"Below_Right";switch(t){case"CCC10":case"CCC11":case"CCC12":case"CCC13":case"CCC14":case"CCC15":case"CCC16":case"CCC17":case"CCC18":case"CCC20":case"CCC22":case"CCC29":case"CCC32":case"CCC118":case"CCC129":case"CCC132":return"Below";case"CCC23":return"Attached_Above";case"CCC24":case"CCC107":return"Above_Right";case"CCC25":case"CCC19":return"Above_Left";case"CCC26":case"CCC27":case"CCC28":case"CCC30":case"CCC31":case"CCC33":case"CCC34":case"CCC35":case"CCC36":case"CCC122":case"CCC130":return"Above";case"CCC21":break;case"CCC103":return"Below_Right"}return t}}class Wn{constructor(e=1/0,t=1/0,a=-1/0,n=-1/0){this.minX=e,this.minY=t,this.maxX=a,this.maxY=n}get width(){return this.maxX-this.minX}get height(){return this.maxY-this.minY}addPoint(e,t){Math.abs(e)!==1/0&&(e<this.minX&&(this.minX=e),e>this.maxX&&(this.maxX=e)),Math.abs(t)!==1/0&&(t<this.minY&&(this.minY=t),t>this.maxY&&(this.maxY=t))}copy(){return new Wn(this.minX,this.minY,this.maxX,this.maxY)}}const Kn={Caucasian_Albanian:"aghb",Arabic:"arab",Imperial_Aramaic:"armi",Armenian:"armn",Avestan:"avst",Balinese:"bali",Bamum:"bamu",Bassa_Vah:"bass",Batak:"batk",Bengali:["bng2","beng"],Bopomofo:"bopo",Brahmi:"brah",Braille:"brai",Buginese:"bugi",Buhid:"buhd",Chakma:"cakm",Canadian_Aboriginal:"cans",Carian:"cari",Cham:"cham",Cherokee:"cher",Coptic:"copt",Cypriot:"cprt",Cyrillic:"cyrl",Devanagari:["dev2","deva"],Deseret:"dsrt",Duployan:"dupl",Egyptian_Hieroglyphs:"egyp",Elbasan:"elba",Ethiopic:"ethi",Georgian:"geor",Glagolitic:"glag",Gothic:"goth",Grantha:"gran",Greek:"grek",Gujarati:["gjr2","gujr"],Gurmukhi:["gur2","guru"],Hangul:"hang",Han:"hani",Hanunoo:"hano",Hebrew:"hebr",Hiragana:"hira",Pahawh_Hmong:"hmng",Katakana_Or_Hiragana:"hrkt",Old_Italic:"ital",Javanese:"java",Kayah_Li:"kali",Katakana:"kana",Kharoshthi:"khar",Khmer:"khmr",Khojki:"khoj",Kannada:["knd2","knda"],Kaithi:"kthi",Tai_Tham:"lana",Lao:"lao ",Latin:"latn",Lepcha:"lepc",Limbu:"limb",Linear_A:"lina",Linear_B:"linb",Lisu:"lisu",Lycian:"lyci",Lydian:"lydi",Mahajani:"mahj",Mandaic:"mand",Manichaean:"mani",Mende_Kikakui:"mend",Meroitic_Cursive:"merc",Meroitic_Hieroglyphs:"mero",Malayalam:["mlm2","mlym"],Modi:"modi",Mongolian:"mong",Mro:"mroo",Meetei_Mayek:"mtei",Myanmar:["mym2","mymr"],Old_North_Arabian:"narb",Nabataean:"nbat",Nko:"nko ",Ogham:"ogam",Ol_Chiki:"olck",Old_Turkic:"orkh",Oriya:["ory2","orya"],Osmanya:"osma",Palmyrene:"palm",Pau_Cin_Hau:"pauc",Old_Permic:"perm",Phags_Pa:"phag",Inscriptional_Pahlavi:"phli",Psalter_Pahlavi:"phlp",Phoenician:"phnx",Miao:"plrd",Inscriptional_Parthian:"prti",Rejang:"rjng",Runic:"runr",Samaritan:"samr",Old_South_Arabian:"sarb",Saurashtra:"saur",Shavian:"shaw",Sharada:"shrd",Siddham:"sidd",Khudawadi:"sind",Sinhala:"sinh",Sora_Sompeng:"sora",Sundanese:"sund",Syloti_Nagri:"sylo",Syriac:"syrc",Tagbanwa:"tagb",Takri:"takr",Tai_Le:"tale",New_Tai_Lue:"talu",Tamil:["tml2","taml"],Tai_Viet:"tavt",Telugu:["tel2","telu"],Tifinagh:"tfng",Tagalog:"tglg",Thaana:"thaa",Thai:"thai",Tibetan:"tibt",Tirhuta:"tirh",Ugaritic:"ugar",Vai:"vai ",Warang_Citi:"wara",Old_Persian:"xpeo",Cuneiform:"xsux",Yi:"yi  ",Inherited:"zinh",Common:"zyyy",Unknown:"zzzz"},Xn={};for(let e in Kn){let t=Kn[e];if(Array.isArray(t))for(let a of t)Xn[a]=e;else Xn[t]=e}const Jn={arab:!0,hebr:!0,syrc:!0,thaa:!0,cprt:!0,khar:!0,phnx:!0,"nko ":!0,lydi:!0,avst:!0,armi:!0,phli:!0,prti:!0,sarb:!0,orkh:!0,samr:!0,mand:!0,merc:!0,mero:!0,mani:!0,mend:!0,nbat:!0,narb:!0,palm:!0,phlp:!0};function Zn(e){return Jn[e]?"rtl":"ltr"}class $n{constructor(e,t,a,n,r){if(this.glyphs=e,this.positions=null,this.script=a,this.language=n||null,this.direction=r||Zn(a),this.features={},Array.isArray(t))for(let e of t)this.features[e]=!0;else"object"==typeof t&&(this.features=t)}get advanceWidth(){let e=0;for(let t of this.positions)e+=t.xAdvance;return e}get advanceHeight(){let e=0;for(let t of this.positions)e+=t.yAdvance;return e}get bbox(){let e=new Wn,t=0,a=0;for(let n=0;n<this.glyphs.length;n++){let r=this.glyphs[n],l=this.positions[n],s=r.bbox;e.addPoint(s.minX+t+l.xOffset,s.minY+a+l.yOffset),e.addPoint(s.maxX+t+l.xOffset,s.maxY+a+l.yOffset),t+=l.xAdvance,a+=l.yAdvance}return e}}class Qn{constructor(e=0,t=0,a=0,n=0){this.xAdvance=e,this.yAdvance=t,this.xOffset=a,this.yOffset=n}}const er={allTypographicFeatures:{code:0,exclusive:!1,allTypeFeatures:0},ligatures:{code:1,exclusive:!1,requiredLigatures:0,commonLigatures:2,rareLigatures:4,rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:!0,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:!0},verticalSubstitution:{code:4,exclusive:!1,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:!1,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:!0,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:!1,wordInitialSwashes:0,wordFinalSwashes:2,nonFinalSwashes:8},diacritics:{code:9,exclusive:!0,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:!0,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:!0,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:!1,preventOverlap:0},typographicExtras:{code:14,exclusive:!1,slashedZero:4},mathematicalExtras:{code:15,exclusive:!1,mathematicalGreek:10},ornamentSets:{code:16,exclusive:!0,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:!0,noAlternates:0},designComplexity:{code:18,exclusive:!0,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:!0,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:!0,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:!0,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:!0,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:!0,noTransliteration:0},annotation:{code:24,exclusive:!0,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:!0,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:!0,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:!1,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:!1,rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:!0,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:!0,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:!0,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:!1,CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:!1,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:!1,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:!1,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:!1,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:!0,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:!0,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:!0},CJKRomanSpacing:{code:103,exclusive:!0,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}},tr=(e,t)=>[er[e].code,er[e][t]],ar={rlig:tr("ligatures","requiredLigatures"),clig:tr("ligatures","contextualLigatures"),dlig:tr("ligatures","rareLigatures"),hlig:tr("ligatures","historicalLigatures"),liga:tr("ligatures","commonLigatures"),hist:tr("ligatures","historicalLigatures"),smcp:tr("lowerCase","lowerCaseSmallCaps"),pcap:tr("lowerCase","lowerCasePetiteCaps"),frac:tr("fractions","diagonalFractions"),dnom:tr("fractions","diagonalFractions"),numr:tr("fractions","diagonalFractions"),afrc:tr("fractions","verticalFractions"),case:tr("caseSensitiveLayout","caseSensitiveLayout"),ccmp:tr("unicodeDecomposition","canonicalComposition"),cpct:tr("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),valt:tr("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),swsh:tr("contextualAlternates","swashAlternates"),cswh:tr("contextualAlternates","contextualSwashAlternates"),curs:tr("cursiveConnection","cursive"),c2pc:tr("upperCase","upperCasePetiteCaps"),c2sc:tr("upperCase","upperCaseSmallCaps"),init:tr("smartSwash","wordInitialSwashes"),fin2:tr("smartSwash","wordFinalSwashes"),medi:tr("smartSwash","nonFinalSwashes"),med2:tr("smartSwash","nonFinalSwashes"),fin3:tr("smartSwash","wordFinalSwashes"),fina:tr("smartSwash","wordFinalSwashes"),pkna:tr("kanaSpacing","proportionalKana"),half:tr("textSpacing","halfWidthText"),halt:tr("textSpacing","altHalfWidthText"),hkna:tr("alternateKana","alternateHorizKana"),vkna:tr("alternateKana","alternateVertKana"),ital:tr("italicCJKRoman","CJKItalicRoman"),lnum:tr("numberCase","upperCaseNumbers"),onum:tr("numberCase","lowerCaseNumbers"),mgrk:tr("mathematicalExtras","mathematicalGreek"),calt:tr("contextualAlternates","contextualAlternates"),vrt2:tr("verticalSubstitution","substituteVerticalForms"),vert:tr("verticalSubstitution","substituteVerticalForms"),tnum:tr("numberSpacing","monospacedNumbers"),pnum:tr("numberSpacing","proportionalNumbers"),sups:tr("verticalPosition","superiors"),subs:tr("verticalPosition","inferiors"),ordn:tr("verticalPosition","ordinals"),pwid:tr("textSpacing","proportionalText"),hwid:tr("textSpacing","halfWidthText"),qwid:tr("textSpacing","quarterWidthText"),twid:tr("textSpacing","thirdWidthText"),fwid:tr("textSpacing","proportionalText"),palt:tr("textSpacing","altProportionalText"),trad:tr("characterShape","traditionalCharacters"),smpl:tr("characterShape","simplifiedCharacters"),jp78:tr("characterShape","JIS1978Characters"),jp83:tr("characterShape","JIS1983Characters"),jp90:tr("characterShape","JIS1990Characters"),jp04:tr("characterShape","JIS2004Characters"),expt:tr("characterShape","expertCharacters"),hojo:tr("characterShape","hojoCharacters"),nlck:tr("characterShape","NLCCharacters"),tnam:tr("characterShape","traditionalNamesCharacters"),ruby:tr("rubyKana","rubyKana"),titl:tr("styleOptions","titlingCaps"),zero:tr("typographicExtras","slashedZero"),ss01:tr("stylisticAlternatives","stylisticAltOne"),ss02:tr("stylisticAlternatives","stylisticAltTwo"),ss03:tr("stylisticAlternatives","stylisticAltThree"),ss04:tr("stylisticAlternatives","stylisticAltFour"),ss05:tr("stylisticAlternatives","stylisticAltFive"),ss06:tr("stylisticAlternatives","stylisticAltSix"),ss07:tr("stylisticAlternatives","stylisticAltSeven"),ss08:tr("stylisticAlternatives","stylisticAltEight"),ss09:tr("stylisticAlternatives","stylisticAltNine"),ss10:tr("stylisticAlternatives","stylisticAltTen"),ss11:tr("stylisticAlternatives","stylisticAltEleven"),ss12:tr("stylisticAlternatives","stylisticAltTwelve"),ss13:tr("stylisticAlternatives","stylisticAltThirteen"),ss14:tr("stylisticAlternatives","stylisticAltFourteen"),ss15:tr("stylisticAlternatives","stylisticAltFifteen"),ss16:tr("stylisticAlternatives","stylisticAltSixteen"),ss17:tr("stylisticAlternatives","stylisticAltSeventeen"),ss18:tr("stylisticAlternatives","stylisticAltEighteen"),ss19:tr("stylisticAlternatives","stylisticAltNineteen"),ss20:tr("stylisticAlternatives","stylisticAltTwenty")};for(let e=1;e<=99;e++)ar[`cv${`00${e}`.slice(-2)}`]=[er.characterAlternatives.code,e];let nr={};for(let e in ar){let t=ar[e];null==nr[t[0]]&&(nr[t[0]]={}),nr[t[0]][t[1]]=e}function rr(e){let[t,a]=e;if(isNaN(t))var n=er[t]&&er[t].code;else n=t;if(isNaN(a))var r=er[t]&&er[t][a];else r=a;return[n,r]}var lr;let sr=(lr=class{constructor(e){this.table=e}lookup(e){switch(this.table.version){case 0:return this.table.values.getItem(e);case 2:case 4:{let n=0,r=this.table.binarySearchHeader.nUnits-1;for(;n<=r;){var t=n+r>>1;if(65535===(a=this.table.segments[t]).firstGlyph)return null;if(e<a.firstGlyph)r=t-1;else{if(!(e>a.lastGlyph))return 2===this.table.version?a.value:a.values[e-a.firstGlyph];n=t+1}}return null}case 6:{let n=0,r=this.table.binarySearchHeader.nUnits-1;for(;n<=r;){var a;t=n+r>>1;if(65535===(a=this.table.segments[t]).glyph)return null;if(e<a.glyph)r=t-1;else{if(!(e>a.glyph))return a.value;n=t+1}}return null}case 8:return this.table.values[e-this.table.firstGlyph];default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}}glyphsForValue(e){let t=[];switch(this.table.version){case 2:case 4:for(let a of this.table.segments)if(2===this.table.version&&a.value===e)t.push(...Un(a.firstGlyph,a.lastGlyph+1));else for(let n=0;n<a.values.length;n++)a.values[n]===e&&t.push(a.firstGlyph+n);break;case 6:for(let a of this.table.segments)a.value===e&&t.push(a.glyph);break;case 8:for(let a=0;a<this.table.values.length;a++)this.table.values[a]===e&&t.push(this.table.firstGlyph+a);break;default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}return t}},p.default(lr.prototype,"glyphsForValue",[x],Object.getOwnPropertyDescriptor(lr.prototype,"glyphsForValue"),lr.prototype),lr);class ir{constructor(e){this.stateTable=e,this.lookupTable=new sr(e.classTable)}process(e,t,a){let n=0,r=t?e.length-1:0,l=t?-1:1;for(;1===l&&r<=e.length||-1===l&&r>=-1;){let t=null,s=1,i=!0;r===e.length||-1===r?s=0:(t=e[r],65535===t.id?s=2:(s=this.lookupTable.lookup(t.id),null==s&&(s=1)));let o=this.stateTable.stateArray.getItem(n)[s],u=this.stateTable.entryTable.getItem(o);0!==s&&2!==s&&(a(t,u,r),i=!(16384&u.flags)),n=u.newState,i&&(r+=l)}return e}traverse(e,t=0,a=new Set){if(a.has(t))return;a.add(t);let{nClasses:n,stateArray:r,entryTable:l}=this.stateTable,s=r.getItem(t);for(let t=4;t<n;t++){let n=s[t],r=l.getItem(n);for(let n of this.lookupTable.glyphsForValue(t))e.enter&&e.enter(n,r),0!==r.newState&&this.traverse(e,r.newState,a),e.exit&&e.exit(n,r)}}}var or;let ur=(or=class{constructor(e){this.processIndicRearragement=this.processIndicRearragement.bind(this),this.processContextualSubstitution=this.processContextualSubstitution.bind(this),this.processLigature=this.processLigature.bind(this),this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this),this.processGlyphInsertion=this.processGlyphInsertion.bind(this),this.font=e,this.morx=e.morx,this.inputCache=null}process(e,t={}){for(let a of this.morx.chains){let n=a.defaultFlags;for(let e of a.features){let a;(a=t[e.featureType])&&(a[e.featureSetting]?(n&=e.disableFlags,n|=e.enableFlags):!1===a[e.featureSetting]&&(n|=~e.disableFlags,n&=~e.enableFlags))}for(let t of a.subtables)t.subFeatureFlags&n&&this.processSubtable(t,e)}let a=e.length-1;for(;a>=0;)65535===e[a].id&&e.splice(a,1),a--;return e}processSubtable(e,t){if(this.subtable=e,this.glyphs=t,4===this.subtable.type)return void this.processNoncontextualSubstitutions(this.subtable,this.glyphs);this.ligatureStack=[],this.markedGlyph=null,this.firstGlyph=null,this.lastGlyph=null,this.markedIndex=null;let a=this.getStateMachine(e),n=this.getProcessor(),r=!!(4194304&this.subtable.coverage);return a.process(this.glyphs,r,n)}getStateMachine(e){return new ir(e.table.stateTable)}getProcessor(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw new Error(`Invalid morx subtable type: ${this.subtable.type}`)}}processIndicRearragement(e,t,a){32768&t.flags&&(this.firstGlyph=a),8192&t.flags&&(this.lastGlyph=a),function(e,t,a,n){switch(t){case 0:return e;case 1:return dr(e,[a,1],[n,0]);case 2:return dr(e,[a,0],[n,1]);case 3:return dr(e,[a,1],[n,1]);case 4:return dr(e,[a,2],[n,0]);case 5:return dr(e,[a,2],[n,0],!0,!1);case 6:return dr(e,[a,0],[n,2]);case 7:return dr(e,[a,0],[n,2],!1,!0);case 8:return dr(e,[a,1],[n,2]);case 9:return dr(e,[a,1],[n,2],!1,!0);case 10:return dr(e,[a,2],[n,1]);case 11:return dr(e,[a,2],[n,1],!0,!1);case 12:return dr(e,[a,2],[n,2]);case 13:return dr(e,[a,2],[n,2],!0,!1);case 14:return dr(e,[a,2],[n,2],!1,!0);case 15:return dr(e,[a,2],[n,2],!0,!0);default:throw new Error(`Unknown verb: ${t}`)}}(this.glyphs,15&t.flags,this.firstGlyph,this.lastGlyph)}processContextualSubstitution(e,t,a){let n=this.subtable.table.substitutionTable.items;if(65535!==t.markIndex){let a=n.getItem(t.markIndex),l=new sr(a);e=this.glyphs[this.markedGlyph],(r=l.lookup(e.id))&&(this.glyphs[this.markedGlyph]=this.font.getGlyph(r,e.codePoints))}if(65535!==t.currentIndex){let l=n.getItem(t.currentIndex),s=new sr(l);var r;e=this.glyphs[a],(r=s.lookup(e.id))&&(this.glyphs[a]=this.font.getGlyph(r,e.codePoints))}32768&t.flags&&(this.markedGlyph=a)}processLigature(e,t,a){if(32768&t.flags&&this.ligatureStack.push(a),8192&t.flags){let e=this.subtable.table.ligatureActions,a=this.subtable.table.components,n=this.subtable.table.ligatureList,r=t.action,l=!1,s=0,i=[],o=[];for(;!l;){let t=this.ligatureStack.pop();i.unshift(...this.glyphs[t].codePoints);let u=e.getItem(r++);l=!!(2147483648&u);let d=!!(1073741824&u),f=(1073741823&u)<<2>>2;if(f+=this.glyphs[t].id,s+=a.getItem(f),l||d){let e=n.getItem(s);this.glyphs[t]=this.font.getGlyph(e,i),o.push(t),s=0,i=[]}else this.glyphs[t]=this.font.getGlyph(65535)}this.ligatureStack.push(...o)}}processNoncontextualSubstitutions(e,t,a){let n=new sr(e.table.lookupTable);for(a=0;a<t.length;a++){let e=t[a];if(65535!==e.id){let r=n.lookup(e.id);r&&(t[a]=this.font.getGlyph(r,e.codePoints))}}}_insertGlyphs(e,t,a,n){let r=[];for(;a--;){let e=this.subtable.table.insertionActions.getItem(t++);r.push(this.font.getGlyph(e))}n||e++,this.glyphs.splice(e,0,...r)}processGlyphInsertion(e,t,a){if(32768&t.flags&&(this.markedIndex=a),65535!==t.markedInsertIndex){let e=(31&t.flags)>>>5,a=!!(1024&t.flags);this._insertGlyphs(this.markedIndex,t.markedInsertIndex,e,a)}if(65535!==t.currentInsertIndex){let e=(992&t.flags)>>>5,n=!!(2048&t.flags);this._insertGlyphs(a,t.currentInsertIndex,e,n)}}getSupportedFeatures(){let e=[];for(let t of this.morx.chains)for(let a of t.features)e.push([a.featureType,a.featureSetting]);return e}generateInputs(e){return this.inputCache||this.generateInputCache(),this.inputCache[e]||[]}generateInputCache(){this.inputCache={};for(let e of this.morx.chains){let t=e.defaultFlags;for(let a of e.subtables)a.subFeatureFlags&t&&this.generateInputsForSubtable(a)}}generateInputsForSubtable(e){if(2!==e.type)return;if(!!(4194304&e.coverage))throw new Error("Reverse subtable, not supported.");this.subtable=e,this.ligatureStack=[];let t=this.getStateMachine(e),a=this.getProcessor(),n=[],r=[];this.glyphs=[],t.traverse({enter:(e,t)=>{let l=this.glyphs;r.push({glyphs:l.slice(),ligatureStack:this.ligatureStack.slice()});let s=this.font.getGlyph(e);n.push(s),l.push(n[n.length-1]),a(l[l.length-1],t,l.length-1);let i=0,o=0;for(let e=0;e<l.length&&i<=1;e++)65535!==l[e].id&&(i++,o=l[e].id);if(1===i){let e=n.map((e=>e.id)),t=this.inputCache[o];t?t.push(e):this.inputCache[o]=[e]}},exit:()=>{({glyphs:this.glyphs,ligatureStack:this.ligatureStack}=r.pop()),n.pop()}})}},p.default(or.prototype,"getStateMachine",[x],Object.getOwnPropertyDescriptor(or.prototype,"getStateMachine"),or.prototype),or);function dr(e,t,a,n=!1,r=!1){let l=e.splice(a[0]-(a[1]-1),a[1]);r&&l.reverse();let s=e.splice(t[0],t[1],...l);return n&&s.reverse(),e.splice(a[0]-(t[1]-1),0,...s),e}class fr{constructor(e){this.font=e,this.morxProcessor=new ur(e),this.fallbackPosition=!1}substitute(e){"rtl"===e.direction&&e.glyphs.reverse(),this.morxProcessor.process(e.glyphs,function(e){let t={};for(let a in e){let n;(n=ar[a])&&(null==t[n[0]]&&(t[n[0]]={}),t[n[0]][n[1]]=e[a])}return t}(e.features))}getAvailableFeatures(e,t){return function(e){let t={};if(Array.isArray(e))for(let a=0;a<e.length;a++){let n,r=rr(e[a]);(n=nr[r[0]]&&nr[r[0]][r[1]])&&(t[n]=!0)}else if("object"==typeof e)for(let a in e){let n=e[a];for(let e in n){let r,l=rr([a,e]);n[e]&&(r=nr[l[0]]&&nr[l[0]][l[1]])&&(t[r]=!0)}}return Object.keys(t)}(this.morxProcessor.getSupportedFeatures())}stringsForGlyph(e){let t=this.morxProcessor.generateInputs(e),a=new Set;for(let e of t)this._addStrings(e,0,a,"");return a}_addStrings(e,t,a,n){let r=this.font._cmapProcessor.codePointsForGlyph(e[t]);for(let l of r){let r=n+String.fromCodePoint(l);t<e.length-1?this._addStrings(e,t+1,a,r):a.add(r)}}}class cr{constructor(e,t,a){this.font=e,this.script=t,this.direction=a,this.stages=[],this.globalFeatures={},this.allFeatures={}}_addFeatures(e,t){let a=this.stages.length-1,n=this.stages[a];for(let r of e)null==this.allFeatures[r]&&(n.push(r),this.allFeatures[r]=a,t&&(this.globalFeatures[r]=!0))}add(e,t=!0){if(0===this.stages.length&&this.stages.push([]),"string"==typeof e&&(e=[e]),Array.isArray(e))this._addFeatures(e,t);else{if("object"!=typeof e)throw new Error("Unsupported argument to ShapingPlan#add");this._addFeatures(e.global||[],!0),this._addFeatures(e.local||[],!1)}}addStage(e,t){"function"==typeof e?this.stages.push(e,[]):(this.stages.push([]),this.add(e,t))}setFeatureOverrides(e){if(Array.isArray(e))this.add(e);else if("object"==typeof e)for(let t in e)if(e[t])this.add(t);else if(null!=this.allFeatures[t]){let e=this.stages[this.allFeatures[t]];e.splice(e.indexOf(t),1),delete this.allFeatures[t],delete this.globalFeatures[t]}}assignGlobalFeatures(e){for(let t of e)for(let e in this.globalFeatures)t.features[e]=!0}process(e,t,a){for(let n of this.stages)"function"==typeof n?a||n(this.font,t,this):n.length>0&&e.applyFeatures(n,t,a)}}const hr=["rvrn"],pr=["ccmp","locl","rlig","mark","mkmk"],gr=["frac","numr","dnom"],yr=["calt","clig","liga","rclt","curs","kern"],mr={ltr:["ltra","ltrm"],rtl:["rtla","rtlm"]};class br{static plan(e,t,a){this.planPreprocessing(e),this.planFeatures(e),this.planPostprocessing(e,a),e.assignGlobalFeatures(t),this.assignFeatures(e,t)}static planPreprocessing(e){e.add({global:[...hr,...mr[e.direction]],local:gr})}static planFeatures(e){}static planPostprocessing(e,t){e.add([...pr,...yr]),e.setFeatureOverrides(t)}static assignFeatures(e,t){for(let e=0;e<t.length;e++){let a=t[e];if(8260===a.codePoints[0]){let n=e,r=e+1;for(;n>0&&y.default.isDigit(t[n-1].codePoints[0]);)t[n-1].features.numr=!0,t[n-1].features.frac=!0,n--;for(;r<t.length&&y.default.isDigit(t[r].codePoints[0]);)t[r].features.dnom=!0,t[r].features.frac=!0,r++;a.features.frac=!0,e=r-1}}}}br.zeroMarkWidths="AFTER_GPOS";var wr=[0,1,240,0,0,0,0,0,0,0,56,0,1,253,1,2,254,237,154,45,76,196,48,20,199,187,237,190,56,64,129,192,224,144,72,4,2,121,151,16,18,12,9,134,132,115,40,4,138,160,80,224,80,36,8,78,34,145,72,12,138,32,73,72,8,18,137,68,18,12,201,253,47,215,146,151,166,221,117,215,110,131,219,123,201,47,237,173,235,235,123,237,235,219,186,92,55,22,98,27,236,130,125,208,149,191,255,75,121,12,78,193,25,184,0,151,160,15,110,192,45,184,3,247,224,1,60,145,126,207,224,77,254,30,242,14,62,100,253,83,150,95,164,157,153,78,126,192,181,164,158,8,49,15,22,146,242,237,42,138,37,248,186,44,253,93,169,144,223,12,195,48,12,195,48,12,195,48,12,195,84,143,225,247,159,85,254,254,193,48,12,195,48,12,195,48,185,114,53,51,98,49,39,94,193,92,91,136,14,56,7,143,224,187,61,106,91,159,21,98,83,8,209,107,9,209,111,141,234,69,240,210,202,111,62,215,112,134,217,48,156,99,58,184,182,149,225,124,179,131,123,247,60,207,67,61,244,63,176,232,56,196,245,163,138,156,183,212,255,11,78,166,212,223,78,28,253,194,194,82,101,137,44,208,118,83,61,148,212,164,222,68,163,102,40,117,76,125,178,66,251,253,37,161,54,81,31,245,185,114,241,47,4,147,204,109,17,36,90,221,197,15,83,92,169,118,65,74,155,132,216,7,116,60,23,161,62,211,107,62,210,4,117,131,254,134,36,109,253,93,99,34,33,58,245,126,13,79,251,149,100,141,207,80,113,61,110,110,76,237,227,198,117,149,178,247,157,111,236,217,250,143,203,245,89,98,143,222,107,122,182,217,236,138,12,122,84,222,213,115,69,104,153,36,134,169,109,166,24,211,245,154,230,79,151,178,223,140,213,26,40,209,109,12,101,95,217,251,196,244,238,213,148,20,185,143,125,247,115,154,127,121,234,14,169,203,53,71,248,72,168,53,139,39,180,211,150,75,34,173,84,245,72,142,229,242,78,24,167,232,55,141,167,198,114,181,53,68,206,165,246,216,124,209,115,169,158,83,125,237,176,205,99,136,184,179,173,65,209,40,191,138,150,180,184,115,37,235,58,132,142,81,95,9,153,191,76,207,10,155,52,3,142,107,147,1];const vr=new m.default(new Uint8Array(wr)),_r=["isol","fina","fin2","fin3","medi","med2","init"],Cr=0,Sr=6,xr="isol",kr="fina",Ar=[[[null,null,0],[null,xr,2],[null,xr,1],[null,xr,2],[null,xr,1],[null,xr,6]],[[null,null,0],[null,xr,2],[null,xr,1],[null,xr,2],[null,"fin2",5],[null,xr,6]],[[null,null,0],[null,xr,2],["init",kr,1],["init",kr,3],["init",kr,4],["init",kr,6]],[[null,null,0],[null,xr,2],["medi",kr,1],["medi",kr,3],["medi",kr,4],["medi",kr,6]],[[null,null,0],[null,xr,2],["med2",xr,1],["med2",xr,2],["med2","fin2",5],["med2",xr,6]],[[null,null,0],[null,xr,2],[xr,xr,1],[xr,xr,2],[xr,"fin2",5],[xr,xr,6]],[[null,null,0],[null,xr,2],[null,xr,1],[null,xr,2],[null,"fin3",5],[null,xr,6]]];class Pr extends br{static planFeatures(e){e.add(["ccmp","locl"]);for(let t=0;t<_r.length;t++){let a=_r[t];e.addStage(a,!1)}e.addStage("mset")}static assignFeatures(e,t){super.assignFeatures(e,t);let a=-1,n=0,r=[];for(let e=0;e<t.length;e++){let s,i;let o=Ir((l=t[e]).codePoints[0]);o!==Sr?([i,s,n]=Ar[n][o],null!==i&&-1!==a&&(r[a]=i),r[e]=s,a=e):r[e]=null}for(let e=0;e<t.length;e++){let a;var l=t[e];(a=r[e])&&(l.features[a]=!0)}}}function Ir(e){let t=vr.get(e);if(t)return t-1;let a=y.default.getCategory(e);return"Mn"===a||"Me"===a||"Cf"===a?Sr:Cr}class Or{constructor(e,t){this.glyphs=e,this.reset(t)}reset(e={},t=0){this.options=e,this.flags=e.flags||{},this.markAttachmentType=e.markAttachmentType||0,this.index=t}get cur(){return this.glyphs[this.index]||null}shouldIgnore(e){return this.flags.ignoreMarks&&e.isMark||this.flags.ignoreBaseGlyphs&&e.isBase||this.flags.ignoreLigatures&&e.isLigature||this.markAttachmentType&&e.isMark&&e.markAttachmentType!==this.markAttachmentType}move(e){for(this.index+=e;0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]);)this.index+=e;return 0>this.index||this.index>=this.glyphs.length?null:this.glyphs[this.index]}next(){return this.move(1)}prev(){return this.move(-1)}peek(e=1){let t=this.index,a=this.increment(e);return this.index=t,a}peekIndex(e=1){let t=this.index;this.increment(e);let a=this.index;return this.index=t,a}increment(e=1){let t=e<0?-1:1;for(e=Math.abs(e);e--;)this.move(t);return this.glyphs[this.index]}}const Fr=["DFLT","dflt","latn"];class Dr{constructor(e,t){this.font=e,this.table=t,this.script=null,this.scriptTag=null,this.language=null,this.languageTag=null,this.features={},this.lookups={},this.variationsIndex=e._variationProcessor?this.findVariationsIndex(e._variationProcessor.normalizedCoords):-1,this.selectScript(),this.glyphs=[],this.positions=[],this.ligatureID=1,this.currentFeature=null}findScript(e){if(null==this.table.scriptList)return null;Array.isArray(e)||(e=[e]);for(let t of e)for(let e of this.table.scriptList)if(e.tag===t)return e;return null}selectScript(e,t,a){let n,r=!1;if(!this.script||e!==this.scriptTag){if(n=this.findScript(e),n||(n=this.findScript(Fr)),!n)return this.scriptTag;this.scriptTag=n.tag,this.script=n.script,this.language=null,this.languageTag=null,r=!0}if(a&&a===this.direction||(this.direction=a||Zn(e)),t&&t.length<4&&(t+=" ".repeat(4-t.length)),!t||t!==this.languageTag){this.language=null;for(let e of this.script.langSysRecords)if(e.tag===t){this.language=e.langSys,this.languageTag=e.tag;break}this.language||(this.language=this.script.defaultLangSys,this.languageTag=null),r=!0}if(r&&(this.features={},this.language))for(let e of this.language.featureIndexes){let t=this.table.featureList[e],a=this.substituteFeatureForVariations(e);this.features[t.tag]=a||t.feature}return this.scriptTag}lookupsForFeatures(e=[],t){let a=[];for(let n of e){let e=this.features[n];if(e)for(let r of e.lookupListIndexes)t&&-1!==t.indexOf(r)||a.push({feature:n,index:r,lookup:this.table.lookupList.get(r)})}return a.sort(((e,t)=>e.index-t.index)),a}substituteFeatureForVariations(e){if(-1===this.variationsIndex)return null;let t=this.table.featureVariations.featureVariationRecords[this.variationsIndex].featureTableSubstitution.substitutions;for(let a of t)if(a.featureIndex===e)return a.alternateFeatureTable;return null}findVariationsIndex(e){let t=this.table.featureVariations;if(!t)return-1;let a=t.featureVariationRecords;for(let t=0;t<a.length;t++){let n=a[t].conditionSet.conditionTable;if(this.variationConditionsMatch(n,e))return t}return-1}variationConditionsMatch(e,t){return e.every((e=>{let a=e.axisIndex<t.length?t[e.axisIndex]:0;return e.filterRangeMinValue<=a&&a<=e.filterRangeMaxValue}))}applyFeatures(e,t,a){let n=this.lookupsForFeatures(e);this.applyLookups(n,t,a)}applyLookups(e,t,a){this.glyphs=t,this.positions=a,this.glyphIterator=new Or(t);for(let{feature:a,lookup:n}of e)for(this.currentFeature=a,this.glyphIterator.reset(n.flags);this.glyphIterator.index<t.length;)if(a in this.glyphIterator.cur.features){for(let e of n.subTables){if(this.applyLookup(n.lookupType,e))break}this.glyphIterator.next()}else this.glyphIterator.next()}applyLookup(e,t){throw new Error("applyLookup must be implemented by subclasses")}applyLookupList(e){let t=this.glyphIterator.options,a=this.glyphIterator.index;for(let n of e){this.glyphIterator.reset(t,a),this.glyphIterator.increment(n.sequenceIndex);let e=this.table.lookupList.get(n.lookupListIndex);this.glyphIterator.reset(e.flags,this.glyphIterator.index);for(let t of e.subTables)if(this.applyLookup(e.lookupType,t))break}return this.glyphIterator.reset(t,a),!0}coverageIndex(e,t){switch(null==t&&(t=this.glyphIterator.cur.id),e.version){case 1:return e.glyphs.indexOf(t);case 2:for(let a of e.rangeRecords)if(a.start<=t&&t<=a.end)return a.startCoverageIndex+t-a.start}return-1}match(e,t,a,n){let r=this.glyphIterator.index,l=this.glyphIterator.increment(e),s=0;for(;s<t.length&&l&&a(t[s],l);)n&&n.push(this.glyphIterator.index),s++,l=this.glyphIterator.next();return this.glyphIterator.index=r,!(s<t.length)&&(n||!0)}sequenceMatches(e,t){return this.match(e,t,((e,t)=>e===t.id))}sequenceMatchIndices(e,t){return this.match(e,t,((e,t)=>this.currentFeature in t.features&&e===t.id),[])}coverageSequenceMatches(e,t){return this.match(e,t,((e,t)=>this.coverageIndex(e,t.id)>=0))}getClassID(e,t){switch(t.version){case 1:let a=e-t.startGlyph;if(a>=0&&a<t.classValueArray.length)return t.classValueArray[a];break;case 2:for(let a of t.classRangeRecord)if(a.start<=e&&e<=a.end)return a.class}return 0}classSequenceMatches(e,t,a){return this.match(e,t,((e,t)=>e===this.getClassID(t.id,a)))}applyContext(e){let t;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),-1===t)return!1;let a=e.ruleSets[t];for(let e of a)if(this.sequenceMatches(1,e.input))return this.applyLookupList(e.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;if(t=this.getClassID(this.glyphIterator.cur.id,e.classDef),-1===t)return!1;a=e.classSet[t];for(let t of a)if(this.classSequenceMatches(1,t.classes,e.classDef))return this.applyLookupList(t.lookupRecords);break;case 3:if(this.coverageSequenceMatches(0,e.coverages))return this.applyLookupList(e.lookupRecords)}return!1}applyChainingContext(e){let t;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),-1===t)return!1;let a=e.chainRuleSets[t];for(let e of a)if(this.sequenceMatches(-e.backtrack.length,e.backtrack)&&this.sequenceMatches(1,e.input)&&this.sequenceMatches(1+e.input.length,e.lookahead))return this.applyLookupList(e.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;t=this.getClassID(this.glyphIterator.cur.id,e.inputClassDef);let n=e.chainClassSet[t];if(!n)return!1;for(let t of n)if(this.classSequenceMatches(-t.backtrack.length,t.backtrack,e.backtrackClassDef)&&this.classSequenceMatches(1,t.input,e.inputClassDef)&&this.classSequenceMatches(1+t.input.length,t.lookahead,e.lookaheadClassDef))return this.applyLookupList(t.lookupRecords);break;case 3:if(this.coverageSequenceMatches(-e.backtrackGlyphCount,e.backtrackCoverage)&&this.coverageSequenceMatches(0,e.inputCoverage)&&this.coverageSequenceMatches(e.inputGlyphCount,e.lookaheadCoverage))return this.applyLookupList(e.lookupRecords)}return!1}}class Tr{constructor(e,t,a=[],n){if(this._font=e,this.codePoints=a,this.id=t,this.features={},Array.isArray(n))for(let e=0;e<n.length;e++){let t=n[e];this.features[t]=!0}else"object"==typeof n&&Object.assign(this.features,n);this.ligatureID=null,this.ligatureComponent=null,this.isLigated=!1,this.cursiveAttachment=null,this.markAttachment=null,this.shaperInfo=null,this.substituted=!1,this.isMultiplied=!1}get id(){return this._id}set id(e){this._id=e,this.substituted=!0;let t=this._font.GDEF;if(t&&t.glyphClassDef){let a=Dr.prototype.getClassID(e,t.glyphClassDef);this.isBase=1===a,this.isLigature=2===a,this.isMark=3===a,this.markAttachmentType=t.markAttachClassDef?Dr.prototype.getClassID(e,t.markAttachClassDef):0}else this.isMark=this.codePoints.length>0&&this.codePoints.every(y.default.isMark),this.isBase=!this.isMark,this.isLigature=this.codePoints.length>1,this.markAttachmentType=0}copy(){return new Tr(this._font,this.id,this.codePoints,this.features)}}class Lr extends br{static planFeatures(e){e.add(["ljmo","vjmo","tjmo"],!1)}static assignFeatures(e,t){let a=0,n=0;for(;n<t.length;){let r,l=t[n].codePoints[0],s=Mr(l);switch([r,a]=Vr[a][s],r){case Gr:e.font.hasGlyphForCodePoint(l)||(n=Ur(t,n,e.font));break;case Br:n=Nr(t,n,e.font);break;case Er:qr(t,n,e.font);break;case Rr:n=jr(t,n,e.font)}n++}}}Lr.zeroMarkWidths="NONE";function Mr(e){return(e=>4352<=e&&e<=4447||43360<=e&&e<=43388)(e)?1:(e=>4448<=e&&e<=4519||55216<=e&&e<=55238)(e)?2:(e=>4520<=e&&e<=4607||55243<=e&&e<=55291)(e)?3:(e=>e-44032<11173&&(e-44032)%28==0)(e)?4:(e=>44032<=e&&e<=55204)(e)?5:(e=>12334<=e&&e<=12335)(e)?6:0}const Gr=1,Br=2,Er=4,Rr=5,Vr=[[[0,0],[0,1],[0,0],[0,0],[Gr,2],[Gr,3],[Rr,0]],[[0,0],[0,1],[Br,2],[0,0],[Gr,2],[Gr,3],[Rr,0]],[[0,0],[0,1],[0,0],[Br,3],[Gr,2],[Gr,3],[Er,0]],[[0,0],[0,1],[0,0],[0,0],[Gr,2],[Gr,3],[Er,0]]];function zr(e,t,a){return new Tr(e,e.glyphForCodePoint(t).id,[t],a)}function Ur(e,t,a){let n=e[t],r=n.codePoints[0]-44032,l=4519+r%28;r=r/28|0;let s=4352+r/21|0,i=4449+r%21;if(!a.hasGlyphForCodePoint(s)||!a.hasGlyphForCodePoint(i)||4519!==l&&!a.hasGlyphForCodePoint(l))return t;let o=zr(a,s,n.features);o.features.ljmo=!0;let u=zr(a,i,n.features);u.features.vjmo=!0;let d=[o,u];if(l>4519){let e=zr(a,l,n.features);e.features.tjmo=!0,d.push(e)}return e.splice(t,1,...d),t+d.length-1}function Nr(e,t,a){let n,r,l,s,i=e[t],o=Mr(e[t].codePoints[0]),u=e[t-1].codePoints[0],d=Mr(u);if(4===d&&3===o)n=u,s=i;else{2===o?(r=e[t-1],l=i):(r=e[t-2],l=e[t-1],s=i);let a=r.codePoints[0],u=l.codePoints[0];(e=>4352<=e&&e<=4370)(a)&&(e=>4449<=e&&e<=4469)(u)&&(n=44032+28*(21*(a-4352)+(u-4449)))}let f=s&&s.codePoints[0]||4519;if(null!=n&&(4519===f||(e=>1<=e&&e<=4546)(f))){let r=n+(f-4519);if(a.hasGlyphForCodePoint(r)){let n=2===d?3:2;return e.splice(t-n+1,n,zr(a,r,i.features)),t-n+1}}return r&&(r.features.ljmo=!0),l&&(l.features.vjmo=!0),s&&(s.features.tjmo=!0),4===d?(Ur(e,t-1,a),t+1):t}function qr(e,t,a){let n=e[t],r=e[t].codePoints[0];if(0===a.glyphForCodePoint(r).advanceWidth)return;let l=function(e){switch(Mr(e)){case 4:case 5:return 1;case 2:return 2;case 3:return 3}}(e[t-1].codePoints[0]);return e.splice(t,1),e.splice(t-l,0,n)}function jr(e,t,a){let n=e[t],r=e[t].codePoints[0];if(a.hasGlyphForCodePoint(9676)){let l=zr(a,9676,n.features),s=0===a.glyphForCodePoint(r).advanceWidth?t:t+1;e.splice(s,0,l),t++}return t}var Hr={stateTable:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],accepting:[!1,!0,!0,!0,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!1,!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!1,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!0,!1,!1,!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!0,!1,!0,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0,!0,!0,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!1,!0,!0,!0,!0,!1,!1,!1,!1,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!0,!1,!1,!1,!1,!1,!0,!0,!1,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!0,!1,!1,!1,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!1,!0,!0,!1,!0,!0,!0],tags:[[],["broken_cluster"],["consonant_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],[],["broken_cluster"],["symbol_cluster"],[],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["symbol_cluster"],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],[],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],[],[],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],["consonant_syllable"],["vowel_syllable"],["standalone_cluster"]]},Yr={categories:["O","IND","S","GB","B","FM","CGJ","VMAbv","VMPst","VAbv","VPst","CMBlw","VPre","VBlw","H","VMBlw","CMAbv","MBlw","CS","R","SUB","MPst","MPre","FAbv","FPst","FBlw","null","SMAbv","SMBlw","VMPre","ZWNJ","ZWJ","WJ","M","VS","N","HN","MAbv"],decompositions:{2507:[2503,2494],2508:[2503,2519],2888:[2887,2902],2891:[2887,2878],2892:[2887,2903],3018:[3014,3006],3019:[3015,3006],3020:[3014,3031],3144:[3142,3158],3264:[3263,3285],3271:[3270,3285],3272:[3270,3286],3274:[3270,3266],3275:[3270,3266,3285],3402:[3398,3390],3403:[3399,3390],3404:[3398,3415],3546:[3545,3530],3548:[3545,3535],3549:[3545,3535,3530],3550:[3545,3551],3635:[3661,3634],3763:[3789,3762],3955:[3953,3954],3957:[3953,3956],3958:[4018,3968],3959:[4018,3953,3968],3960:[4019,3968],3961:[4019,3953,3968],3969:[3953,3968],6971:[6970,6965],6973:[6972,6965],6976:[6974,6965],6977:[6975,6965],6979:[6978,6965],69934:[69937,69927],69935:[69938,69927],70475:[70471,70462],70476:[70471,70487],70843:[70841,70842],70844:[70841,70832],70846:[70841,70845],71098:[71096,71087],71099:[71097,71087]},stateTable:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,0,23,0,0,2,0,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],accepting:[!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!1,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0],tags:[[],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["symbol_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["virama_terminated_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["number_joiner_terminated_cluster"],["standard_cluster"],["standard_cluster"],["numeral_cluster"]]};const Wr=1,Kr=8,Xr=16,Jr=32,Zr=64,$r=128,Qr=8192,el=32768,tl=65536,al=1<<17,nl={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Above_C:64,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768},rl=2|tl|al|4|2048|4096,ll=Zr|Jr,sl=Xr|16384,il={Default:{hasOldSpec:!1,virama:0,basePos:"Last",rephPos:nl.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Devanagari:{hasOldSpec:!0,virama:2381,basePos:"Last",rephPos:nl.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Bengali:{hasOldSpec:!0,virama:2509,basePos:"Last",rephPos:nl.After_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gurmukhi:{hasOldSpec:!0,virama:2637,basePos:"Last",rephPos:nl.Before_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gujarati:{hasOldSpec:!0,virama:2765,basePos:"Last",rephPos:nl.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Oriya:{hasOldSpec:!0,virama:2893,basePos:"Last",rephPos:nl.After_Main,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Tamil:{hasOldSpec:!0,virama:3021,basePos:"Last",rephPos:nl.After_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Telugu:{hasOldSpec:!0,virama:3149,basePos:"Last",rephPos:nl.After_Post,rephMode:"Explicit",blwfMode:"Post_Only"},Kannada:{hasOldSpec:!0,virama:3277,basePos:"Last",rephPos:nl.After_Post,rephMode:"Implicit",blwfMode:"Post_Only"},Malayalam:{hasOldSpec:!0,virama:3405,basePos:"Last",rephPos:nl.After_Main,rephMode:"Log_Repha",blwfMode:"Pre_And_Post"},Khmer:{hasOldSpec:!1,virama:6098,basePos:"First",rephPos:nl.Ra_To_Become_Reph,rephMode:"Vis_Repha",blwfMode:"Pre_And_Post"}},ol={6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]};var ul=[0,17,0,0,0,0,0,0,0,0,216,96,1,102,15,153,240,237,157,123,140,92,85,29,199,239,238,206,206,204,238,204,238,116,11,68,8,98,81,32,196,80,109,64,34,182,20,22,144,96,10,137,88,77,164,85,81,68,9,136,65,80,131,144,54,8,8,106,45,32,15,65,76,44,252,33,229,47,138,254,193,67,99,193,180,18,17,44,16,80,33,96,20,176,168,53,4,172,81,2,162,32,126,207,220,115,230,158,57,115,222,143,123,103,101,126,201,39,247,113,206,61,231,119,126,191,243,190,119,103,151,212,178,236,96,176,12,28,1,78,6,167,128,79,128,207,130,119,131,247,70,56,158,14,206,6,95,2,235,28,158,91,15,46,3,27,192,53,224,187,224,102,176,25,108,1,119,130,123,52,207,95,0,46,6,63,7,191,2,247,131,71,192,19,224,105,176,4,252,5,252,13,188,12,230,193,127,65,125,50,15,155,197,113,79,240,86,112,32,88,10,14,3,43,192,113,224,68,240,33,176,6,156,6,206,2,95,0,95,1,95,5,223,0,87,130,235,193,38,176,25,108,1,119,130,173,224,62,240,32,120,12,60,5,254,8,118,129,221,224,21,240,6,152,172,103,217,12,216,11,236,7,14,4,75,193,225,96,37,56,22,172,170,231,186,175,198,113,13,56,141,94,159,133,227,121,224,66,112,17,184,28,92,1,190,67,195,191,143,227,45,224,54,112,7,216,90,207,203,125,31,61,218,242,32,141,255,24,142,191,4,79,209,235,199,233,241,58,240,12,206,31,226,158,217,229,152,135,13,207,112,105,238,198,249,43,224,13,208,104,100,89,7,188,5,44,1,7,131,101,224,136,70,127,124,114,156,167,247,30,6,31,192,249,201,224,20,240,169,70,110,175,51,113,60,151,198,185,128,222,187,24,199,111,130,171,27,121,125,154,167,220,136,235,77,96,51,184,13,220,1,182,210,103,238,163,199,29,56,254,134,166,247,84,131,218,10,199,63,55,244,101,125,209,16,206,219,248,37,196,221,65,239,221,13,94,195,117,173,153,101,237,102,17,119,15,156,239,75,175,79,2,7,52,7,211,59,68,114,47,148,195,154,121,219,115,121,102,69,2,61,82,115,52,116,62,94,162,247,243,224,90,73,252,19,105,92,214,22,87,227,122,45,248,52,133,143,123,36,173,111,159,227,238,175,208,232,66,234,246,23,185,184,223,166,199,13,66,188,11,155,121,255,203,235,186,142,62,247,181,166,92,111,134,46,108,196,136,17,126,60,60,4,58,140,24,49,98,196,136,17,35,70,140,88,120,28,57,4,58,136,60,71,215,186,223,114,88,223,175,84,220,95,174,121,230,90,164,127,61,216,4,54,131,45,224,78,112,15,216,14,30,0,143,130,39,193,179,96,87,51,223,91,218,141,227,63,193,127,192,196,84,150,181,192,28,216,7,188,125,42,223,207,121,39,142,135,130,229,224,88,112,6,45,203,102,46,255,85,184,191,122,170,122,123,143,24,49,98,196,155,9,178,111,185,22,125,239,251,106,197,62,125,85,84,109,139,17,35,70,196,225,4,110,206,74,222,115,206,131,211,208,207,156,5,206,19,230,122,23,58,206,253,78,162,199,121,154,199,81,224,146,169,226,125,234,6,156,95,45,164,121,195,84,241,94,135,135,188,151,185,9,97,183,14,193,252,243,181,69,57,43,231,96,35,240,147,69,102,54,32,222,3,138,184,47,224,254,254,139,179,108,13,184,6,60,186,184,63,252,247,8,111,238,145,101,123,131,53,224,146,233,44,219,6,178,86,150,29,3,46,33,71,114,143,30,119,210,35,207,59,218,89,246,189,177,156,211,113,254,131,246,96,156,157,184,55,62,83,92,31,135,243,75,193,118,48,54,139,117,1,184,116,182,72,39,22,219,105,154,175,226,184,188,147,159,31,223,233,143,179,174,147,235,244,211,206,160,222,35,70,140,24,49,162,28,254,93,113,31,28,123,252,113,97,197,162,234,243,159,175,189,185,185,28,220,142,121,224,93,83,131,235,81,242,157,207,189,184,191,141,155,39,222,143,243,71,166,242,249,232,14,73,122,236,251,187,39,232,250,154,156,63,61,149,127,83,71,210,219,73,211,122,94,146,223,18,154,230,63,16,246,50,247,60,219,55,125,125,202,111,253,76,190,153,34,223,76,28,37,209,119,18,109,160,9,22,77,23,115,227,189,167,243,176,253,113,60,24,44,155,238,207,239,136,233,98,30,62,143,243,19,192,7,167,139,252,88,188,143,210,123,159,156,206,191,251,58,3,199,207,131,47,79,15,234,191,126,186,184,94,70,211,190,140,62,191,113,218,236,199,121,170,187,204,62,196,126,15,73,194,136,93,174,67,218,55,130,155,193,45,224,54,240,35,240,99,112,47,248,5,120,8,252,22,252,14,236,4,187,192,110,240,10,120,3,212,90,69,154,109,156,239,9,246,5,7,128,67,192,161,96,57,56,182,53,168,195,189,208,97,21,238,175,166,97,107,113,60,21,156,33,137,203,226,159,131,176,243,91,197,245,69,56,255,58,184,10,252,12,215,55,224,120,19,13,191,21,199,219,21,105,17,72,252,187,90,131,54,35,156,42,169,111,221,60,17,127,59,120,16,60,6,30,7,127,104,229,123,255,127,194,241,133,86,254,252,238,186,217,103,47,33,238,171,96,12,235,133,58,104,129,185,118,17,190,15,206,247,3,7,129,119,129,247,180,139,178,153,56,178,173,14,35,250,189,191,93,254,122,79,172,135,124,216,73,26,125,142,182,40,175,15,101,151,95,198,71,52,126,42,139,88,101,33,223,242,86,149,63,105,111,164,15,252,56,103,79,50,78,125,134,171,87,103,226,252,156,118,241,189,108,42,59,174,107,202,239,159,79,117,89,207,233,120,116,68,251,47,68,116,239,105,99,176,204,179,78,150,137,169,12,108,108,191,12,245,102,163,99,191,61,12,239,57,92,202,127,13,202,119,67,59,93,159,239,106,127,246,189,237,149,138,240,245,220,220,111,147,164,47,231,191,195,39,115,46,217,188,128,133,223,77,143,228,239,154,54,35,173,45,212,215,119,224,248,67,176,213,193,247,47,90,252,125,205,49,9,254,142,98,27,116,124,96,8,198,52,91,30,133,174,79,26,230,74,207,182,251,199,21,219,58,181,204,114,238,94,37,42,63,254,181,221,31,254,247,18,124,250,47,90,191,95,231,242,34,239,48,100,107,77,6,105,35,147,51,89,54,3,246,2,251,129,131,102,242,176,165,51,118,229,231,255,174,137,180,215,141,224,240,153,188,237,63,199,181,35,118,126,21,157,131,175,68,156,227,103,242,62,246,196,25,121,251,87,217,55,53,68,247,15,207,244,223,227,251,34,210,15,173,228,202,190,145,246,99,100,189,248,49,206,110,151,115,207,156,78,211,59,27,199,43,106,131,105,159,139,251,231,91,216,124,152,168,202,63,169,89,219,252,255,46,31,207,235,154,113,113,71,73,58,12,43,191,174,56,255,71,20,251,40,101,18,90,6,221,248,179,16,184,72,24,7,92,236,147,106,173,188,144,252,191,144,33,117,247,109,181,177,46,157,44,91,112,144,253,101,254,220,134,170,117,30,86,222,236,82,181,253,163,213,77,250,123,22,11,66,215,33,134,137,41,220,20,175,195,133,155,226,249,234,89,181,173,22,90,57,108,124,54,76,200,244,93,72,250,235,202,164,146,42,117,241,213,185,42,253,135,189,78,84,105,147,178,235,142,173,84,173,247,66,245,127,140,180,170,176,63,175,183,107,254,41,36,85,25,23,74,89,102,155,253,212,198,35,48,22,145,69,118,241,166,26,57,205,9,148,99,113,126,62,222,40,238,187,208,172,21,207,118,109,52,77,161,54,226,227,26,117,163,54,153,226,210,35,184,174,211,189,109,221,234,247,111,166,75,139,194,68,117,237,234,195,238,179,26,255,178,112,94,100,105,16,97,254,109,83,255,182,37,254,99,50,78,227,48,105,211,248,196,191,98,126,50,105,55,6,239,13,148,73,240,111,47,158,165,127,89,253,118,105,175,228,200,231,101,235,223,129,178,148,236,95,49,174,120,78,132,248,151,217,158,249,151,33,243,79,91,225,95,94,72,219,213,137,170,60,218,103,44,253,219,235,87,199,10,63,215,230,220,198,0,215,246,203,124,170,188,46,201,191,182,237,87,132,213,109,214,166,152,143,101,254,13,29,75,153,77,196,186,228,218,63,107,243,24,227,198,16,80,159,40,32,210,88,32,253,179,171,127,39,45,250,231,73,139,246,43,147,73,69,159,16,187,127,238,100,69,187,13,153,199,177,126,187,155,183,69,255,172,107,203,170,177,146,157,139,247,100,241,196,123,202,251,150,243,47,81,248,182,44,235,191,217,216,60,46,180,109,66,221,178,125,203,252,175,146,20,239,69,100,34,206,167,109,230,212,93,253,12,254,142,217,158,93,253,73,218,51,249,125,104,17,190,77,241,247,197,235,186,161,61,243,207,233,234,20,111,23,254,25,23,255,234,196,103,189,164,157,155,15,129,127,85,113,153,176,254,218,198,191,252,53,59,183,241,175,216,247,202,164,167,107,4,255,118,58,57,62,34,250,151,215,169,44,255,106,177,108,191,4,102,119,54,30,171,32,98,234,143,187,54,85,248,141,209,110,232,219,14,111,147,208,249,150,9,83,191,230,58,159,182,157,115,203,236,18,3,171,52,37,107,105,219,62,94,214,134,85,251,35,44,140,29,217,94,137,108,191,69,37,174,253,53,191,127,226,42,177,125,225,11,91,183,219,34,10,121,158,111,167,227,141,254,125,42,114,228,215,22,132,110,251,111,22,113,98,172,107,196,58,169,178,113,10,219,155,242,12,177,119,119,63,111,46,135,137,204,222,204,23,68,68,123,215,179,162,95,201,28,236,173,170,171,41,246,167,121,154,20,101,63,106,187,143,229,80,175,248,250,218,161,54,20,243,37,38,153,176,240,113,138,58,166,235,39,51,143,58,197,218,32,107,135,100,60,38,245,164,174,210,125,206,158,110,249,29,226,167,128,181,7,29,252,222,183,108,29,229,83,119,101,82,117,31,223,197,114,190,160,170,43,178,113,148,212,157,238,92,157,172,57,102,251,251,170,30,36,111,151,125,13,174,159,231,247,58,100,101,24,232,39,117,117,118,44,143,211,154,200,97,113,216,179,236,62,15,159,150,49,47,27,230,6,109,41,203,151,208,164,249,119,245,176,180,31,123,86,124,175,99,170,227,50,233,8,231,161,200,210,177,73,63,11,124,62,52,255,212,229,243,73,183,12,120,73,157,135,111,120,170,242,138,226,179,110,238,62,39,220,179,89,131,196,202,95,6,159,191,77,185,83,229,239,42,49,236,79,196,59,255,178,198,104,155,125,148,8,123,2,204,247,186,253,23,17,126,173,209,219,131,161,99,127,247,124,38,135,221,151,165,65,230,8,166,253,24,2,219,27,234,217,63,112,31,53,180,15,40,171,255,142,145,127,108,253,9,93,251,150,213,6,36,237,216,101,141,204,175,147,153,176,251,221,247,30,154,53,131,110,143,67,102,79,235,53,102,76,155,120,236,253,185,142,119,3,246,243,240,25,47,170,245,4,191,87,164,90,99,200,252,43,194,230,189,74,253,29,246,2,164,126,78,88,191,101,101,143,146,191,170,94,176,112,137,29,187,107,127,217,58,122,214,111,127,65,181,47,72,218,225,192,30,213,68,255,179,124,221,9,237,255,67,159,231,223,189,176,49,207,123,252,77,80,135,68,219,153,252,33,222,111,213,244,233,251,218,211,103,172,33,117,176,153,21,123,81,50,92,199,65,107,191,165,28,203,36,227,140,204,23,164,173,245,237,157,140,217,219,155,204,155,164,121,42,250,6,219,122,99,26,31,69,25,152,63,40,108,161,171,147,186,254,158,223,183,108,78,232,243,118,25,167,251,234,56,167,111,232,252,201,52,222,166,76,155,8,255,157,87,71,184,182,102,177,128,228,30,179,23,9,227,207,25,170,62,54,134,125,109,237,100,218,243,213,233,99,171,111,102,56,234,158,9,241,127,138,180,109,243,179,205,195,75,151,73,80,47,174,99,140,53,62,122,244,202,109,177,134,149,210,200,156,255,6,216,215,119,188,132,250,219,244,173,178,73,66,116,143,161,191,46,237,20,226,170,83,173,29,183,140,202,122,155,152,84,249,132,218,88,39,161,245,162,44,155,250,234,80,117,120,108,91,248,218,72,39,101,215,199,212,245,35,212,62,195,84,127,93,242,72,81,55,92,197,70,95,254,253,53,191,254,172,75,214,225,252,223,233,164,220,127,146,189,27,82,217,48,212,247,73,215,217,58,76,235,253,113,205,154,89,182,134,29,43,190,183,118,169,115,209,254,174,53,225,94,133,203,62,31,249,219,24,254,251,50,149,244,234,127,232,126,156,207,250,213,102,77,75,209,181,91,151,253,200,210,235,179,132,230,68,65,175,28,137,251,15,221,62,142,235,251,215,14,215,94,180,123,120,42,187,68,182,185,110,207,140,223,203,234,123,63,81,243,31,215,66,218,139,206,223,172,159,183,42,119,64,125,207,50,77,253,76,221,62,44,234,169,184,255,40,123,255,97,146,144,111,20,51,15,255,14,244,75,129,182,25,72,67,177,175,66,194,90,244,93,141,248,125,92,108,223,168,222,13,138,247,217,119,186,236,152,90,116,243,57,155,178,202,202,36,75,147,125,83,25,162,151,105,110,236,18,174,19,111,223,243,118,179,237,15,12,109,202,52,30,145,50,177,111,36,123,250,7,206,71,92,230,192,161,107,29,223,57,183,139,238,174,101,140,173,191,238,126,166,136,91,166,142,190,182,150,73,21,249,134,150,183,12,127,135,60,111,83,222,216,229,8,177,165,201,174,41,194,77,246,177,181,147,173,248,214,39,83,120,72,125,9,77,219,70,127,215,231,109,236,150,170,46,198,200,207,39,13,89,153,171,148,216,54,13,205,191,44,157,83,249,62,150,174,182,18,154,94,10,187,184,164,239,34,49,218,138,73,15,157,111,83,213,31,85,25,171,168,191,46,254,137,89,143,67,242,8,181,121,138,188,92,116,170,34,255,170,202,111,202,147,172,123,39,133,111,99,201,145,255,157,42,94,88,60,241,119,222,250,246,228,52,215,169,96,82,231,246,164,7,202,62,27,182,22,151,217,47,102,27,246,201,203,54,95,223,52,135,169,93,165,44,143,139,205,92,37,212,103,190,105,199,202,35,52,255,20,62,240,45,107,104,58,125,191,133,213,201,25,186,119,172,134,253,111,25,117,195,123,36,81,172,223,219,4,244,181,38,233,126,151,238,243,91,206,145,237,107,250,221,101,242,14,155,127,71,26,218,70,59,194,249,48,183,59,173,127,74,168,255,166,182,160,243,29,251,219,36,34,190,127,151,194,231,107,35,101,246,19,98,157,180,145,40,191,157,158,208,191,174,191,129,78,222,159,235,190,203,32,176,191,5,225,223,243,244,252,229,89,47,120,155,199,234,75,125,250,212,88,190,234,166,149,96,124,34,245,140,248,136,125,159,161,178,35,251,142,92,167,63,211,81,166,171,175,254,62,207,235,218,90,213,109,200,5,246,119,82,198,241,111,66,221,255,133,214,105,223,223,175,228,227,13,216,62,178,239,249,112,85,92,34,108,221,202,254,159,131,10,38,226,239,253,243,125,26,19,93,93,83,249,164,147,13,246,241,98,222,186,111,223,250,252,99,8,55,73,138,122,235,51,78,176,239,16,25,204,79,166,121,145,75,253,102,190,98,99,142,237,239,237,166,236,35,108,108,165,10,239,179,87,77,110,51,163,255,3,251,135,84,101,103,34,134,203,202,28,115,141,60,80,191,4,159,139,250,197,240,191,43,124,249,217,124,201,119,173,147,242,251,153,24,107,49,163,254,142,227,169,237,152,218,170,21,191,227,166,205,191,132,117,120,172,242,135,210,203,211,226,155,45,83,187,118,181,159,110,253,151,106,108,146,245,51,3,250,59,206,133,202,222,35,97,162,43,27,63,102,140,75,124,148,82,248,62,213,68,234,250,45,27,99,250,126,151,95,252,102,81,177,238,236,221,183,248,6,212,165,252,50,27,40,199,45,199,239,153,251,202,58,43,172,253,20,243,176,42,196,102,94,38,141,151,176,190,232,214,17,166,57,91,168,109,99,239,103,248,246,171,46,99,134,235,119,246,166,111,134,85,115,196,208,250,196,135,247,206,75,172,71,188,136,245,137,157,243,235,37,22,214,109,191,157,194,126,49,234,143,171,253,164,182,75,188,55,169,107,127,252,185,216,207,105,237,19,75,199,214,224,220,200,166,173,199,90,199,248,72,140,60,67,117,73,145,191,139,62,190,246,141,53,70,134,250,59,180,62,196,182,117,140,122,27,43,173,84,250,149,149,190,141,132,166,229,170,207,48,250,62,134,190,166,248,101,139,76,39,241,154,191,239,99,51,155,103,125,210,142,85,55,92,125,100,171,179,109,56,47,169,108,20,34,41,252,21,42,101,212,37,215,188,84,113,83,72,168,205,83,216,36,52,109,23,123,133,166,25,250,92,12,137,81,71,67,237,40,211,39,203,250,159,215,213,109,83,155,144,165,169,211,77,101,115,213,81,150,167,78,127,155,244,100,207,155,202,103,91,126,157,77,124,109,27,171,110,216,228,147,50,127,23,137,145,78,168,254,41,202,31,195,182,101,248,34,117,190,161,254,13,213,39,180,28,85,181,139,208,252,109,234,185,107,62,166,184,41,244,54,229,173,179,151,143,196,240,103,76,255,135,202,255,0];const{decompositions:dl}=Yr,fl=new m.default(new Uint8Array(ul)),cl=new b.default(Hr);class hl extends br{static planFeatures(e){var t;e.addStage(ml),e.addStage(["locl","ccmp"]),e.addStage(Sl),e.addStage("nukt"),e.addStage("akhn"),e.addStage("rphf",!1),e.addStage("rkrf"),e.addStage("pref",!1),e.addStage("blwf",!1),e.addStage("abvf",!1),e.addStage("half",!1),e.addStage("pstf",!1),e.addStage("vatu"),e.addStage("cjct"),e.addStage("cfar",!1),e.addStage(xl),e.addStage({local:["init"],global:["pres","abvs","blws","psts","haln","dist","abvm","blwm","calt","clig"]}),e.unicodeScript=(t=e.script,Xn[t]),e.indicConfig=il[e.unicodeScript]||il.Default,e.isOldSpec=e.indicConfig.hasOldSpec&&"2"!==e.script[e.script.length-1]}static assignFeatures(e,t){for(let a=t.length-1;a>=0;a--){let n=t[a].codePoints[0],r=ol[n]||dl[n];if(r){let n=r.map((n=>{let r=e.font.glyphForCodePoint(n);return new Tr(e.font,r.id,[n],t[a].features)}));t.splice(a,1,...n)}}}}function pl(e){return fl.get(e.codePoints[0])>>8}function gl(e){return 1<<(255&fl.get(e.codePoints[0]))}hl.zeroMarkWidths="NONE";class yl{constructor(e,t,a,n){this.category=e,this.position=t,this.syllableType=a,this.syllable=n}}function ml(e,t){let a=0,n=0;for(let[e,r,l]of cl.match(t.map(pl))){if(e>n){++a;for(let r=n;r<e;r++)t[r].shaperInfo=new yl(Wr,nl.End,"non_indic_cluster",a)}++a;for(let n=e;n<=r;n++)t[n].shaperInfo=new yl(1<<pl(t[n]),gl(t[n]),l[0],a);n=r+1}if(n<t.length){++a;for(let e=n;e<t.length;e++)t[e].shaperInfo=new yl(Wr,nl.End,"non_indic_cluster",a)}}function bl(e){return e.shaperInfo.category&rl}function wl(e){return e.shaperInfo.category&ll}function vl(e){return e.shaperInfo.category&sl}function _l(e,t){for(let a of e)a.features={[t]:!0};return e[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([t],e),1===e.length}function Cl(e,t,a){let n=[a,t,a];return _l(n.slice(0,2),"blwf")||_l(n.slice(1,3),"blwf")?nl.Below_C:_l(n.slice(0,2),"pstf")||_l(n.slice(1,3),"pstf")||_l(n.slice(0,2),"pref")||_l(n.slice(1,3),"pref")?nl.Post_C:nl.Base_C}function Sl(e,t,a){let n=a.indicConfig,r=e._layoutEngine.engine.GSUBProcessor.features,l=e.glyphForCodePoint(9676).id,s=e.glyphForCodePoint(n.virama).id;if(s){let a=new Tr(e,s,[n.virama]);for(let e=0;e<t.length;e++)t[e].shaperInfo.position===nl.Base_C&&(t[e].shaperInfo.position=Cl(0,t[e].copy(),a))}for(let s=0,i=kl(t,0);s<t.length;s=i,i=kl(t,s)){let{category:o,syllableType:u}=t[s].shaperInfo;if("symbol_cluster"===u||"non_indic_cluster"===u)continue;if("broken_cluster"===u&&l){let a=new Tr(e,l,[9676]);a.shaperInfo=new yl(1<<pl(a),gl(a),t[s].shaperInfo.syllableType,t[s].shaperInfo.syllable);let n=s;for(;n<i&&t[n].shaperInfo.category===el;)n++;t.splice(n++,0,a),i++}let d=i,f=s,c=!1;if(n.rephPos!==nl.Ra_To_Become_Reph&&r.rphf&&s+3<=i&&("Implicit"===n.rephMode&&!wl(t[s+2])||"Explicit"===n.rephMode&&t[s+2].shaperInfo.category===Zr)){let e=[t[s].copy(),t[s+1].copy(),t[s+2].copy()];if(_l(e.slice(0,2),"rphf")||"Explicit"===n.rephMode&&_l(e,"rphf")){for(f+=2;f<i&&wl(t[f]);)f++;d=s,c=!0}}else if("Log_Repha"===n.rephMode&&t[s].shaperInfo.category===el){for(f++;f<i&&wl(t[f]);)f++;d=s,c=!0}switch(n.basePos){case"Last":{let e=i,a=!1;do{let n=t[--e].shaperInfo;if(bl(t[e])){if(n.position!==nl.Below_C&&(n.position!==nl.Post_C||a)){d=e;break}n.position===nl.Below_C&&(a=!0),d=e}else if(s<e&&n.category===Zr&&t[e-1].shaperInfo.category===Xr)break}while(e>f);break}case"First":d=s;for(let e=d+1;e<i;e++)bl(t[e])&&(t[e].shaperInfo.position=nl.Below_C)}c&&d===s&&f-d<=2&&(c=!1);for(let e=s;e<d;e++){let a=t[e].shaperInfo;a.position=Math.min(nl.Pre_C,a.position)}d<i&&(t[d].shaperInfo.position=nl.Base_C);for(let e=d+1;e<i;e++)if(t[e].shaperInfo.category===$r){for(let a=e+1;a<i;a++)if(bl(t[a])){t[a].shaperInfo.position=nl.Final_C;break}break}if(c&&(t[s].shaperInfo.position=nl.Ra_To_Become_Reph),a.isOldSpec){let e="Malayalam"!==a.unicodeScript;for(let a=d+1;a<i;a++)if(t[a].shaperInfo.category===Xr){let n;for(n=i-1;n>a&&!(bl(t[n])||e&&t[n].shaperInfo.category===Xr);n--);if(t[n].shaperInfo.category!==Xr&&n>a){let e=t[a];t.splice(a,0,...t.splice(a+1,n-a)),t[n]=e}break}}let h=nl.Start;for(let e=s;e<i;e++){let a=t[e].shaperInfo;if(a.category&(ll|Kr|Qr|al|sl&a.category)){if(a.position=h,a.category===Xr&&a.position===nl.Pre_M)for(let n=e;n>s;n--)if(t[n-1].shaperInfo.position!==nl.Pre_M){a.position=t[n-1].shaperInfo.position;break}}else a.position!==nl.SMVD&&(h=a.position)}let p=d;for(let e=d+1;e<i;e++)if(bl(t[e])){for(let a=p+1;a<e;a++)t[a].shaperInfo.position<nl.SMVD&&(t[a].shaperInfo.position=t[e].shaperInfo.position);p=e}else t[e].shaperInfo.category===$r&&(p=e);let g=t.slice(s,i);g.sort(((e,t)=>e.shaperInfo.position-t.shaperInfo.position)),t.splice(s,g.length,...g);for(let e=s;e<i;e++)if(t[e].shaperInfo.position===nl.Base_C){d=e;break}for(let e=s;e<i&&t[e].shaperInfo.position===nl.Ra_To_Become_Reph;e++)t[e].features.rphf=!0;let y=!a.isOldSpec&&"Pre_And_Post"===n.blwfMode;for(let e=s;e<d;e++)t[e].features.half=!0,y&&(t[e].features.blwf=!0);for(let e=d+1;e<i;e++)t[e].features.abvf=!0,t[e].features.pstf=!0,t[e].features.blwf=!0;if(a.isOldSpec&&"Devanagari"===a.unicodeScript)for(let e=s;e+1<d;e++)t[e].shaperInfo.category!==tl||t[e+1].shaperInfo.category!==Xr||e+1!==d&&t[e+2].shaperInfo.category!==Zr||(t[e].features.blwf=!0,t[e+1].features.blwf=!0);let m=2;if(r.pref&&d+m<i)for(let e=d+1;e+m-1<i;e++){if(_l([t[e].copy(),t[e+1].copy()],"pref")){for(let a=0;a<m;a++)t[e++].features.pref=!0;if(r.cfar)for(;e<i;e++)t[e].features.cfar=!0;break}}for(let e=s+1;e<i;e++)if(wl(t[e])){let a=t[e].shaperInfo.category===Jr,n=e;do{n--,a&&delete t[n].features.half}while(n>s&&!bl(t[n]))}}}function xl(e,t,a){let n=a.indicConfig,r=e._layoutEngine.engine.GSUBProcessor.features;for(let e=0,l=kl(t,0);e<t.length;e=l,l=kl(t,e)){let s=!!r.pref,i=e;for(;i<l;i++)if(t[i].shaperInfo.position>=nl.Base_C){if(s&&i+1<l)for(let e=i+1;e<l;e++)if(t[e].features.pref){if(!t[e].substituted||!t[e].isLigated||t[e].isMultiplied){for(i=e;i<l&&vl(t[i]);)i++;t[i].shaperInfo.position=nl.BASE_C,s=!1}break}if("Malayalam"===a.unicodeScript)for(let e=i+1;e<l;e++){for(;e<l&&wl(t[e]);)e++;if(e===l||!vl(t[e]))break;for(e++;e<l&&wl(t[e]);)e++;e<l&&bl(t[e])&&t[e].shaperInfo.position===nl.Below_C&&(i=e,t[i].shaperInfo.position=nl.Base_C)}e<i&&t[i].shaperInfo.position>nl.Base_C&&i--;break}if(i===l&&e<i&&t[i-1].shaperInfo.category===Zr&&i--,i<l)for(;e<i&&t[i].shaperInfo.category&(Kr|sl);)i--;if(e+1<l&&e<i){let n=i===l?i-2:i-1;if("Malayalam"!==a.unicodeScript&&"Tamil"!==a.unicodeScript){for(;n>e&&!(t[n].shaperInfo.category&($r|sl));)n--;vl(t[n])&&t[n].shaperInfo.position!==nl.Pre_M?n+1<l&&wl(t[n+1])&&n++:n=e}if(e<n&&t[n].shaperInfo.position!==nl.Pre_M)for(let a=n;a>e;a--)if(t[a-1].shaperInfo.position===nl.Pre_M){let e=a-1;e<i&&i<=n&&i--;let r=t[e];t.splice(e,0,...t.splice(e+1,n-e)),t[n]=r,n--}}if(e+1<l&&t[e].shaperInfo.position===nl.Ra_To_Become_Reph&&t[e].shaperInfo.category===el!==(t[e].isLigated&&!t[e].isMultiplied)){let a,r=n.rephPos,s=!1;if(r!==nl.After_Post){for(a=e+1;a<i&&!vl(t[a]);)a++;if(a<i&&vl(t[a])&&(a+1<i&&wl(t[a+1])&&a++,s=!0),!s&&r===nl.After_Main){for(a=i;a+1<l&&t[a+1].shaperInfo.position<=nl.After_Main;)a++;s=a<l}if(!s&&r===nl.After_Sub){for(a=i;a+1<l&&!(t[a+1].shaperInfo.position&(nl.Post_C|nl.After_Post|nl.SMVD));)a++;s=a<l}}if(!s){for(a=e+1;a<i&&!vl(t[a]);)a++;a<i&&vl(t[a])&&(a+1<i&&wl(t[a+1])&&a++,s=!0)}if(!s){for(a=l-1;a>e&&t[a].shaperInfo.position===nl.SMVD;)a--;if(vl(t[a]))for(let e=i+1;e<a;e++)t[e].shaperInfo.category===$r&&a--}let o=t[e];t.splice(e,0,...t.splice(e+1,a-e)),t[a]=o,e<i&&i<=a&&i--}if(s&&i+1<l)for(let n=i+1;n<l;n++)if(t[n].features.pref){if(t[n].isLigated&&!t[n].isMultiplied){let r=i;if("Malayalam"!==a.unicodeScript&&"Tamil"!==a.unicodeScript){for(;r>e&&!(t[r-1].shaperInfo.category&($r|sl));)r--;if(r>e&&t[r-1].shaperInfo.category===$r){let e=n;for(let a=i+1;a<e;a++)if(t[a].shaperInfo.category===$r){r--;break}}}r>e&&vl(t[r-1])&&r<l&&wl(t[r])&&r++;let s=n,o=t[s];t.splice(r+1,0,...t.splice(r,s-r)),t[r]=o,r<=i&&i<s&&i++}break}t[e].shaperInfo.position!==nl.Pre_M||e&&/Cf|Mn/.test(y.default.getCategory(t[e-1].codePoints[0]))||(t[e].features.init=!0)}}function kl(e,t){if(t>=e.length)return t;let a=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===a;);return t}var Al=[0,2,0,0,0,0,0,0,0,0,186,16,1,5,14,250,241,237,156,123,140,95,69,21,199,103,119,187,251,123,109,119,187,22,90,160,188,31,166,165,8,69,154,24,164,49,16,32,209,148,38,106,67,20,249,195,214,7,54,98,176,65,141,141,74,104,136,134,2,18,9,134,80,99,132,26,163,149,52,245,25,80,99,64,249,3,72,5,77,138,68,65,5,21,35,1,81,132,72,72,197,196,248,29,239,156,252,206,206,158,121,222,215,22,126,39,249,100,238,99,158,231,204,204,157,153,59,247,174,154,80,234,20,176,22,156,3,46,4,27,193,102,112,185,185,118,94,5,238,22,176,13,108,7,59,60,254,118,130,93,194,245,27,193,173,96,55,216,3,190,13,190,7,238,1,247,25,30,100,254,127,1,30,5,191,3,79,11,241,61,5,158,1,171,192,11,38,111,171,204,253,85,140,87,192,33,160,150,40,213,5,203,192,10,112,60,120,35,56,19,172,7,27,192,69,224,18,240,110,240,62,240,1,240,81,176,29,236,0,59,193,46,112,11,216,13,238,4,123,193,126,112,55,184,23,60,0,30,6,191,6,191,7,127,1,207,130,23,193,33,160,38,149,234,128,89,176,18,156,0,78,5,103,76,22,121,95,15,247,60,112,161,57,223,8,119,51,184,28,108,1,219,192,199,193,167,205,253,107,225,126,1,220,12,110,3,95,155,28,150,253,155,147,243,117,81,150,253,136,239,251,21,199,201,249,177,21,247,125,56,127,16,252,10,252,6,60,53,89,148,247,25,240,2,120,5,252,55,144,159,169,41,165,102,192,10,176,106,170,8,127,10,220,53,224,108,112,174,185,118,1,220,119,128,119,129,203,166,10,221,106,182,226,248,67,224,99,224,147,224,115,224,243,38,204,77,198,253,50,220,175,130,27,88,186,223,192,249,190,41,127,222,126,16,184,31,195,79,16,199,253,224,0,56,8,158,48,229,210,247,158,132,251,87,240,15,240,178,185,246,42,220,241,14,234,32,88,218,9,199,127,36,252,28,215,41,226,60,17,238,106,112,22,88,15,214,153,180,54,224,248,12,19,215,219,140,95,205,197,236,152,179,9,215,47,5,151,89,247,183,58,252,19,31,49,105,159,205,244,230,243,207,253,229,162,227,248,48,210,188,10,92,13,118,116,226,227,223,105,233,247,76,193,207,46,248,185,5,236,238,20,245,109,15,139,127,169,71,31,123,113,111,63,184,27,220,235,176,163,212,254,31,232,12,203,245,8,142,31,3,127,0,79,155,180,244,241,223,204,241,99,1,123,84,161,223,17,35,94,143,140,218,207,136,17,35,70,140,24,49,98,196,136,215,2,235,58,195,53,129,27,34,252,255,147,205,93,255,101,205,99,191,24,17,254,63,8,51,209,45,214,97,6,112,151,131,21,224,56,112,154,185,254,38,184,235,187,133,255,13,112,207,7,111,7,239,52,247,223,11,119,11,216,102,206,183,195,221,1,118,118,221,233,106,127,187,60,247,71,140,24,49,98,68,189,156,211,50,109,151,127,196,136,17,245,80,119,251,254,18,198,143,183,119,139,247,66,119,192,253,150,48,158,252,78,183,120,183,175,143,239,177,238,223,183,8,198,159,127,159,46,152,94,170,212,37,224,145,233,48,59,225,239,231,150,95,53,51,60,94,141,227,45,96,15,120,28,28,50,247,86,207,98,140,62,59,244,183,3,199,123,160,131,63,129,19,123,8,3,246,244,138,177,252,29,83,133,251,176,57,231,12,250,240,55,54,100,99,127,161,159,155,112,109,31,187,254,60,142,215,14,148,186,18,236,3,207,131,181,211,237,63,127,218,38,212,94,30,132,238,14,152,122,122,16,238,227,198,94,122,158,248,108,55,253,121,186,223,184,103,70,250,231,188,152,145,158,212,39,72,225,95,70,220,175,118,231,251,163,252,238,247,164,55,142,250,217,3,115,189,97,217,180,191,163,112,126,108,175,56,63,185,55,244,127,122,111,126,62,98,251,171,88,91,186,202,247,230,158,124,239,173,184,190,1,92,4,54,130,205,224,61,224,73,115,255,253,56,190,2,92,5,174,54,247,63,3,174,3,55,130,91,193,237,44,238,59,113,188,23,236,3,63,4,63,5,247,131,3,224,160,144,7,61,15,127,2,215,255,108,238,233,253,52,207,225,248,37,193,47,249,255,55,238,141,245,135,231,61,28,207,129,163,251,197,249,73,253,98,111,137,190,191,6,199,103,247,221,58,211,254,207,237,203,58,115,233,253,2,248,191,24,108,2,151,130,203,192,86,147,246,182,126,209,102,98,237,182,29,254,63,5,174,1,215,129,235,193,205,44,63,183,225,248,43,224,235,224,46,240,93,86,182,16,63,242,148,251,81,228,241,103,253,118,158,57,46,93,63,20,200,207,98,234,43,171,212,65,27,233,255,178,63,63,222,131,70,247,191,133,251,199,126,185,124,198,150,227,105,79,187,179,211,191,171,226,242,47,198,250,85,133,253,203,212,147,182,203,151,90,254,231,250,205,230,219,183,143,106,175,89,55,127,169,95,184,135,224,42,140,49,167,6,197,249,244,96,232,247,136,129,92,54,186,191,166,35,151,171,238,250,31,34,180,151,44,102,175,217,202,65,225,30,15,247,180,193,225,81,239,108,253,135,238,159,46,216,55,20,239,67,194,216,118,177,17,219,239,220,208,96,94,206,26,204,191,118,77,70,254,207,153,136,171,135,186,14,191,133,181,99,189,191,115,3,206,207,31,20,237,127,29,219,111,121,177,241,55,48,249,219,4,247,210,65,177,239,246,114,184,31,20,234,136,175,237,172,142,216,203,153,139,206,251,149,131,249,215,248,222,213,231,80,55,175,232,12,203,254,9,227,126,22,238,93,157,97,254,79,101,97,174,53,126,174,135,123,179,16,247,173,184,182,59,177,157,180,205,49,19,99,106,49,200,24,99,220,58,231,126,200,157,96,247,151,68,98,199,167,28,215,234,150,197,161,241,145,144,80,93,26,23,32,91,141,11,225,198,45,119,210,64,18,83,183,234,174,11,19,53,199,95,181,76,181,157,129,18,18,99,203,215,83,219,151,218,204,235,73,198,28,44,6,177,243,193,251,188,195,93,164,49,131,125,124,184,72,110,157,145,198,82,57,246,181,245,119,56,233,176,169,118,23,27,119,138,238,171,110,135,220,246,174,126,41,196,107,93,92,243,14,126,191,10,187,228,234,159,242,212,97,96,26,27,61,255,169,154,30,48,75,130,255,63,215,199,211,198,93,106,209,179,232,91,204,176,176,84,198,89,166,179,30,139,43,54,127,228,63,103,158,168,74,232,101,130,217,166,27,25,151,178,252,217,231,169,132,194,42,53,63,29,201,63,73,140,125,73,166,13,246,185,182,111,76,31,210,23,174,185,202,100,167,157,170,163,80,123,166,251,84,39,248,220,142,183,63,95,218,190,178,228,228,57,213,190,161,99,45,3,227,74,246,181,133,218,175,125,62,99,249,155,85,126,137,169,143,161,48,46,180,93,150,169,162,29,210,252,119,78,165,61,195,98,237,235,179,73,74,158,171,178,111,110,251,37,155,242,62,90,169,249,253,115,85,82,182,253,210,88,54,148,6,127,78,46,99,40,117,248,244,207,169,246,165,103,107,78,255,28,18,187,237,219,58,176,243,153,107,223,113,53,191,124,185,162,109,28,122,150,75,229,112,233,92,242,171,4,255,46,127,174,116,164,235,177,117,136,11,181,85,62,190,226,50,173,230,219,159,159,199,182,111,233,249,236,146,156,114,72,107,176,161,181,9,222,150,187,230,60,181,253,165,228,55,167,61,167,234,65,159,251,198,203,74,45,236,171,249,121,200,158,52,158,150,244,96,75,217,246,236,147,208,51,153,250,2,110,227,152,177,188,84,174,166,236,235,242,75,98,247,215,117,216,87,106,255,182,216,121,45,99,223,55,24,114,132,143,181,82,158,199,85,183,191,28,200,30,100,79,27,174,211,80,255,187,92,201,125,28,159,255,199,216,180,206,246,74,98,175,149,72,235,38,41,246,204,201,91,213,182,140,141,83,169,249,121,137,205,175,212,102,121,93,161,186,68,54,91,202,252,76,59,240,213,135,84,157,82,62,114,214,250,218,104,123,62,219,244,216,53,123,237,73,26,23,147,140,43,127,220,58,124,71,45,156,91,116,204,189,178,251,17,108,125,42,203,205,173,179,57,58,140,137,155,252,196,234,91,159,207,177,176,190,114,145,216,250,86,204,77,41,191,203,191,22,251,157,127,46,227,204,181,199,172,174,49,109,213,246,211,113,78,90,46,205,123,37,137,181,113,157,216,194,215,140,93,107,200,54,52,134,224,231,29,53,92,3,246,149,247,136,4,84,162,255,58,208,18,154,43,77,122,238,241,240,174,122,44,181,9,73,234,174,27,41,72,207,82,205,180,146,235,139,94,167,212,117,102,198,92,59,18,172,80,69,31,53,151,152,182,189,47,141,142,67,121,117,189,215,152,83,243,243,209,87,195,49,149,29,71,87,128,199,101,151,61,71,183,115,106,56,22,161,120,164,116,187,70,175,75,132,124,248,160,176,100,191,54,246,35,72,117,188,237,119,163,161,118,94,133,158,248,94,183,42,165,14,29,229,62,95,236,107,188,127,168,59,125,9,158,126,138,142,170,78,63,85,170,208,191,106,56,253,80,222,180,240,231,134,52,118,117,205,193,8,26,127,244,213,112,236,161,159,193,43,85,49,254,154,100,208,26,142,62,182,219,136,253,28,38,91,165,150,191,46,241,245,129,77,244,139,250,185,90,117,29,72,209,41,175,27,246,120,131,176,199,106,92,142,50,204,178,99,155,163,77,60,147,66,120,187,175,79,221,223,80,117,187,41,91,247,114,211,205,13,111,195,215,169,202,230,143,75,236,115,187,110,234,172,3,212,14,104,45,138,247,83,117,214,75,26,163,235,246,181,210,112,140,146,231,73,51,44,111,174,246,202,231,152,212,174,165,62,94,90,255,33,168,189,242,54,59,153,80,38,151,148,13,31,26,183,214,61,166,229,58,210,118,106,122,207,154,126,246,74,115,66,123,93,65,178,53,61,167,235,232,143,66,235,72,49,172,2,199,26,215,69,234,220,161,45,59,113,120,27,150,250,24,106,203,51,204,95,221,245,198,94,171,39,151,250,159,152,119,110,90,108,91,187,202,110,247,65,124,189,96,165,135,227,12,186,239,161,189,93,174,180,83,250,103,46,49,253,78,172,148,157,91,243,254,69,251,159,117,64,126,164,235,93,79,56,105,47,155,116,141,242,171,227,163,247,161,180,31,65,211,198,183,88,210,248,49,36,199,131,19,216,249,132,131,88,251,216,235,97,169,246,77,89,127,137,185,158,26,183,253,172,76,9,167,229,196,136,50,166,72,142,77,41,156,61,62,105,66,58,97,47,94,145,214,172,165,107,41,241,197,132,11,173,157,75,174,148,78,74,190,202,150,163,202,245,210,148,252,248,198,20,33,155,249,236,235,10,87,5,82,57,235,72,199,55,214,138,145,212,248,234,202,111,89,63,117,234,179,141,116,115,108,25,35,109,151,161,233,242,134,164,77,91,164,164,95,103,221,77,201,199,68,205,121,246,233,221,30,35,150,213,95,21,250,111,66,66,105,53,161,255,166,236,156,163,239,170,109,147,243,238,193,53,47,112,197,25,90,47,115,133,207,45,67,206,220,66,242,175,50,226,74,153,143,133,164,201,126,167,137,250,222,180,62,36,225,246,201,205,91,110,185,234,234,67,67,229,173,202,14,174,120,154,174,7,177,210,84,251,41,91,214,182,242,80,214,38,139,161,111,168,178,191,181,227,77,245,75,235,184,246,190,48,233,189,71,204,183,85,101,224,107,220,180,198,158,171,251,216,112,85,151,33,245,121,42,237,215,107,18,189,231,81,250,118,197,133,174,23,49,107,122,84,254,156,247,11,92,92,239,91,83,113,165,227,26,59,73,109,130,35,237,65,230,239,12,82,203,31,131,253,222,210,126,151,201,223,3,233,125,36,41,223,107,82,217,219,124,87,107,67,239,224,92,123,122,233,61,173,222,11,160,235,241,73,106,248,175,137,220,113,111,110,125,245,217,155,246,69,212,173,175,216,52,164,253,15,252,29,56,93,179,247,67,199,8,79,103,101,68,94,168,174,74,225,99,244,111,219,177,106,29,242,245,12,254,60,209,247,232,253,94,149,237,164,199,92,178,131,109,55,87,56,234,231,200,109,82,114,244,175,235,26,175,123,125,37,63,55,105,143,126,140,240,248,165,111,226,249,190,189,49,19,119,93,223,73,214,33,246,120,230,228,146,196,174,49,248,36,102,77,66,186,23,242,235,74,199,231,143,230,142,117,140,175,165,124,140,43,191,206,164,117,163,148,52,236,107,74,201,186,110,74,236,250,103,143,177,125,115,237,42,210,171,107,238,148,35,139,101,253,160,204,28,86,178,95,153,185,112,83,101,118,73,93,235,18,77,216,184,238,58,93,119,252,49,250,208,207,78,251,27,108,223,183,32,228,143,246,106,133,198,107,246,121,93,144,232,57,202,64,45,220,107,167,37,180,119,52,102,44,81,245,154,125,221,237,179,206,119,11,135,75,30,154,78,51,165,156,124,206,66,251,20,155,104,47,246,28,198,181,31,219,245,189,119,104,94,111,203,41,37,105,98,30,112,170,106,255,95,174,210,127,1,237,61,207,90,247,186,127,147,198,237,210,26,91,91,72,245,74,250,246,155,238,209,119,223,42,33,13,105,189,33,118,239,119,74,58,49,216,54,105,58,125,223,63,37,125,237,88,135,93,110,80,106,161,78,105,239,58,217,42,119,125,78,154,99,86,173,3,74,43,86,170,76,51,215,102,246,123,22,251,191,8,218,70,244,191,76,87,127,75,239,0,98,242,40,249,43,171,139,148,240,190,246,81,117,93,72,65,235,208,215,255,18,3,229,30,31,151,173,163,185,255,95,83,158,243,170,109,105,167,229,242,67,227,112,94,207,237,111,119,120,63,93,230,127,168,74,249,251,124,87,187,35,241,189,171,82,1,127,41,82,71,189,77,233,247,237,247,134,84,215,200,78,92,164,126,38,165,14,241,254,62,229,219,203,178,101,165,49,6,255,86,139,254,9,64,229,165,49,148,157,215,144,148,109,223,117,149,157,68,250,15,130,93,230,152,57,108,46,118,158,203,254,23,222,213,110,83,234,58,47,127,207,202,111,170,148,181,127,142,78,171,148,20,93,243,127,120,133,158,137,118,123,170,34,253,178,144,232,119,165,250,189,233,105,42,252,79,42,187,108,101,243,207,237,56,158,17,222,215,230,165,177,162,221,206,83,243,159,91,206,170,251,49,187,13,211,120,136,230,43,84,54,62,94,104,66,150,168,133,255,40,144,144,254,33,86,53,147,38,29,123,60,162,245,164,231,114,115,22,174,111,62,233,122,204,56,203,87,126,169,95,182,243,188,220,193,209,137,80,57,151,169,133,107,81,75,148,251,121,228,170,243,77,244,71,190,255,30,240,181,119,187,77,243,118,109,247,41,109,172,55,112,73,29,23,198,198,93,230,95,140,190,251,212,215,243,61,141,41,227,248,216,122,20,242,91,6,87,127,195,165,199,92,126,76,101,229,235,57,244,191,235,152,61,69,57,117,36,38,188,114,28,215,217,22,125,255,121,87,74,30,63,86,165,159,16,19,106,225,191,54,98,218,122,155,239,80,171,24,171,214,53,254,173,243,221,79,91,239,177,104,76,233,179,219,152,227,122,19,82,231,60,38,86,236,189,42,169,123,48,154,218,159,208,196,30,149,152,248,155,42,243,98,220,239,33,137,148,70,91,237,169,170,114,199,232,51,69,247,116,92,247,218,133,84,142,170,227,40,27,231,98,108,23,101,227,168,178,125,214,213,214,171,212,91,217,188,248,164,238,116,203,228,205,151,191,166,164,201,250,149,147,126,85,249,207,13,95,85,250,49,233,148,213,115,200,111,29,249,78,73,191,142,184,109,73,177,157,36,185,245,192,37,255,3];const{categories:Pl,decompositions:Il}=Yr,Ol=new m.default(new Uint8Array(Al)),Fl=new b.default(Yr);class Dl extends br{static planFeatures(e){e.addStage(Ml),e.addStage(["locl","ccmp","nukt","akhn"]),e.addStage(Gl),e.addStage(["rphf"],!1),e.addStage(Bl),e.addStage(Gl),e.addStage(["pref"]),e.addStage(El),e.addStage(["rkrf","abvf","blwf","half","pstf","vatu","cjct"]),e.addStage(Rl),e.addStage(["abvs","blws","pres","psts","dist","abvm","blwm"])}static assignFeatures(e,t){for(let a=t.length-1;a>=0;a--){let n=t[a].codePoints[0];if(Il[n]){let r=Il[n].map((n=>{let r=e.font.glyphForCodePoint(n);return new Tr(e.font,r.id,[n],t[a].features)}));t.splice(a,1,...r)}}}}function Tl(e){return Ol.get(e.codePoints[0])}Dl.zeroMarkWidths="BEFORE_GPOS";class Ll{constructor(e,t,a){this.category=e,this.syllableType=t,this.syllable=a}}function Ml(e,t){let a=0;for(let[e,n,r]of Fl.match(t.map(Tl))){++a;for(let l=e;l<=n;l++)t[l].shaperInfo=new Ll(Pl[Tl(t[l])],r[0],a);let l="R"===t[e].shaperInfo.category?1:Math.min(3,n-e);for(let a=e;a<e+l;a++)t[a].features.rphf=!0}}function Gl(e,t){for(let e of t)e.substituted=!1}function Bl(e,t){for(let e of t)e.substituted&&e.features.rphf&&(e.shaperInfo.category="R")}function El(e,t){for(let e of t)e.substituted&&(e.shaperInfo.category="VPre")}function Rl(e,t){let a=e.glyphForCodePoint(9676).id;for(let n=0,r=Vl(t,0);n<t.length;n=r,r=Vl(t,n)){let l,s,i=t[n].shaperInfo,o=i.syllableType;if("virama_terminated_cluster"===o||"standard_cluster"===o||"broken_cluster"===o){if("broken_cluster"===o&&a){let s=new Tr(e,a,[9676]);for(s.shaperInfo=i,l=n;l<r&&"R"===t[l].shaperInfo.category;l++);t.splice(++l,0,s),r++}if("R"===i.category&&r-n>1)for(l=n+1;l<r;l++)if(i=t[l].shaperInfo,Ul(i)||zl(t[l])){zl(t[l])&&l--,t.splice(n,0,...t.splice(n+1,l-n),t[l]);break}for(l=n,s=r;l<r;l++)i=t[l].shaperInfo,Ul(i)||zl(t[l])?s=zl(t[l])?l+1:l:("VPre"===i.category||"VMPre"===i.category)&&s<l&&t.splice(s,1,t[l],...t.splice(s,l-s))}}}function Vl(e,t){if(t>=e.length)return t;let a=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===a;);return t}function zl(e){return"H"===e.shaperInfo.category&&!e.isLigated}function Ul(e){return"B"===e.category||"GB"===e.category}const Nl={arab:Pr,mong:Pr,syrc:Pr,"nko ":Pr,phag:Pr,mand:Pr,mani:Pr,phlp:Pr,hang:Lr,bng2:hl,beng:hl,dev2:hl,deva:hl,gjr2:hl,gujr:hl,guru:hl,gur2:hl,knda:hl,knd2:hl,mlm2:hl,mlym:hl,ory2:hl,orya:hl,taml:hl,tml2:hl,telu:hl,tel2:hl,khmr:hl,bali:Dl,batk:Dl,brah:Dl,bugi:Dl,buhd:Dl,cakm:Dl,cham:Dl,dupl:Dl,egyp:Dl,gran:Dl,hano:Dl,java:Dl,kthi:Dl,kali:Dl,khar:Dl,khoj:Dl,sind:Dl,lepc:Dl,limb:Dl,mahj:Dl,mtei:Dl,modi:Dl,hmng:Dl,rjng:Dl,saur:Dl,shrd:Dl,sidd:Dl,sinh:Dl,sund:Dl,sylo:Dl,tglg:Dl,tagb:Dl,tale:Dl,lana:Dl,tavt:Dl,takr:Dl,tibt:Dl,tfng:Dl,tirh:Dl,latn:br,DFLT:br};class ql extends Dr{applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;let a=this.glyphIterator.cur;switch(t.version){case 1:a.id=a.id+t.deltaGlyphID&65535;break;case 2:a.id=t.substitute.get(e)}return!0}case 2:{let e=this.coverageIndex(t.coverage);if(-1!==e){let a=t.sequences.get(e);if(0===a.length)return this.glyphs.splice(this.glyphIterator.index,1),!0;this.glyphIterator.cur.id=a[0],this.glyphIterator.cur.ligatureComponent=0;let n=this.glyphIterator.cur.features,r=this.glyphIterator.cur,l=a.slice(1).map(((e,t)=>{let a=new Tr(this.font,e,void 0,n);return a.shaperInfo=r.shaperInfo,a.isLigated=r.isLigated,a.ligatureComponent=t+1,a.substituted=!0,a.isMultiplied=!0,a}));return this.glyphs.splice(this.glyphIterator.index+1,0,...l),!0}return!1}case 3:{let e=this.coverageIndex(t.coverage);if(-1!==e){let a=0;return this.glyphIterator.cur.id=t.alternateSet.get(e)[a],!0}return!1}case 4:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;for(let n of t.ligatureSets.get(e)){let e=this.sequenceMatchIndices(1,n.components);if(!e)continue;let t=this.glyphIterator.cur,r=t.codePoints.slice();for(let t of e)r.push(...this.glyphs[t].codePoints);let l=new Tr(this.font,n.glyph,r,t.features);l.shaperInfo=t.shaperInfo,l.isLigated=!0,l.substituted=!0;let s=t.isMark;for(let t=0;t<e.length&&s;t++)s=this.glyphs[e[t]].isMark;l.ligatureID=s?null:this.ligatureID++;let i=t.ligatureID,o=t.codePoints.length,u=o,d=this.glyphIterator.index+1;for(let t of e){if(s)d=t;else for(;d<t;){var a=u-o+Math.min(this.glyphs[d].ligatureComponent||1,o);this.glyphs[d].ligatureID=l.ligatureID,this.glyphs[d].ligatureComponent=a,d++}i=this.glyphs[d].ligatureID,o=this.glyphs[d].codePoints.length,u+=o,d++}if(i&&!s)for(let e=d;e<this.glyphs.length&&this.glyphs[e].ligatureID===i;e++){a=u-o+Math.min(this.glyphs[e].ligatureComponent||1,o);this.glyphs[e].ligatureComponent=a}for(let t=e.length-1;t>=0;t--)this.glyphs.splice(e[t],1);return this.glyphs[this.glyphIterator.index]=l,!0}return!1}case 5:return this.applyContext(t);case 6:return this.applyChainingContext(t);case 7:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`GSUB lookupType ${e} is not supported`)}}}class jl extends Dr{applyPositionValue(e,t){let a=this.positions[this.glyphIterator.peekIndex(e)];null!=t.xAdvance&&(a.xAdvance+=t.xAdvance),null!=t.yAdvance&&(a.yAdvance+=t.yAdvance),null!=t.xPlacement&&(a.xOffset+=t.xPlacement),null!=t.yPlacement&&(a.yOffset+=t.yPlacement);let n=this.font._variationProcessor,r=this.font.GDEF&&this.font.GDEF.itemVariationStore;n&&r&&(t.xPlaDevice&&(a.xOffset+=n.getDelta(r,t.xPlaDevice.a,t.xPlaDevice.b)),t.yPlaDevice&&(a.yOffset+=n.getDelta(r,t.yPlaDevice.a,t.yPlaDevice.b)),t.xAdvDevice&&(a.xAdvance+=n.getDelta(r,t.xAdvDevice.a,t.xAdvDevice.b)),t.yAdvDevice&&(a.yAdvance+=n.getDelta(r,t.yAdvDevice.a,t.yAdvDevice.b)))}applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;switch(t.version){case 1:this.applyPositionValue(0,t.value);break;case 2:this.applyPositionValue(0,t.values.get(e))}return!0}case 2:{let e=this.glyphIterator.peek();if(!e)return!1;let n=this.coverageIndex(t.coverage);if(-1===n)return!1;switch(t.version){case 1:let r=t.pairSets.get(n);for(let t of r)if(t.secondGlyph===e.id)return this.applyPositionValue(0,t.value1),this.applyPositionValue(1,t.value2),!0;return!1;case 2:let l=this.getClassID(this.glyphIterator.cur.id,t.classDef1),s=this.getClassID(e.id,t.classDef2);if(-1===l||-1===s)return!1;var a=t.classRecords.get(l).get(s);return this.applyPositionValue(0,a.value1),this.applyPositionValue(1,a.value2),!0}}case 3:{let e=this.glyphIterator.peekIndex(),a=this.glyphs[e];if(!a)return!1;let n=t.entryExitRecords[this.coverageIndex(t.coverage)];if(!n||!n.exitAnchor)return!1;let r=t.entryExitRecords[this.coverageIndex(t.coverage,a.id)];if(!r||!r.entryAnchor)return!1;let l=this.getAnchor(r.entryAnchor),s=this.getAnchor(n.exitAnchor),i=this.positions[this.glyphIterator.index],o=this.positions[e];switch(this.direction){case"ltr":i.xAdvance=s.x+i.xOffset;let e=l.x+o.xOffset;o.xAdvance-=e,o.xOffset-=e;break;case"rtl":e=s.x+i.xOffset,i.xAdvance-=e,i.xOffset-=e,o.xAdvance=l.x+o.xOffset}return this.glyphIterator.flags.rightToLeft?(this.glyphIterator.cur.cursiveAttachment=e,i.yOffset=l.y-s.y):(a.cursiveAttachment=this.glyphIterator.index,i.yOffset=s.y-l.y),!0}case 4:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;let a=this.glyphIterator.index;for(;--a>=0&&(this.glyphs[a].isMark||this.glyphs[a].ligatureComponent>0););if(a<0)return!1;let n=this.coverageIndex(t.baseCoverage,this.glyphs[a].id);if(-1===n)return!1;let r=t.markArray[e],l=t.baseArray[n][r.class];return this.applyAnchor(r,l,a),!0}case 5:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;let a=this.glyphIterator.index;for(;--a>=0&&this.glyphs[a].isMark;);if(a<0)return!1;let n=this.coverageIndex(t.ligatureCoverage,this.glyphs[a].id);if(-1===n)return!1;let r=t.ligatureArray[n],l=this.glyphIterator.cur,s=this.glyphs[a],i=s.ligatureID&&s.ligatureID===l.ligatureID&&l.ligatureComponent>0?Math.min(l.ligatureComponent,s.codePoints.length)-1:s.codePoints.length-1,o=t.markArray[e],u=r[i][o.class];return this.applyAnchor(o,u,a),!0}case 6:{let e=this.coverageIndex(t.mark1Coverage);if(-1===e)return!1;let a=this.glyphIterator.peekIndex(-1),n=this.glyphs[a];if(!n||!n.isMark)return!1;let r=this.glyphIterator.cur,l=!1;if(r.ligatureID===n.ligatureID?r.ligatureID?r.ligatureComponent===n.ligatureComponent&&(l=!0):l=!0:(r.ligatureID&&!r.ligatureComponent||n.ligatureID&&!n.ligatureComponent)&&(l=!0),!l)return!1;let s=this.coverageIndex(t.mark2Coverage,n.id);if(-1===s)return!1;let i=t.mark1Array[e],o=t.mark2Array[s][i.class];return this.applyAnchor(i,o,a),!0}case 7:return this.applyContext(t);case 8:return this.applyChainingContext(t);case 9:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`Unsupported GPOS table: ${e}`)}}applyAnchor(e,t,a){let n=this.getAnchor(t),r=this.getAnchor(e.markAnchor);this.positions[a];let l=this.positions[this.glyphIterator.index];l.xOffset=n.x-r.x,l.yOffset=n.y-r.y,this.glyphIterator.cur.markAttachment=a}getAnchor(e){let t=e.xCoordinate,a=e.yCoordinate,n=this.font._variationProcessor,r=this.font.GDEF&&this.font.GDEF.itemVariationStore;return n&&r&&(e.xDeviceTable&&(t+=n.getDelta(r,e.xDeviceTable.a,e.xDeviceTable.b)),e.yDeviceTable&&(a+=n.getDelta(r,e.yDeviceTable.a,e.yDeviceTable.b))),{x:t,y:a}}applyFeatures(e,t,a){super.applyFeatures(e,t,a);for(var n=0;n<this.glyphs.length;n++)this.fixCursiveAttachment(n);this.fixMarkAttachment()}fixCursiveAttachment(e){let t=this.glyphs[e];if(null!=t.cursiveAttachment){let a=t.cursiveAttachment;t.cursiveAttachment=null,this.fixCursiveAttachment(a),this.positions[e].yOffset+=this.positions[a].yOffset}}fixMarkAttachment(){for(let e=0;e<this.glyphs.length;e++){let t=this.glyphs[e];if(null!=t.markAttachment){let a=t.markAttachment;if(this.positions[e].xOffset+=this.positions[a].xOffset,this.positions[e].yOffset+=this.positions[a].yOffset,"ltr"===this.direction)for(let t=a;t<e;t++)this.positions[e].xOffset-=this.positions[t].xAdvance,this.positions[e].yOffset-=this.positions[t].yAdvance;else for(let t=a+1;t<e+1;t++)this.positions[e].xOffset+=this.positions[t].xAdvance,this.positions[e].yOffset+=this.positions[t].yAdvance}}}}class Hl{constructor(e){this.font=e,this.glyphInfos=null,this.plan=null,this.GSUBProcessor=null,this.GPOSProcessor=null,this.fallbackPosition=!0,e.GSUB&&(this.GSUBProcessor=new ql(e,e.GSUB)),e.GPOS&&(this.GPOSProcessor=new jl(e,e.GPOS))}setup(e){this.glyphInfos=e.glyphs.map((e=>new Tr(this.font,e.id,[...e.codePoints])));let t=null;this.GPOSProcessor&&(t=this.GPOSProcessor.selectScript(e.script,e.language,e.direction)),this.GSUBProcessor&&(t=this.GSUBProcessor.selectScript(e.script,e.language,e.direction)),this.shaper=function(e){Array.isArray(e)||(e=[e]);for(let t of e){let e=Nl[t];if(e)return e}return br}(t),this.plan=new cr(this.font,t,e.direction),this.shaper.plan(this.plan,this.glyphInfos,e.features);for(let t in this.plan.allFeatures)e.features[t]=!0}substitute(e){this.GSUBProcessor&&(this.plan.process(this.GSUBProcessor,this.glyphInfos),e.glyphs=this.glyphInfos.map((e=>this.font.getGlyph(e.id,e.codePoints))))}position(e){return"BEFORE_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),this.GPOSProcessor&&this.plan.process(this.GPOSProcessor,this.glyphInfos,e.positions),"AFTER_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),"rtl"===e.direction&&(e.glyphs.reverse(),e.positions.reverse()),this.GPOSProcessor&&this.GPOSProcessor.features}zeroMarkAdvances(e){for(let t=0;t<this.glyphInfos.length;t++)this.glyphInfos[t].isMark&&(e[t].xAdvance=0,e[t].yAdvance=0)}cleanup(){this.glyphInfos=null,this.plan=null,this.shaper=null}getAvailableFeatures(e,t){let a=[];return this.GSUBProcessor&&(this.GSUBProcessor.selectScript(e,t),a.push(...Object.keys(this.GSUBProcessor.features))),this.GPOSProcessor&&(this.GPOSProcessor.selectScript(e,t),a.push(...Object.keys(this.GPOSProcessor.features))),a}}class Yl{constructor(e){this.font=e,this.unicodeLayoutEngine=null,this.kernProcessor=null,this.font.morx?this.engine=new fr(this.font):(this.font.GSUB||this.font.GPOS)&&(this.engine=new Hl(this.font))}layout(e,t,a,n,r){if("string"==typeof t&&(r=n,n=a,a=t,t=[]),"string"==typeof e){null==a&&(a=function(e){let t=e.length,a=0;for(;a<t;){let n=e.charCodeAt(a++);if(55296<=n&&n<=56319&&a<t){let t=e.charCodeAt(a);56320<=t&&t<=57343&&(a++,n=((1023&n)<<10)+(1023&t)+65536)}let r=y.default.getScript(n);if("Common"!==r&&"Inherited"!==r&&"Unknown"!==r)return Kn[r]}return Kn.Unknown}(e));var l=this.font.glyphsForString(e)}else{if(null==a){let t=[];for(let a of e)t.push(...a.codePoints);a=function(e){for(let t=0;t<e.length;t++){let a=e[t],n=y.default.getScript(a);if("Common"!==n&&"Inherited"!==n&&"Unknown"!==n)return Kn[n]}return Kn.Unknown}(t)}l=e}let s=new $n(l,t,a,n,r);return 0===l.length?(s.positions=[],s):(this.engine&&this.engine.setup&&this.engine.setup(s),this.substitute(s),this.position(s),this.hideDefaultIgnorables(s.glyphs,s.positions),this.engine&&this.engine.cleanup&&this.engine.cleanup(),s)}substitute(e){this.engine&&this.engine.substitute&&this.engine.substitute(e)}position(e){e.positions=e.glyphs.map((e=>new Qn(e.advanceWidth)));let t=null;this.engine&&this.engine.position&&(t=this.engine.position(e)),t||this.engine&&!this.engine.fallbackPosition||(this.unicodeLayoutEngine||(this.unicodeLayoutEngine=new Yn(this.font)),this.unicodeLayoutEngine.positionGlyphs(e.glyphs,e.positions)),t&&t.kern||!1===e.features.kern||!this.font.kern||(this.kernProcessor||(this.kernProcessor=new Hn(this.font)),this.kernProcessor.process(e.glyphs,e.positions),e.features.kern=!0)}hideDefaultIgnorables(e,t){let a=this.font.glyphForCodePoint(32);for(let n=0;n<e.length;n++)this.isDefaultIgnorable(e[n].codePoints[0])&&(e[n]=a,t[n].xAdvance=0,t[n].yAdvance=0)}isDefaultIgnorable(e){let t=e>>16;if(0===t)switch(e>>8){case 0:return 173===e;case 3:return 847===e;case 6:return 1564===e;case 23:return 6068<=e&&e<=6069;case 24:return 6155<=e&&e<=6158;case 32:return 8203<=e&&e<=8207||8234<=e&&e<=8238||8288<=e&&e<=8303;case 254:return 65024<=e&&e<=65039||65279===e;case 255:return 65520<=e&&e<=65528;default:return!1}else switch(t){case 1:return 113824<=e&&e<=113827||119155<=e&&e<=119162;case 14:return 917504<=e&&e<=921599;default:return!1}}getAvailableFeatures(e,t){let a=[];return this.engine&&a.push(...this.engine.getAvailableFeatures(e,t)),this.font.kern&&-1===a.indexOf("kern")&&a.push("kern"),a}stringsForGlyph(e){let t=new Set,a=this.font._cmapProcessor.codePointsForGlyph(e);for(let e of a)t.add(String.fromCodePoint(e));if(this.engine&&this.engine.stringsForGlyph)for(let a of this.engine.stringsForGlyph(e))t.add(a);return Array.from(t)}}const Wl={moveTo:"M",lineTo:"L",quadraticCurveTo:"Q",bezierCurveTo:"C",closePath:"Z"};class Kl{constructor(){this.commands=[],this._bbox=null,this._cbox=null}toFunction(){return e=>{this.commands.forEach((t=>e[t.command].apply(e,t.args)))}}toSVG(){return this.commands.map((e=>{let t=e.args.map((e=>Math.round(100*e)/100));return`${Wl[e.command]}${t.join(" ")}`})).join("")}get cbox(){if(!this._cbox){let e=new Wn;for(let t of this.commands)for(let a=0;a<t.args.length;a+=2)e.addPoint(t.args[a],t.args[a+1]);this._cbox=Object.freeze(e)}return this._cbox}get bbox(){if(this._bbox)return this._bbox;let e=new Wn,t=0,a=0,n=e=>Math.pow(1-e,3)*c[y]+3*Math.pow(1-e,2)*e*h[y]+3*(1-e)*Math.pow(e,2)*p[y]+Math.pow(e,3)*g[y];for(let m of this.commands)switch(m.command){case"moveTo":case"lineTo":let[b,w]=m.args;e.addPoint(b,w),t=b,a=w;break;case"quadraticCurveTo":case"bezierCurveTo":if("quadraticCurveTo"===m.command)var[r,l,s,i]=m.args,o=t+2/3*(r-t),u=a+2/3*(l-a),d=s+2/3*(r-s),f=i+2/3*(l-i);else var[o,u,d,f,s,i]=m.args;e.addPoint(s,i);for(var c=[t,a],h=[o,u],p=[d,f],g=[s,i],y=0;y<=1;y++){let t=6*c[y]-12*h[y]+6*p[y],a=-3*c[y]+9*h[y]-9*p[y]+3*g[y];if(m=3*h[y]-3*c[y],0===a){if(0===t)continue;let a=-m/t;0<a&&a<1&&(0===y?e.addPoint(n(a),e.maxY):1===y&&e.addPoint(e.maxX,n(a)));continue}let r=Math.pow(t,2)-4*m*a;if(r<0)continue;let l=(-t+Math.sqrt(r))/(2*a);0<l&&l<1&&(0===y?e.addPoint(n(l),e.maxY):1===y&&e.addPoint(e.maxX,n(l)));let s=(-t-Math.sqrt(r))/(2*a);0<s&&s<1&&(0===y?e.addPoint(n(s),e.maxY):1===y&&e.addPoint(e.maxX,n(s)))}t=s,a=i}return this._bbox=Object.freeze(e)}mapPoints(e){let t=new Kl;for(let a of this.commands){let n=[];for(let t=0;t<a.args.length;t+=2){let[r,l]=e(a.args[t],a.args[t+1]);n.push(r,l)}t[a.command](...n)}return t}transform(e,t,a,n,r,l){return this.mapPoints(((s,i)=>[s=e*s+a*i+r,i=t*s+n*i+l]))}translate(e,t){return this.transform(1,0,0,1,e,t)}rotate(e){let t=Math.cos(e),a=Math.sin(e);return this.transform(t,a,-a,t,0,0)}scale(e,t=e){return this.transform(e,0,0,t,0,0)}}for(let e of["moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath"])Kl.prototype[e]=function(...t){return this._bbox=this._cbox=null,this.commands.push({command:e,args:t}),this};var Xl,Jl=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];let Zl=(Xl=class{constructor(e,t,a){this.id=e,this.codePoints=t,this._font=a,this.isMark=this.codePoints.length>0&&this.codePoints.every(y.default.isMark),this.isLigature=this.codePoints.length>1}_getPath(){return new Kl}_getCBox(){return this.path.cbox}_getBBox(){return this.path.bbox}_getTableMetrics(e){if(this.id<e.metrics.length)return e.metrics.get(this.id);let t=e.metrics.get(e.metrics.length-1);return{advance:t?t.advance:0,bearing:e.bearings.get(this.id-e.metrics.length)||0}}_getMetrics(e){if(this._metrics)return this._metrics;let{advance:t,bearing:a}=this._getTableMetrics(this._font.hmtx);if(this._font.vmtx)var{advance:n,bearing:r}=this._getTableMetrics(this._font.vmtx);else{let t;if(null==e&&({cbox:e}=this),(t=this._font["OS/2"])&&t.version>0)n=Math.abs(t.typoAscender-t.typoDescender),r=t.typoAscender-e.maxY;else{let{hhea:t}=this._font;var n=Math.abs(t.ascent-t.descent),r=t.ascent-e.maxY}}return this._font._variationProcessor&&this._font.HVAR&&(t+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR)),this._metrics={advanceWidth:t,advanceHeight:n,leftBearing:a,topBearing:r}}get cbox(){return this._getCBox()}get bbox(){return this._getBBox()}get path(){return this._getPath()}getScaledPath(e){let t=1/this._font.unitsPerEm*e;return this.path.scale(t)}get advanceWidth(){return this._getMetrics().advanceWidth}get advanceHeight(){return this._getMetrics().advanceHeight}get ligatureCaretPositions(){}_getName(){let{post:e}=this._font;if(!e)return null;switch(e.version){case 1:return Jl[this.id];case 2:let t=e.glyphNameIndex[this.id];return t<Jl.length?Jl[t]:e.names[t-Jl.length];case 2.5:return Jl[this.id+e.offsets[this.id]];case 4:return String.fromCharCode(e.map[this.id])}}get name(){return this._getName()}render(e,t){e.save();let a=1/this._font.head.unitsPerEm*t;e.scale(a,a),this.path.toFunction()(e),e.fill(),e.restore()}},p.default(Xl.prototype,"cbox",[x],Object.getOwnPropertyDescriptor(Xl.prototype,"cbox"),Xl.prototype),p.default(Xl.prototype,"bbox",[x],Object.getOwnPropertyDescriptor(Xl.prototype,"bbox"),Xl.prototype),p.default(Xl.prototype,"path",[x],Object.getOwnPropertyDescriptor(Xl.prototype,"path"),Xl.prototype),p.default(Xl.prototype,"advanceWidth",[x],Object.getOwnPropertyDescriptor(Xl.prototype,"advanceWidth"),Xl.prototype),p.default(Xl.prototype,"advanceHeight",[x],Object.getOwnPropertyDescriptor(Xl.prototype,"advanceHeight"),Xl.prototype),p.default(Xl.prototype,"name",[x],Object.getOwnPropertyDescriptor(Xl.prototype,"name"),Xl.prototype),Xl),$l=new c.default.Struct({numberOfContours:c.default.int16,xMin:c.default.int16,yMin:c.default.int16,xMax:c.default.int16,yMax:c.default.int16});class Ql{constructor(e,t,a=0,n=0){this.onCurve=e,this.endContour=t,this.x=a,this.y=n}copy(){return new Ql(this.onCurve,this.endContour,this.x,this.y)}}class es{constructor(e,t,a){this.glyphID=e,this.dx=t,this.dy=a,this.pos=0,this.scaleX=this.scaleY=1,this.scale01=this.scale10=0}}class ts extends Zl{_getCBox(e){if(this._font._variationProcessor&&!e)return this.path.cbox;let t=this._font._getTableStream("glyf");t.pos+=this._font.loca.offsets[this.id];let a=$l.decode(t),n=new Wn(a.xMin,a.yMin,a.xMax,a.yMax);return Object.freeze(n)}_parseGlyphCoord(e,t,a,n){if(a){var r=e.readUInt8();n||(r=-r),r+=t}else if(n)r=t;else r=t+e.readInt16BE();return r}_decode(){let e=this._font.loca.offsets[this.id];if(e===this._font.loca.offsets[this.id+1])return null;let t=this._font._getTableStream("glyf");t.pos+=e;let a=t.pos,n=$l.decode(t);return n.numberOfContours>0?this._decodeSimple(n,t):n.numberOfContours<0&&this._decodeComposite(n,t,a),n}_decodeSimple(e,t){e.points=[];let a=new c.default.Array(c.default.uint16,e.numberOfContours).decode(t);e.instructions=new c.default.Array(c.default.uint8,c.default.uint16).decode(t);let n=[],r=a[a.length-1]+1;for(;n.length<r;){var l=t.readUInt8();if(n.push(l),8&l){let e=t.readUInt8();for(let t=0;t<e;t++)n.push(l)}}for(var s=0;s<n.length;s++){l=n[s];let t=new Ql(!!(1&l),a.indexOf(s)>=0,0,0);e.points.push(t)}let i=0;for(s=0;s<n.length;s++){l=n[s];e.points[s].x=i=this._parseGlyphCoord(t,i,2&l,16&l)}let o=0;for(s=0;s<n.length;s++){l=n[s];e.points[s].y=o=this._parseGlyphCoord(t,o,4&l,32&l)}if(this._font._variationProcessor){let t=e.points.slice();t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.slice(-4)}}_decodeComposite(e,t,a=0){e.components=[];let n=!1,r=32;for(;32&r;){r=t.readUInt16BE();let o=t.pos-a,u=t.readUInt16BE();if(n||(n=0!=(256&r)),1&r)var l=t.readInt16BE(),s=t.readInt16BE();else l=t.readInt8(),s=t.readInt8();(i=new es(u,l,s)).pos=o,8&r?i.scaleX=i.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824:64&r?(i.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,i.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824):128&r&&(i.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,i.scale01=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,i.scale10=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,i.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824),e.components.push(i)}if(this._font._variationProcessor){let t=[];for(let a=0;a<e.components.length;a++){var i=e.components[a];t.push(new Ql(!0,!0,i.dx,i.dy))}t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.splice(-4,4);for(let a=0;a<t.length;a++){let n=t[a];e.components[a].dx=n.x,e.components[a].dy=n.y}}return n}_getPhantomPoints(e){let t=this._getCBox(!0);null==this._metrics&&(this._metrics=Zl.prototype._getMetrics.call(this,t));let{advanceWidth:a,advanceHeight:n,leftBearing:r,topBearing:l}=this._metrics;return[new Ql(!1,!0,e.xMin-r,0),new Ql(!1,!0,e.xMin-r+a,0),new Ql(!1,!0,0,e.yMax+l),new Ql(!1,!0,0,e.yMax+l+n)]}_getContours(){let e=this._decode();if(!e)return[];let t=[];if(e.numberOfContours<0)for(let a of e.components){let e=this._font.getGlyph(a.glyphID)._getContours();for(let n=0;n<e.length;n++){let r=e[n];for(let e=0;e<r.length;e++){let n=r[e],l=n.x*a.scaleX+n.y*a.scale01+a.dx,s=n.y*a.scaleY+n.x*a.scale10+a.dy;t.push(new Ql(n.onCurve,n.endContour,l,s))}}}else t=e.points||[];e.phantomPoints&&!this._font.directory.tables.HVAR&&(this._metrics.advanceWidth=e.phantomPoints[1].x-e.phantomPoints[0].x,this._metrics.advanceHeight=e.phantomPoints[3].y-e.phantomPoints[2].y,this._metrics.leftBearing=e.xMin-e.phantomPoints[0].x,this._metrics.topBearing=e.phantomPoints[2].y-e.yMax);let a=[],n=[];for(let e=0;e<t.length;e++){var r=t[e];n.push(r),r.endContour&&(a.push(n),n=[])}return a}_getMetrics(){if(this._metrics)return this._metrics;let e=this._getCBox(!0);return super._getMetrics(e),this._font._variationProcessor&&!this._font.HVAR&&this.path,this._metrics}_getPath(){let e=this._getContours(),t=new Kl;for(let n=0;n<e.length;n++){let r=e[n],l=r[0],s=r[r.length-1],i=0;if(l.onCurve){var a=null;i=1}else{l=s.onCurve?s:new Ql(!1,!1,(l.x+s.x)/2,(l.y+s.y)/2);a=l}t.moveTo(l.x,l.y);for(let e=i;e<r.length;e++){let n=r[e],s=0===e?l:r[e-1];if(s.onCurve&&n.onCurve)t.lineTo(n.x,n.y);else if(s.onCurve&&!n.onCurve)a=n;else if(s.onCurve||n.onCurve){if(s.onCurve||!n.onCurve)throw new Error("Unknown TTF path state");t.quadraticCurveTo(a.x,a.y,n.x,n.y);a=null}else{let e=(s.x+n.x)/2,r=(s.y+n.y)/2;t.quadraticCurveTo(s.x,s.y,e,r);var a=n}}a&&t.quadraticCurveTo(a.x,a.y,l.x,l.y),t.closePath()}return t}}class as extends Zl{_getName(){return this._font.CFF2?super._getName():this._font["CFF "].getGlyphName(this.id)}bias(e){return e.length<1240?107:e.length<33900?1131:32768}_getPath(){let e=this._font.CFF2||this._font["CFF "],{stream:t}=e,a=e.topDict.CharStrings[this.id],n=a.offset+a.length;t.pos=a.offset;let r,l,s=new Kl,i=[],o=[],u=null,d=0,f=0,c=0,h=!1;this._usedGsubrs=r={},this._usedSubrs=l={};let p=e.globalSubrIndex||[],g=this.bias(p),y=e.privateDictForGlyph(this.id)||{},m=y.Subrs||[],b=this.bias(m),w=e.topDict.vstore&&e.topDict.vstore.itemVariationStore,v=y.vsindex,_=this._font._variationProcessor;function C(){null==u&&(u=i.shift()+y.nominalWidthX)}function S(){return i.length%2!=0&&C(),d+=i.length>>1,i.length=0}function x(e,t){h&&s.closePath(),s.moveTo(e,t),h=!0}let k=function(){for(;t.pos<n;){let L=t.readUInt8();if(L<32)switch(L){case 1:case 3:case 18:case 23:S();break;case 4:i.length>1&&C(),c+=i.shift(),x(f,c);break;case 5:for(;i.length>=2;)f+=i.shift(),c+=i.shift(),s.lineTo(f,c);break;case 6:case 7:let T=6===L;for(;i.length>=1;)T?f+=i.shift():c+=i.shift(),s.lineTo(f,c),T=!T;break;case 8:for(;i.length>0;){var a=f+i.shift(),u=c+i.shift(),y=a+i.shift(),A=u+i.shift();f=y+i.shift(),c=A+i.shift(),s.bezierCurveTo(a,u,y,A,f,c)}break;case 10:var P=i.pop()+b,I=m[P];if(I){l[P]=!0;var O=t.pos,F=n;t.pos=I.offset,n=I.offset+I.length,k(),t.pos=O,n=F}break;case 11:if(e.version>=2)break;return;case 14:if(e.version>=2)break;i.length>0&&C(),h&&(s.closePath(),h=!1);break;case 15:if(e.version<2)throw new Error("vsindex operator not supported in CFF v1");v=i.pop();break;case 16:{if(e.version<2)throw new Error("blend operator not supported in CFF v1");if(!_)throw new Error("blend operator in non-variation font");let t=_.getBlendVector(w,v),a=i.pop(),n=a*t.length,r=i.length-n,l=r-a;for(let e=0;e<a;e++){let a=i[l+e];for(let e=0;e<t.length;e++)a+=t[e]*i[r++];i[l+e]=a}for(;n--;)i.pop();break}case 19:case 20:S(),t.pos+=d+7>>3;break;case 21:i.length>2&&C(),f+=i.shift(),c+=i.shift(),x(f,c);break;case 22:i.length>1&&C(),f+=i.shift(),x(f,c);break;case 24:for(;i.length>=8;){a=f+i.shift(),u=c+i.shift(),y=a+i.shift(),A=u+i.shift();f=y+i.shift(),c=A+i.shift(),s.bezierCurveTo(a,u,y,A,f,c)}f+=i.shift(),c+=i.shift(),s.lineTo(f,c);break;case 25:for(;i.length>=8;)f+=i.shift(),c+=i.shift(),s.lineTo(f,c);a=f+i.shift(),u=c+i.shift(),y=a+i.shift(),A=u+i.shift();f=y+i.shift(),c=A+i.shift(),s.bezierCurveTo(a,u,y,A,f,c);break;case 26:for(i.length%2&&(f+=i.shift());i.length>=4;)a=f,u=c+i.shift(),y=a+i.shift(),A=u+i.shift(),f=y,c=A+i.shift(),s.bezierCurveTo(a,u,y,A,f,c);break;case 27:for(i.length%2&&(c+=i.shift());i.length>=4;)a=f+i.shift(),u=c,y=a+i.shift(),A=u+i.shift(),f=y+i.shift(),c=A,s.bezierCurveTo(a,u,y,A,f,c);break;case 28:i.push(t.readInt16BE());break;case 29:if(P=i.pop()+g,I=p[P]){r[P]=!0;O=t.pos,F=n;t.pos=I.offset,n=I.offset+I.length,k(),t.pos=O,n=F}break;case 30:case 31:{let e=31===L;for(;i.length>=4;)e?(a=f+i.shift(),u=c,y=a+i.shift(),A=u+i.shift(),c=A+i.shift(),f=y+(1===i.length?i.shift():0)):(a=f,u=c+i.shift(),y=a+i.shift(),A=u+i.shift(),f=y+i.shift(),c=A+(1===i.length?i.shift():0)),s.bezierCurveTo(a,u,y,A,f,c),e=!e;break}case 12:switch(L=t.readUInt8(),L){case 3:let e=i.pop(),t=i.pop();i.push(e&&t?1:0);break;case 4:e=i.pop(),t=i.pop(),i.push(e||t?1:0);break;case 5:e=i.pop(),i.push(e?0:1);break;case 9:e=i.pop(),i.push(Math.abs(e));break;case 10:e=i.pop(),t=i.pop(),i.push(e+t);break;case 11:e=i.pop(),t=i.pop(),i.push(e-t);break;case 12:e=i.pop(),t=i.pop(),i.push(e/t);break;case 14:e=i.pop(),i.push(-e);break;case 15:e=i.pop(),t=i.pop(),i.push(e===t?1:0);break;case 18:i.pop();break;case 20:let n=i.pop(),r=i.pop();o[r]=n;break;case 21:r=i.pop(),i.push(o[r]||0);break;case 22:let l=i.pop(),d=i.pop(),h=i.pop(),p=i.pop();i.push(h<=p?l:d);break;case 23:i.push(Math.random());break;case 24:e=i.pop(),t=i.pop(),i.push(e*t);break;case 26:e=i.pop(),i.push(Math.sqrt(e));break;case 27:e=i.pop(),i.push(e,e);break;case 28:e=i.pop(),t=i.pop(),i.push(t,e);break;case 29:r=i.pop(),r<0?r=0:r>i.length-1&&(r=i.length-1),i.push(i[r]);break;case 30:let g=i.pop(),m=i.pop();if(m>=0)for(;m>0;){var D=i[g-1];for(let e=g-2;e>=0;e--)i[e+1]=i[e];i[0]=D,m--}else for(;m<0;){D=i[0];for(let e=0;e<=g;e++)i[e]=i[e+1];i[g-1]=D,m++}break;case 34:a=f+i.shift(),u=c,y=a+i.shift(),A=u+i.shift();let b=y+i.shift(),w=A,v=b+i.shift(),_=w,C=v+i.shift(),S=_,x=C+i.shift(),k=S;f=x,c=k,s.bezierCurveTo(a,u,y,A,b,w),s.bezierCurveTo(v,_,C,S,x,k);break;case 35:let P=[];for(let e=0;e<=5;e++)f+=i.shift(),c+=i.shift(),P.push(f,c);s.bezierCurveTo(...P.slice(0,6)),s.bezierCurveTo(...P.slice(6)),i.shift();break;case 36:a=f+i.shift(),u=c+i.shift(),y=a+i.shift(),A=u+i.shift(),b=y+i.shift(),w=A,v=b+i.shift(),_=w,C=v+i.shift(),S=_+i.shift(),x=C+i.shift(),k=S,f=x,c=k,s.bezierCurveTo(a,u,y,A,b,w),s.bezierCurveTo(v,_,C,S,x,k);break;case 37:let I=f,O=c;P=[];for(let e=0;e<=4;e++)f+=i.shift(),c+=i.shift(),P.push(f,c);Math.abs(f-I)>Math.abs(c-O)?(f+=i.shift(),c=O):(f=I,c+=i.shift()),P.push(f,c),s.bezierCurveTo(...P.slice(0,6)),s.bezierCurveTo(...P.slice(6));break;default:throw new Error(`Unknown op: 12 ${L}`)}break;default:throw new Error(`Unknown op: ${L}`)}else if(L<247)i.push(L-139);else if(L<251){var T=t.readUInt8();i.push(256*(L-247)+T+108)}else if(L<255){T=t.readUInt8();i.push(256*-(L-251)-T-108)}else i.push(t.readInt32BE()/65536)}};return k(),h&&s.closePath(),s}}let ns=new c.default.Struct({originX:c.default.uint16,originY:c.default.uint16,type:new c.default.String(4),data:new c.default.Buffer((e=>e.parent.buflen-e._currentOffset))});class rs extends ts{getImageForSize(e){for(let a=0;a<this._font.sbix.imageTables.length;a++){var t=this._font.sbix.imageTables[a];if(t.ppem>=e)break}let a=t.imageOffsets,n=a[this.id],r=a[this.id+1];return n===r?null:(this._font.stream.pos=n,ns.decode(this._font.stream,{buflen:r-n}))}render(e,t){let a=this.getImageForSize(t);if(null!=a){let n=t/this._font.unitsPerEm;e.image(a.data,{height:t,x:a.originX,y:(this.bbox.minY-a.originY)*n})}this._font.sbix.flags.renderOutlines&&super.render(e,t)}}class ls{constructor(e,t){this.glyph=e,this.color=t}}class ss extends Zl{_getBBox(){let e=new Wn;for(let t=0;t<this.layers.length;t++){let a=this.layers[t].glyph.bbox;e.addPoint(a.minX,a.minY),e.addPoint(a.maxX,a.maxY)}return e}get layers(){let e=this._font.CPAL,t=this._font.COLR,a=0,n=t.baseGlyphRecord.length-1;for(;a<=n;){let e=a+n>>1;var r=t.baseGlyphRecord[e];if(this.id<r.gid)n=e-1;else{if(!(this.id>r.gid)){var l=r;break}a=e+1}}if(null==l){var s=this._font._getBaseGlyph(this.id);return[new ls(s,o={red:0,green:0,blue:0,alpha:255})]}let i=[];for(let a=l.firstLayerIndex;a<l.firstLayerIndex+l.numLayers;a++){r=t.layerRecords[a];var o=e.colorRecords[r.paletteIndex];s=this._font._getBaseGlyph(r.gid);i.push(new ls(s,o))}return i}render(e,t){for(let{glyph:a,color:n}of this.layers)e.fillColor([n.red,n.green,n.blue],n.alpha/255*100),a.render(e,t)}}class is{constructor(e,t){this.font=e,this.normalizedCoords=this.normalizeCoords(t),this.blendVectors=new Map}normalizeCoords(e){let t=[];for(var a=0;a<this.font.fvar.axis.length;a++){let n=this.font.fvar.axis[a];e[a]<n.defaultValue?t.push((e[a]-n.defaultValue+Number.EPSILON)/(n.defaultValue-n.minValue+Number.EPSILON)):t.push((e[a]-n.defaultValue+Number.EPSILON)/(n.maxValue-n.defaultValue+Number.EPSILON))}if(this.font.avar)for(a=0;a<this.font.avar.segment.length;a++){let e=this.font.avar.segment[a];for(let n=0;n<e.correspondence.length;n++){let r=e.correspondence[n];if(n>=1&&t[a]<r.fromCoord){let l=e.correspondence[n-1];t[a]=((t[a]-l.fromCoord)*(r.toCoord-l.toCoord)+Number.EPSILON)/(r.fromCoord-l.fromCoord+Number.EPSILON)+l.toCoord;break}}}return t}transformPoints(e,t){if(!this.font.fvar||!this.font.gvar)return;let{gvar:a}=this.font;if(e>=a.glyphCount)return;let n=a.offsets[e];if(n===a.offsets[e+1])return;let{stream:r}=this.font;if(r.pos=n,r.pos>=r.length)return;let l=r.readUInt16BE(),s=n+r.readUInt16BE();if(32768&l){var i=r.pos;r.pos=s;var o=this.decodePoints();s=r.pos,r.pos=i}let u=t.map((e=>e.copy()));l&=4095;for(let e=0;e<l;e++){let e=r.readUInt16BE(),n=r.readUInt16BE();if(32768&n){var d=[];for(let e=0;e<a.axisCount;e++)d.push(r.readInt16BE()/16384)}else{if((4095&n)>=a.globalCoordCount)throw new Error("Invalid gvar table");d=a.globalCoords[4095&n]}if(16384&n){var f=[];for(let e=0;e<a.axisCount;e++)f.push(r.readInt16BE()/16384);var c=[];for(let e=0;e<a.axisCount;e++)c.push(r.readInt16BE()/16384)}let l=this.tupleFactor(n,d,f,c);if(0===l){s+=e;continue}i=r.pos;if(r.pos=s,8192&n)var h=this.decodePoints();else h=o;let g=0===h.length?t.length:h.length,y=this.decodeDeltas(g),m=this.decodeDeltas(g);if(0===h.length)for(let e=0;e<t.length;e++){var p=t[e];p.x+=Math.round(y[e]*l),p.y+=Math.round(m[e]*l)}else{let e=u.map((e=>e.copy())),a=t.map((()=>!1));for(let n=0;n<h.length;n++){let r=h[n];if(r<t.length){let t=e[r];a[r]=!0,t.x+=Math.round(y[n]*l),t.y+=Math.round(m[n]*l)}}this.interpolateMissingDeltas(e,u,a);for(let a=0;a<t.length;a++){let n=e[a].x-u[a].x,r=e[a].y-u[a].y;t[a].x+=n,t[a].y+=r}}s+=e,r.pos=i}}decodePoints(){let e=this.font.stream,t=e.readUInt8();128&t&&(t=(127&t)<<8|e.readUInt8());let a=new Uint16Array(t),n=0,r=0;for(;n<t;){let l=e.readUInt8(),s=1+(127&l),i=128&l?e.readUInt16:e.readUInt8;for(let l=0;l<s&&n<t;l++)r+=i.call(e),a[n++]=r}return a}decodeDeltas(e){let t=this.font.stream,a=0,n=new Int16Array(e);for(;a<e;){let r=t.readUInt8(),l=1+(63&r);if(128&r)a+=l;else{let s=64&r?t.readInt16BE:t.readInt8;for(let r=0;r<l&&a<e;r++)n[a++]=s.call(t)}}return n}tupleFactor(e,t,a,n){let r=this.normalizedCoords,{gvar:l}=this.font,s=1;for(let i=0;i<l.axisCount;i++)if(0!==t[i]){if(0===r[i])return 0;if(0==(16384&e)){if(r[i]<Math.min(0,t[i])||r[i]>Math.max(0,t[i]))return 0;s=(s*r[i]+Number.EPSILON)/(t[i]+Number.EPSILON)}else{if(r[i]<a[i]||r[i]>n[i])return 0;s=r[i]<t[i]?s*(r[i]-a[i]+Number.EPSILON)/(t[i]-a[i]+Number.EPSILON):s*(n[i]-r[i]+Number.EPSILON)/(n[i]-t[i]+Number.EPSILON)}}return s}interpolateMissingDeltas(e,t,a){if(0===e.length)return;let n=0;for(;n<e.length;){let r=n,l=n,s=e[l];for(;!s.endContour;)s=e[++l];for(;n<=l&&!a[n];)n++;if(n>l)continue;let i=n,o=n;for(n++;n<=l;)a[n]&&(this.deltaInterpolate(o+1,n-1,o,n,t,e),o=n),n++;o===i?this.deltaShift(r,l,o,t,e):(this.deltaInterpolate(o+1,l,o,i,t,e),i>0&&this.deltaInterpolate(r,i-1,o,i,t,e)),n=l+1}}deltaInterpolate(e,t,a,n,r,l){if(e>t)return;let s=["x","y"];for(let o=0;o<s.length;o++){let u=s[o];if(r[a][u]>r[n][u]){var i=a;a=n,n=i}let d=r[a][u],f=r[n][u],c=l[a][u],h=l[n][u];if(d!==f||c===h){let a=d===f?0:(h-c)/(f-d);for(let n=e;n<=t;n++){let e=r[n][u];e<=d?e+=c-d:e>=f?e+=h-f:e=c+(e-d)*a,l[n][u]=e}}}}deltaShift(e,t,a,n,r){let l=r[a].x-n[a].x,s=r[a].y-n[a].y;if(0!==l||0!==s)for(let n=e;n<=t;n++)n!==a&&(r[n].x+=l,r[n].y+=s)}getAdvanceAdjustment(e,t){let a,n;if(t.advanceWidthMapping){let r=e;r>=t.advanceWidthMapping.mapCount&&(r=t.advanceWidthMapping.mapCount-1),t.advanceWidthMapping.entryFormat,({outerIndex:a,innerIndex:n}=t.advanceWidthMapping.mapData[r])}else a=0,n=e;return this.getDelta(t.itemVariationStore,a,n)}getDelta(e,t,a){if(t>=e.itemVariationData.length)return 0;let n=e.itemVariationData[t];if(a>=n.deltaSets.length)return 0;let r=n.deltaSets[a],l=this.getBlendVector(e,t),s=0;for(let e=0;e<n.regionIndexCount;e++)s+=r.deltas[e]*l[e];return s}getBlendVector(e,t){let a=e.itemVariationData[t];if(this.blendVectors.has(a))return this.blendVectors.get(a);let n=this.normalizedCoords,r=[];for(let t=0;t<a.regionIndexCount;t++){let l=1,s=a.regionIndexes[t],i=e.variationRegionList.variationRegions[s];for(let e=0;e<i.length;e++){let t,a=i[e];t=a.startCoord>a.peakCoord||a.peakCoord>a.endCoord||a.startCoord<0&&a.endCoord>0&&0!==a.peakCoord||0===a.peakCoord?1:n[e]<a.startCoord||n[e]>a.endCoord?0:n[e]===a.peakCoord?1:n[e]<a.peakCoord?(n[e]-a.startCoord+Number.EPSILON)/(a.peakCoord-a.startCoord+Number.EPSILON):(a.endCoord-n[e]+Number.EPSILON)/(a.endCoord-a.peakCoord+Number.EPSILON),l*=t}r[t]=l}return this.blendVectors.set(a,r),r}}const os=Promise.resolve();class us{constructor(e){this.font=e,this.glyphs=[],this.mapping={},this.includeGlyph(0)}includeGlyph(e){return"object"==typeof e&&(e=e.id),null==this.mapping[e]&&(this.glyphs.push(e),this.mapping[e]=this.glyphs.length-1),this.mapping[e]}encodeStream(){let e=new c.default.EncodeStream;return os.then((()=>(this.encode(e),e.end()))),e}}class ds{static size(e){return e>=0&&e<=255?1:2}static encode(e,t){t>=0&&t<=255?e.writeUInt8(t):e.writeInt16BE(t)}}let fs=new c.default.Struct({numberOfContours:c.default.int16,xMin:c.default.int16,yMin:c.default.int16,xMax:c.default.int16,yMax:c.default.int16,endPtsOfContours:new c.default.Array(c.default.uint16,"numberOfContours"),instructions:new c.default.Array(c.default.uint8,c.default.uint16),flags:new c.default.Array(c.default.uint8,0),xPoints:new c.default.Array(ds,0),yPoints:new c.default.Array(ds,0)});class cs{encodeSimple(e,t=[]){let a=[],n=[],r=[],l=[],s=0,i=0,o=0,u=0,d=0;for(let t=0;t<e.commands.length;t++){let f=e.commands[t];for(let a=0;a<f.args.length;a+=2){let c=f.args[a],h=f.args[a+1],p=0;if("quadraticCurveTo"===f.command&&2===a){let a=e.commands[t+1];if(a&&"quadraticCurveTo"===a.command){let e=(i+a.args[0])/2,t=(o+a.args[1])/2;if(c===e&&h===t)continue}}"quadraticCurveTo"===f.command&&0===a||(p|=1),p=this._encodePoint(c,i,n,p,2,16),p=this._encodePoint(h,o,r,p,4,32),p===u&&s<255?(l[l.length-1]|=8,s++):(s>0&&(l.push(s),s=0),l.push(p),u=p),i=c,o=h,d++}"closePath"===f.command&&a.push(d-1)}e.commands.length>1&&"closePath"!==e.commands[e.commands.length-1].command&&a.push(d-1);let f=e.bbox,h={numberOfContours:a.length,xMin:f.minX,yMin:f.minY,xMax:f.maxX,yMax:f.maxY,endPtsOfContours:a,instructions:t,flags:l,xPoints:n,yPoints:r},p=fs.size(h),g=4-p%4,y=new c.default.EncodeStream(p+g);return fs.encode(y,h),0!==g&&y.fill(0,g),y.buffer}_encodePoint(e,t,a,n,r,l){let s=e-t;return e===t?n|=l:(-255<=s&&s<=255&&(n|=r,s<0?s=-s:n|=l),a.push(s)),n}}class hs extends us{constructor(e){super(e),this.glyphEncoder=new cs}_addGlyph(e){let t=this.font.getGlyph(e),a=t._decode(),n=this.font.loca.offsets[e],r=this.font.loca.offsets[e+1],l=this.font._getTableStream("glyf");l.pos+=n;let s=l.readBuffer(r-n);if(a&&a.numberOfContours<0){s=Buffer.from(s);for(let t of a.components)e=this.includeGlyph(t.glyphID),s.writeUInt16BE(e,t.pos)}else a&&this.font._variationProcessor&&(s=this.glyphEncoder.encodeSimple(t.path,a.instructions));return this.glyf.push(s),this.loca.offsets.push(this.offset),this.hmtx.metrics.push({advance:t.advanceWidth,bearing:t._getMetrics().leftBearing}),this.offset+=s.length,this.glyf.length-1}encode(e){this.glyf=[],this.offset=0,this.loca={offsets:[],version:this.font.loca.version},this.hmtx={metrics:[],bearings:[]};let t=0;for(;t<this.glyphs.length;)this._addGlyph(this.glyphs[t++]);let a=w.default(this.font.maxp);a.numGlyphs=this.glyf.length,this.loca.offsets.push(this.offset);let n=w.default(this.font.head);n.indexToLocFormat=this.loca.version;let r=w.default(this.font.hhea);r.numberOfMetrics=this.hmtx.metrics.length,Vn.encode(e,{tables:{head:n,hhea:r,loca:this.loca,maxp:a,"cvt ":this.font["cvt "],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}})}}class ps extends us{constructor(e){if(super(e),this.cff=this.font["CFF "],!this.cff)throw new Error("Not a CFF Font")}subsetCharstrings(){this.charstrings=[];let e={};for(let t of this.glyphs){this.charstrings.push(this.cff.getCharString(t));let a=this.font.getGlyph(t);a.path;for(let t in a._usedGsubrs)e[t]=!0}this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,e)}subsetSubrs(e,t){let a=[];for(let n=0;n<e.length;n++){let r=e[n];t[n]?(this.cff.stream.pos=r.offset,a.push(this.cff.stream.readBuffer(r.length))):a.push(Buffer.from([11]))}return a}subsetFontdict(e){e.FDArray=[],e.FDSelect={version:0,fds:[]};let t={},a=[];for(let n of this.glyphs){let r=this.cff.fdForGlyph(n);if(null==r)continue;t[r]||(e.FDArray.push(Object.assign({},this.cff.topDict.FDArray[r])),a.push({})),t[r]=!0,e.FDSelect.fds.push(e.FDArray.length-1);let l=this.font.getGlyph(n);l.path;for(let e in l._usedSubrs)a[a.length-1][e]=!0}for(let t=0;t<e.FDArray.length;t++){let n=e.FDArray[t];delete n.FontName,n.Private&&n.Private.Subrs&&(n.Private=Object.assign({},n.Private),n.Private.Subrs=this.subsetSubrs(n.Private.Subrs,a[t]))}}createCIDFontdict(e){let t={};for(let e of this.glyphs){let a=this.font.getGlyph(e);a.path;for(let e in a._usedSubrs)t[e]=!0}let a=Object.assign({},this.cff.topDict.Private);return this.cff.topDict.Private&&this.cff.topDict.Private.Subrs&&(a.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,t)),e.FDArray=[{Private:a}],e.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length}}addString(e){return e?(this.strings||(this.strings=[]),this.strings.push(e),de.length+this.strings.length-1):null}encode(e){this.subsetCharstrings();let t={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]},a=Object.assign({},this.cff.topDict);a.Private=null,a.charset=t,a.Encoding=null,a.CharStrings=this.charstrings;for(let e of["version","Notice","Copyright","FullName","FamilyName","Weight","PostScript","BaseFontName","FontName"])a[e]=this.addString(this.cff.string(a[e]));a.ROS=[this.addString("Adobe"),this.addString("Identity"),0],a.CIDCount=this.charstrings.length,this.cff.isCIDFont?this.subsetFontdict(a):this.createCIDFontdict(a);let n={version:1,hdrSize:this.cff.hdrSize,offSize:4,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[a],stringIndex:this.strings,globalSubrIndex:this.gsubrs};ft.encode(e,n)}}var gs;let ys=(gs=class e{static probe(e){let t=e.toString("ascii",0,4);return"true"===t||"OTTO"===t||t===String.fromCharCode(0,1,0,0)}constructor(e,t=null){this.defaultLanguage=null,this.stream=e,this.variationCoords=t,this._directoryPos=this.stream.pos,this._tables={},this._glyphs={},this._decodeDirectory();for(let e in this.directory.tables){let t=this.directory.tables[e];En[e]&&t.length>0&&Object.defineProperty(this,e,{get:this._getTable.bind(this,t)})}}setDefaultLanguage(e=null){this.defaultLanguage=e}_getTable(e){if(!(e.tag in this._tables))try{this._tables[e.tag]=this._decodeTable(e)}catch(t){C.logErrors&&(console.error(`Error decoding table ${e.tag}`),console.error(t.stack))}return this._tables[e.tag]}_getTableStream(e){let t=this.directory.tables[e];return t?(this.stream.pos=t.offset,this.stream):null}_decodeDirectory(){return this.directory=Vn.decode(this.stream,{_startOffset:0})}_decodeTable(e){let t=this.stream.pos,a=this._getTableStream(e.tag),n=En[e.tag].decode(a,this,e.length);return this.stream.pos=t,n}getName(e,t=this.defaultLanguage||C.defaultLanguage){let a=this.name&&this.name.records[e];return a&&(a[t]||a[this.defaultLanguage]||a[C.defaultLanguage]||a.en||a[Object.keys(a)[0]])||null}get postscriptName(){return this.getName("postscriptName")}get fullName(){return this.getName("fullName")}get familyName(){return this.getName("fontFamily")}get subfamilyName(){return this.getName("fontSubfamily")}get copyright(){return this.getName("copyright")}get version(){return this.getName("version")}get ascent(){return this.hhea.ascent}get descent(){return this.hhea.descent}get lineGap(){return this.hhea.lineGap}get underlinePosition(){return this.post.underlinePosition}get underlineThickness(){return this.post.underlineThickness}get italicAngle(){return this.post.italicAngle}get capHeight(){let e=this["OS/2"];return e?e.capHeight:this.ascent}get xHeight(){let e=this["OS/2"];return e?e.xHeight:0}get numGlyphs(){return this.maxp.numGlyphs}get unitsPerEm(){return this.head.unitsPerEm}get bbox(){return Object.freeze(new Wn(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax))}get _cmapProcessor(){return new jn(this.cmap)}get characterSet(){return this._cmapProcessor.getCharacterSet()}hasGlyphForCodePoint(e){return!!this._cmapProcessor.lookup(e)}glyphForCodePoint(e){return this.getGlyph(this._cmapProcessor.lookup(e),[e])}glyphsForString(e){let t=[],a=e.length,n=0,r=-1,l=-1;for(;n<=a;){let s=0,i=0;if(n<a){if(s=e.charCodeAt(n++),55296<=s&&s<=56319&&n<a){let t=e.charCodeAt(n);56320<=t&&t<=57343&&(n++,s=((1023&s)<<10)+(1023&t)+65536)}i=65024<=s&&s<=65039||917760<=s&&s<=917999?1:0}else n++;0===l&&1===i?t.push(this.getGlyph(this._cmapProcessor.lookup(r,s),[r,s])):0===l&&0===i&&t.push(this.glyphForCodePoint(r)),r=s,l=i}return t}get _layoutEngine(){return new Yl(this)}layout(e,t,a,n,r){return this._layoutEngine.layout(e,t,a,n,r)}stringsForGlyph(e){return this._layoutEngine.stringsForGlyph(e)}get availableFeatures(){return this._layoutEngine.getAvailableFeatures()}getAvailableFeatures(e,t){return this._layoutEngine.getAvailableFeatures(e,t)}_getBaseGlyph(e,t=[]){return this._glyphs[e]||(this.directory.tables.glyf?this._glyphs[e]=new ts(e,t,this):(this.directory.tables["CFF "]||this.directory.tables.CFF2)&&(this._glyphs[e]=new as(e,t,this))),this._glyphs[e]||null}getGlyph(e,t=[]){return this._glyphs[e]||(this.directory.tables.sbix?this._glyphs[e]=new rs(e,t,this):this.directory.tables.COLR&&this.directory.tables.CPAL?this._glyphs[e]=new ss(e,t,this):this._getBaseGlyph(e,t)),this._glyphs[e]||null}createSubset(){return this.directory.tables["CFF "]?new ps(this):new hs(this)}get variationAxes(){let e={};if(!this.fvar)return e;for(let t of this.fvar.axis)e[t.axisTag.trim()]={name:t.name.en,min:t.minValue,default:t.defaultValue,max:t.maxValue};return e}get namedVariations(){let e={};if(!this.fvar)return e;for(let t of this.fvar.instance){let a={};for(let e=0;e<this.fvar.axis.length;e++){a[this.fvar.axis[e].axisTag.trim()]=t.coord[e]}e[t.name.en]=a}return e}getVariation(t){if(!this.directory.tables.fvar||!(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2))throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");if("string"==typeof t&&(t=this.namedVariations[t]),"object"!=typeof t)throw new Error("Variation settings must be either a variation name or settings object.");let a=this.fvar.axis.map(((e,a)=>{let n=e.axisTag.trim();return n in t?Math.max(e.minValue,Math.min(e.maxValue,t[n])):e.defaultValue})),n=new c.default.DecodeStream(this.stream.buffer);n.pos=this._directoryPos;let r=new e(n,a);return r._tables=this._tables,r}get _variationProcessor(){if(!this.fvar)return null;let e=this.variationCoords;return e||this.CFF2?(e||(e=this.fvar.axis.map((e=>e.defaultValue))),new is(this,e)):null}getFont(e){return this.getVariation(e)}},p.default(gs.prototype,"bbox",[x],Object.getOwnPropertyDescriptor(gs.prototype,"bbox"),gs.prototype),p.default(gs.prototype,"_cmapProcessor",[x],Object.getOwnPropertyDescriptor(gs.prototype,"_cmapProcessor"),gs.prototype),p.default(gs.prototype,"characterSet",[x],Object.getOwnPropertyDescriptor(gs.prototype,"characterSet"),gs.prototype),p.default(gs.prototype,"_layoutEngine",[x],Object.getOwnPropertyDescriptor(gs.prototype,"_layoutEngine"),gs.prototype),p.default(gs.prototype,"variationAxes",[x],Object.getOwnPropertyDescriptor(gs.prototype,"variationAxes"),gs.prototype),p.default(gs.prototype,"namedVariations",[x],Object.getOwnPropertyDescriptor(gs.prototype,"namedVariations"),gs.prototype),p.default(gs.prototype,"_variationProcessor",[x],Object.getOwnPropertyDescriptor(gs.prototype,"_variationProcessor"),gs.prototype),gs),ms=new c.default.Struct({tag:new c.default.String(4),offset:new c.default.Pointer(c.default.uint32,"void",{type:"global"}),compLength:c.default.uint32,length:c.default.uint32,origChecksum:c.default.uint32}),bs=new c.default.Struct({tag:new c.default.String(4),flavor:c.default.uint32,length:c.default.uint32,numTables:c.default.uint16,reserved:new c.default.Reserved(c.default.uint16),totalSfntSize:c.default.uint32,majorVersion:c.default.uint16,minorVersion:c.default.uint16,metaOffset:c.default.uint32,metaLength:c.default.uint32,metaOrigLength:c.default.uint32,privOffset:c.default.uint32,privLength:c.default.uint32,tables:new c.default.Array(ms,"numTables")});bs.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e};class ws extends ts{_decode(){return this._font._transformedGlyphs[this.id]}_getCBox(){return this.path.bbox}}const vs={decode(e){let t=0,a=[0,1,2,3,4];for(let n=0;n<a.length;n++){let a=e.readUInt8();if(3758096384&t)throw new Error("Overflow");if(t=t<<7|127&a,0==(128&a))return t}throw new Error("Bad base 128 number")}};let _s=["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"],Cs=new c.default.Struct({flags:c.default.uint8,customTag:new c.default.Optional(new c.default.String(4),(e=>63==(63&e.flags))),tag:e=>e.customTag||_s[63&e.flags],length:vs,transformVersion:e=>e.flags>>>6&3,transformed:e=>"glyf"===e.tag||"loca"===e.tag?0===e.transformVersion:0!==e.transformVersion,transformLength:new c.default.Optional(vs,(e=>e.transformed))}),Ss=new c.default.Struct({tag:new c.default.String(4),flavor:c.default.uint32,length:c.default.uint32,numTables:c.default.uint16,reserved:new c.default.Reserved(c.default.uint16),totalSfntSize:c.default.uint32,totalCompressedSize:c.default.uint32,majorVersion:c.default.uint16,minorVersion:c.default.uint16,metaOffset:c.default.uint32,metaLength:c.default.uint32,metaOrigLength:c.default.uint32,privOffset:c.default.uint32,privLength:c.default.uint32,tables:new c.default.Array(Cs,"numTables")});Ss.process=function(){let e={};for(let t=0;t<this.tables.length;t++){let a=this.tables[t];e[a.tag]=a}return this.tables=e};class xs extends ys{static probe(e){return"wOF2"===e.toString("ascii",0,4)}_decodeDirectory(){this.directory=Ss.decode(this.stream),this._dataPos=this.stream.pos}_decompress(){if(!this._decompressed){this.stream.pos=this._dataPos;let e=this.stream.readBuffer(this.directory.totalCompressedSize),t=0;for(let e in this.directory.tables){let a=this.directory.tables[e];a.offset=t,t+=null!=a.transformLength?a.transformLength:a.length}let a=_.default(e,t);if(!a)throw new Error("Error decoding compressed data in WOFF2");this.stream=new c.default.DecodeStream(Buffer.from(a)),this._decompressed=!0}}_decodeTable(e){return this._decompress(),super._decodeTable(e)}_getBaseGlyph(e,t=[]){if(!this._glyphs[e])return this.directory.tables.glyf&&this.directory.tables.glyf.transformed?(this._transformedGlyphs||this._transformGlyfTable(),this._glyphs[e]=new ws(e,t,this)):super._getBaseGlyph(e,t)}_transformGlyfTable(){this._decompress(),this.stream.pos=this.directory.tables.glyf.offset;let e=As.decode(this.stream),t=[];for(let a=0;a<e.numGlyphs;a++){let a={},n=e.nContours.readInt16BE();if(a.numberOfContours=n,n>0){let t=[],r=0;for(let a=0;a<n;a++){r+=Ps(e.nPoints),t.push(r)}a.points=Os(e.flags,e.glyphs,r);for(let e=0;e<n;e++)a.points[t[e]-1].endContour=!0;Ps(e.glyphs)}else if(n<0){ts.prototype._decodeComposite.call({_font:this},a,e.composites)&&Ps(e.glyphs)}t.push(a)}this._transformedGlyphs=t}}class ks{constructor(e){this.length=e,this._buf=new c.default.Buffer(e)}decode(e,t){return new c.default.DecodeStream(this._buf.decode(e,t))}}let As=new c.default.Struct({version:c.default.uint32,numGlyphs:c.default.uint16,indexFormat:c.default.uint16,nContourStreamSize:c.default.uint32,nPointsStreamSize:c.default.uint32,flagStreamSize:c.default.uint32,glyphStreamSize:c.default.uint32,compositeStreamSize:c.default.uint32,bboxStreamSize:c.default.uint32,instructionStreamSize:c.default.uint32,nContours:new ks("nContourStreamSize"),nPoints:new ks("nPointsStreamSize"),flags:new ks("flagStreamSize"),glyphs:new ks("glyphStreamSize"),composites:new ks("compositeStreamSize"),bboxes:new ks("bboxStreamSize"),instructions:new ks("instructionStreamSize")});function Ps(e){let t=e.readUInt8();return 253===t?e.readUInt16BE():255===t?e.readUInt8()+253:254===t?e.readUInt8()+506:t}function Is(e,t){return 1&e?t:-t}function Os(e,t,a){let n,r=n=0,l=[];for(let o=0;o<a;o++){let a=0,o=0,u=e.readUInt8(),d=!(u>>7);if(u&=127,u<10)a=0,o=Is(u,((14&u)<<7)+t.readUInt8());else if(u<20)a=Is(u,((u-10&14)<<7)+t.readUInt8()),o=0;else if(u<84){a=Is(u,1+(48&(s=u-20))+((i=t.readUInt8())>>4)),o=Is(u>>1,1+((12&s)<<2)+(15&i))}else if(u<120){var s;a=Is(u,1+((s=u-84)/12<<8)+t.readUInt8()),o=Is(u>>1,1+(s%12>>2<<8)+t.readUInt8())}else if(u<124){var i=t.readUInt8();let e=t.readUInt8();a=Is(u,(i<<4)+(e>>4)),o=Is(u>>1,((15&e)<<8)+t.readUInt8())}else a=Is(u,t.readUInt16BE()),o=Is(u>>1,t.readUInt16BE());r+=a,n+=o,l.push(new Ql(d,!1,r,n))}return l}let Fs=new c.default.VersionedStruct(c.default.uint32,{65536:{numFonts:c.default.uint32,offsets:new c.default.Array(c.default.uint32,"numFonts")},131072:{numFonts:c.default.uint32,offsets:new c.default.Array(c.default.uint32,"numFonts"),dsigTag:c.default.uint32,dsigLength:c.default.uint32,dsigOffset:c.default.uint32}});let Ds=new c.default.String(c.default.uint8);new c.default.Struct({len:c.default.uint32,buf:new c.default.Buffer("len")});let Ts=new c.default.Struct({id:c.default.uint16,nameOffset:c.default.int16,attr:c.default.uint8,dataOffset:c.default.uint24,handle:c.default.uint32}),Ls=new c.default.Struct({name:new c.default.String(4),maxTypeIndex:c.default.uint16,refList:new c.default.Pointer(c.default.uint16,new c.default.Array(Ts,(e=>e.maxTypeIndex+1)),{type:"parent"})}),Ms=new c.default.Struct({length:c.default.uint16,types:new c.default.Array(Ls,(e=>e.length+1))}),Gs=new c.default.Struct({reserved:new c.default.Reserved(c.default.uint8,24),typeList:new c.default.Pointer(c.default.uint16,Ms),nameListOffset:new c.default.Pointer(c.default.uint16,"void")}),Bs=new c.default.Struct({dataOffset:c.default.uint32,map:new c.default.Pointer(c.default.uint32,Gs),dataLength:c.default.uint32,mapLength:c.default.uint32});C.registerFormat(ys),C.registerFormat(class extends ys{static probe(e){return"wOFF"===e.toString("ascii",0,4)}_decodeDirectory(){this.directory=bs.decode(this.stream,{_startOffset:0})}_getTableStream(e){let t=this.directory.tables[e];if(t){if(this.stream.pos=t.offset,t.compLength<t.length){this.stream.pos+=2;let e=Buffer.alloc(t.length),a=v.default(this.stream.readBuffer(t.compLength-2),e);return new c.default.DecodeStream(a)}return this.stream}return null}}),C.registerFormat(class{static probe(e){return"ttcf"===e.toString("ascii",0,4)}constructor(e){if(this.stream=e,"ttcf"!==e.readString(4))throw new Error("Not a TrueType collection");this.header=Fs.decode(e)}getFont(e){for(let t of this.header.offsets){let a=new c.default.DecodeStream(this.stream.buffer);a.pos=t;let n=new ys(a);if(n.postscriptName===e)return n}return null}get fonts(){let e=[];for(let t of this.header.offsets){let a=new c.default.DecodeStream(this.stream.buffer);a.pos=t,e.push(new ys(a))}return e}}),C.registerFormat(class{static probe(e){let t=new c.default.DecodeStream(e);try{var a=Bs.decode(t)}catch(e){return!1}for(let e of a.map.typeList.types)if("sfnt"===e.name)return!0;return!1}constructor(e){this.stream=e,this.header=Bs.decode(this.stream);for(let e of this.header.map.typeList.types){for(let t of e.refList)t.nameOffset>=0?(this.stream.pos=t.nameOffset+this.header.map.nameListOffset,t.name=Ds.decode(this.stream)):t.name=null;"sfnt"===e.name&&(this.sfnt=e)}}getFont(e){if(!this.sfnt)return null;for(let t of this.sfnt.refList){let a=this.header.dataOffset+t.dataOffset+4,n=new c.default.DecodeStream(this.stream.buffer.slice(a)),r=new ys(n);if(r.postscriptName===e)return r}return null}get fonts(){let e=[];for(let t of this.sfnt.refList){let a=this.header.dataOffset+t.dataOffset+4,n=new c.default.DecodeStream(this.stream.buffer.slice(a));e.push(new ys(n))}return e}}),C.registerFormat(xs),exports.default=C;
